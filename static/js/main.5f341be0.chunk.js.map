{"version":3,"sources":["data/data_not-balanced.csv","data/data_balanced_1.csv","logo.svg","partials/slider.jsx","components/threshold_explorer/threshold_performance.jsx","partials/shape.jsx","partials/typeToggle.jsx","components/threshold_explorer/threshold_explorer.jsx","components/threshold_explorer/threshold_explorer_section.js","components/group_compare/compare_visualizer.jsx","components/group_compare/section.jsx","components/threshold_recommender/recommender.jsx","components/content.jsx","partials/drawerList.jsx","App.js","serviceWorker.js","index.js","data/performance.csv"],"names":["module","exports","ThresholdeSlider","props","getText","value","state","bind","style","position","marginTop","width","top","display","justifyContent","Typography","textAlign","fontWeight","variant","color","this","middleText","OrangeSlider","valueLabelDisplay","valueLabelFormat","aria-label","defaultValue","onChangeCommitted","BlackSlider","Component","makeStyles","theme","root","spacing","margin","height","withStyles","paddingTop","paddingBottom","thumb","backgroundColor","border","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","opacity","Slider","ThresholdPerformance","chartPerformanceRef","React","createRef","getBoxHeight","getWidthHeightRatio","getMargin","getWidth","drawChart","redrawChart","threshold","current","parentElement","offsetWidth","right","bottom","inBetween","resizedFn","setState","window","addEventListener","clearTimeout","setTimeout","d3","remove","performance_data","currentDamaging","damaging","dataCollection","map","d","Math","round","damaging_accuracy","faith_accuracy","damaging_fpr","faith_fpr","damaging_fnr","faith_fnr","eachHeight","svg","append","attr","getPerformanceColor","type","perform","getStrokeColor","preValue","currentValue","forEach","data","index","currentThreshold","x","domain","nice","range","y","getY","xAxis","g","call","tickSize","getXAxis","line","defined","isNaN","area","x1","x2","number","y0","y1","datum","filter","getAreaColor","text","ticks","message","opposite","verticalAlign","className","ref","padding","flexDirection","marginBottom","Circle","size","cx","cy","r","fill","Cross","y2","stroke","strokeWidth","TypeToggle","Grid","item","xs","gridSize","component","Box","ToggleButtonGroup","exclusive","onChange","ToggleButton","ThresholdExplorer","onSliderChange","event","onTypeChange","chartRef","widthHeightRatio","graph1Scale","dotWidth","sliderRange","sliderRight","diff","diameter","id","ValidateIPaddress","a","ipaddress","test","cors","api","axios","get","then","res","page","query","pages","Object","keys","rev","revisions","console","log","title","user","timestamp","comment","err","compare","dd","circles","rev_id","xvalue","parseFloat","confidence_damage","confidence_faith","toFixed","ceil","correct","damaging_label","faith_label","predict","label","sort","b","ca","prev","cnt","abs","category","dodge","customCross","draw","context","s","sqrt","w","moveTo","lineTo","closePath","thresholdText","selectAll","join","on","div","transition","duration","html","topOffset","tooltipHegiht","Number","parseInt","Fragment","container","key","clickTip","getClickTip","Chart","change","data_balanced","goodfaith","slice","nextProps","nextState","performanceData","getPerformance","TP","TN","FP","FN","GroupCompareVisualizer","acc","fpr","fnr","getWholePerformance","defaultPerformance","drawPerformanceChart","compareChartRef","comparePerformanceRef","wholePerformanceRef","getPerformanceWidth","getPerformanceForThreshold","performanceWidth","group1Color","group2Color","wholePerformance","groupOnePerformance","groupTwoPerformance","performanceHeight","blockHeight","chartHeight","offsetHeight","groupOneData","groupTwoData","groupOneFP","length","groupOneTP","groupOneFN","groupOneTN","groupTwoFP","groupTwoTP","groupTwoFN","groupTwoTN","groupOne","groupTwo","all","getPerformanceHeight","performance","groupOnePerf","groupTwoPerf","allPerf","vizHeight","drawPerformance","currentPerformance","larger","groupNumber","largerPerformance","actualx","tooltipx","tooltipy","tooltipHalfWidth","groupOneHeight","groupTwoHeight","groupOneCurrentPerformance","groupTwoCurrentPerformance","min","max","largerPercentage","groupSize","getSymbolColor","fp","tp","fn","tn","cp","dots","dot","push","dotData","sum","children","sliceNumber","centerX","centerY","pow","dotRadius","groupOneDots","groupTwoDots","visualizationRef","getDisclaimer","transform","borderBottom","fontSize","GroupCompareChart","anonData","loggedData","newcomerData","experiencedData","anonymous","newcomer","edit_years","Recommender","onThresChange","thres","onTextChange","target","getData","getObject","array","newArray","arrayIdx","i","elem","accuracy","f1","filter_rate","match_rate","precision","recall","damagingArray","enwiki","models","statistics","thresholds","true","goodfaithArray","damagingData","goodfaithData","recommendations","ranges","param","rec","Aggressive","Cautious","Balanced","j","prop","escape","getRecommendations","borderColor","paddingLeft","borderLeft","paddingRight","orientation","alignItems","subtitle","description","obj","getRec","src","Input","helperText","inputProps","step","alignSelf","getProp","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","SectionHeader","styled","Section","MainContent","data_performance","path","DrawerList","selected","clickSection","List","to","ListItem","klass","button","onClick","createMuiTheme","typography","fontFamily","subtitle1","subtitle2","textTransform","h6","body1","body2","fontStyle","h5","responsiveFontSizes","useStyles","appBar","drawer","flexShrink","drawerPaper","paper","list","textDecoration","toolbar","content","flexGrow","palette","background","default","App","classes","basename","process","ThemeProvider","Drawer","anchor","Paper","elevation","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.5f341be0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/data_not-balanced.2c5d8911.csv\";","module.exports = __webpack_public_path__ + \"static/media/data_balanced_1.718935bd.csv\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\n\nclass ThresholdeSlider extends Component {\n  constructor(props) {\n    super(props);\n    this.getText = this.getText.bind(this);\n  }\n\n  getText = (value) => {\n    return `${value}%`;\n  };\n\n  state = {};\n  render() {\n    // const classes = useStyles ();\n\n    return (\n      <div style={{ position: \"relative\", marginTop: \"5px\" }}>\n        <div\n          style={{\n            position: \"absolute\",\n            width: \"100%\",\n            top: \"10px\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Typography\n            style={{\n              textAlign: \"left\",\n              fontWeight: \"bold\",\n            }}\n          >\n            {[<span>&#9664;</span>, \" Identify More\"]}\n          </Typography>\n\n          <Typography\n            variant=\"body2\"\n            style={{ color: \"gray\", textAlign: \"center\" }}\n          >\n            {this.props.middleText != null ? this.props.middleText() : null}\n          </Typography>\n\n          <Typography style={{ textAlign: \"right\", fontWeight: \"bold\" }}>\n            {[\"Identify Less \", <span>&#9654;</span>]}\n          </Typography>\n        </div>\n        <div>\n          {this.props.color === \"orange\" ? (\n            <OrangeSlider\n              valueLabelDisplay=\"auto\"\n              valueLabelFormat={this.getText}\n              aria-label=\"pretto slider\"\n              defaultValue={this.props.defaultValue}\n              onChangeCommitted={this.props.onChangeCommitted}\n            />\n          ) : (\n            <BlackSlider\n              valueLabelDisplay=\"auto\"\n              valueLabelFormat={this.getText}\n              aria-label=\"pretto slider\"\n              defaultValue={this.props.defaultValue}\n              onChangeCommitted={this.props.onChangeCommitted}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ThresholdeSlider;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 300 + theme.spacing(3) * 2,\n  },\n  margin: {\n    height: theme.spacing(3),\n  },\n}));\n\nconst OrangeSlider = withStyles({\n  root: {\n    color: \"#C57619\",\n    height: 10,\n    paddingTop: \"50px\",\n    paddingBottom: \"0px\",\n  },\n  thumb: {\n    height: 18,\n    width: 18,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -8,\n    marginLeft: -9,\n    \"&:focus, &:hover, &$active\": {\n      boxShadow: \"inherit\",\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: \"calc(-50%+12px)\",\n    fontWeight: \"bold\",\n  },\n  track: {\n    height: 4,\n    borderRadius: 4,\n    color: \"#909090\",\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4,\n    color: \"#C57619\",\n    opacity: \"100%\",\n  },\n})(Slider);\n\nconst BlackSlider = withStyles({\n  root: {\n    color: \"#000000\",\n    height: 10,\n    paddingTop: \"50px\",\n    paddingBottom: \"0px\",\n  },\n  thumb: {\n    height: 18,\n    width: 18,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -8,\n    marginLeft: -9,\n    \"&:focus, &:hover, &$active\": {\n      boxShadow: \"inherit\",\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: \"calc(-50%+12px)\",\n    fontWeight: \"bold\",\n  },\n  track: {\n    height: 4,\n    borderRadius: 4,\n    color: \"#909090\",\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4,\n    color: \"#000000\",\n    opacity: \"100%\",\n  },\n})(Slider);\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styled from \"styled-components\";\n\nclass ThresholdPerformance extends Component {\n  constructor(props) {\n    super(props);\n    this.chartPerformanceRef = React.createRef();\n    this.getBoxHeight = this.getBoxHeight.bind(this);\n    this.getWidthHeightRatio = this.getWidthHeightRatio.bind(this);\n    this.getMargin = this.getMargin.bind(this);\n    this.getWidth = this.getWidth.bind(this);\n    this.drawChart = this.drawChart.bind(this);\n    this.redrawChart = this.redrawChart.bind(this);\n    this.state = {\n      threshold: 80,\n      width: 1000,\n      height: 1000,\n    };\n  }\n\n  getWidthHeightRatio() {\n    return 2.4;\n  }\n\n  getWidth() {\n    if (this.chartPerformanceRef.current == null) {\n      return this.state.width;\n    } else {\n      return this.chartPerformanceRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  getMargin() {\n    return {\n      top: 30,\n      right: 5,\n      bottom: 20,\n      left: 30,\n      inBetween: this.state.width * 0.2,\n    };\n  }\n\n  componentDidMount() {\n    let width = this.getWidth();\n    let height = width * this.getWidthHeightRatio();\n\n    this.setState(\n      {\n        width: width,\n        height: height,\n      },\n      () => {\n        this.drawChart();\n      }\n    );\n\n    let resizedFn;\n    window.addEventListener(\"resize\", () => {\n      clearTimeout(resizedFn);\n      resizedFn = setTimeout(() => {\n        this.redrawChart();\n      }, 200);\n    });\n  }\n\n  redrawChart() {\n    let width = this.getWidth();\n    this.setState({ width: width, height: width * this.getWidthHeightRatio() });\n    d3.select(\".performanceChart svg\").remove();\n    this.drawChart = this.drawChart.bind(this);\n    this.drawChart();\n  }\n\n  drawChart() {\n    if (this.props.performance_data != null) {\n      const currentDamaging = this.props.damaging;\n      const dataAccuracy = this.props.performance_data.map((d) => ({\n        threshold: d.threshold,\n        value: Math.round(\n          (currentDamaging ? d.damaging_accuracy : d.faith_accuracy) * 100\n        ),\n      }));\n\n      const dataFPR = this.props.performance_data.map((d) => ({\n        threshold: d.threshold,\n        value: Math.round(\n          (currentDamaging ? d.damaging_fpr : d.faith_fpr) * 100\n        ),\n      }));\n\n      const dataFNR = this.props.performance_data.map((d) => ({\n        threshold: d.threshold,\n        value: Math.round(\n          (currentDamaging ? d.damaging_fnr : d.faith_fnr) * 100\n        ),\n      }));\n\n      const dataCollection = [dataAccuracy, dataFPR, dataFNR];\n\n      const margin = this.getMargin();\n      let width = this.state.width - margin.left - margin.right;\n      let height = this.state.height - margin.top - margin.bottom;\n      let eachHeight = (height - margin.inBetween * 2) / 3;\n\n      const betweenThreshold = (x1, x2, number) => {\n        return (number >= x1 && number <= x2) || (number <= x1 && number >= x2);\n      };\n\n      //   const xAxis = g =>\n      //     g\n      //       .attr ('transform', `translate(0,${height / 2})`)\n      //       .call (d3.axisBottom (x).ticks (width / 80).tickSizeOuter (0));\n\n      const getXAxis = (x, type) => {\n        switch (type) {\n          case 0:\n            return function (g) {\n              g.attr(\"transform\", `translate(0,${eachHeight + margin.top})`)\n                .attr(\"class\", \"axisGreyY\")\n                .call(d3.axisBottom(x).tickSize(0));\n            };\n            break;\n          case 1:\n            return function (g) {\n              g.attr(\n                \"transform\",\n                `translate(0,${eachHeight * 2 + margin.inBetween + margin.top})`\n              )\n                .attr(\"class\", \"axisGreyY\")\n                .call(d3.axisBottom(x).tickSize(0));\n            };\n            break;\n          default:\n            return function (g) {\n              g.attr(\"transform\", `translate(0,${height + margin.top})`)\n                .attr(\"class\", \"axisGreyY\")\n                .call(d3.axisBottom(x).tickSize(0));\n            };\n        }\n      };\n\n      //   const y = d3\n      //     .scaleLinear ()\n      //     .domain ([0, d3.max (data, d => d.value)])\n      //     .nice ()\n      //     .range ([height / 2, margin.top]);\n\n      const getY = (type) => {\n        switch (type) {\n          case 0:\n            return d3\n              .scaleLinear()\n              .domain([0, d3.max(dataCollection[0], (d) => d.value)])\n              .nice()\n              .range([eachHeight + margin.top, margin.top]);\n            break;\n          case 1:\n            return d3\n              .scaleLinear()\n              .domain([0, d3.max(dataCollection[1], (d) => d.value)])\n              .nice()\n              .range([\n                eachHeight * 2 + margin.inBetween + margin.top,\n                eachHeight + margin.inBetween + margin.top,\n              ]);\n            break;\n          default:\n            return d3\n              .scaleLinear()\n              .domain([0, d3.max(dataCollection[2], (d) => d.value)])\n              .nice()\n              .range([\n                height + margin.top,\n                eachHeight * 2 + margin.inBetween * 2 + margin.top,\n              ]);\n        }\n      };\n\n      let svg = d3\n        .select(\".performanceChart\")\n        .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom);\n\n      const getPerformanceColor = (type, perform) => {\n        if (type == \"stroke\") {\n          //color for stroke\n          if (perform == 1) {\n            return d3.color(\"#159256\");\n          } else if (perform == 0) {\n            return d3.color(\"#878787\");\n          } else {\n            return d3.color(\"#921515\");\n          }\n        } else {\n          //color for area\n          if (perform == 1) {\n            return d3.color(\"#F0F7F4\");\n          } else if (perform == 0) {\n            return d3.color(\"#E8E8E8\");\n          } else {\n            return d3.color(\"#F7F0F0\");\n          }\n        }\n      };\n\n      const getAreaColor = (type, preValue, currentValue) => {\n        if (type == 0) {\n          //accuracy -> the higher the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor(\"area\", 1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor(\"area\", -1);\n          } else {\n            return getPerformanceColor(\"area\", 0);\n          }\n        } else {\n          //FPR, FNR -> the lower the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor(\"area\", -1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor(\"area\", 1);\n          } else {\n            return getPerformanceColor(\"area\", 0);\n          }\n        }\n      };\n\n      const getStrokeColor = (type, preValue, currentValue) => {\n        if (type == 0) {\n          //accuracy -> the higher the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor(\"stroke\", 1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor(\"stroke\", -1);\n          } else {\n            return getPerformanceColor(\"stroke\", 0);\n          }\n        } else {\n          //FPR, FNR -> the lower the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor(\"stroke\", -1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor(\"stroke\", 1);\n          } else {\n            return getPerformanceColor(\"stroke\", 0);\n          }\n        }\n      };\n\n      dataCollection.forEach((data, index) => {\n        const defaultValue = data[50].value;\n        const currentValue = data[this.props.threshold].value;\n        const currentThreshold = this.props.threshold;\n        const x = d3\n          .scaleLinear()\n          .domain([0, d3.max(data, (d) => d.threshold)])\n          .nice()\n          .range([margin.left, width - margin.right]);\n\n        const y = getY(index);\n        const xAxis = getXAxis(x, index);\n\n        const yAxis = (g) =>\n          g\n            .attr(\"transform\", `translate(${margin.left},0)`)\n            .attr(\"class\", \"axisGrey\")\n            .call(d3.axisLeft(y).ticks(2));\n\n        const line = d3\n          .line()\n          .defined((d) => !isNaN(d.value))\n          .x((d) => x(d.threshold))\n          .y((d) => y(d.value));\n\n        const area = d3\n          .area()\n          .defined((d) =>\n            betweenThreshold(0.5, currentThreshold * 0.01, d.threshold)\n          )\n          .x((d) => x(d.threshold))\n          .y0(y(0))\n          .y1((d) => y(d.value));\n\n        svg\n          .append(\"path\")\n          .datum(data.filter(area.defined()))\n          .attr(\"fill\", getAreaColor(index, defaultValue, currentValue))\n          .attr(\"d\", area);\n\n        svg\n          .append(\"path\")\n          .datum(data)\n          .attr(\"fill\", \"none\")\n          .attr(\"stroke\", \"grey\")\n          .attr(\"stroke-width\", 1.5)\n          .attr(\"stroke-linejoin\", \"round\")\n          .attr(\"stroke-linecap\", \"round\")\n          .attr(\"d\", line);\n\n        svg\n          .append(\"line\")\n          .attr(\"x1\", x(currentThreshold * 0.01))\n          .attr(\"y1\", y(currentValue))\n          .attr(\"x2\", x(currentThreshold * 0.01))\n          .attr(\n            \"y2\",\n            margin.top + index * margin.inBetween + (index + 1) * eachHeight\n          )\n          .attr(\"stroke-width\", 2)\n          .attr(\"stroke\", getStrokeColor(index, defaultValue, currentValue))\n          .style(\"stroke-dasharray\", \"5,5\");\n\n        svg\n          .append(\"line\")\n          .attr(\"x1\", x(50 * 0.01))\n          .attr(\"y1\", y(defaultValue))\n          .attr(\"x2\", x(50 * 0.01))\n          .attr(\n            \"y2\",\n            margin.top + index * margin.inBetween + (index + 1) * eachHeight\n          )\n          .attr(\"stroke-width\", 2)\n          .attr(\"stroke\", d3.color(\"#D2D2D2\"));\n\n        svg\n          .append(\"text\")\n          .attr(\"x\", x(currentThreshold * 0.01))\n          .attr(\"y\", y(currentValue + 8))\n          .attr(\"text-anchor\", \"middle\")\n          .text(`${currentValue}%`)\n          .attr(\"font-family\", \"sans-serif\")\n          .attr(\"font-size\", \"20px\")\n          .attr(\"fill\", getStrokeColor(index, defaultValue, currentValue));\n\n        svg.append(\"g\").call(xAxis);\n\n        svg.append(\"g\").call(yAxis);\n      });\n    }\n  }\n\n  getBoxHeight() {\n    const margin = this.getMargin();\n    return (\n      (this.state.height - margin.top - margin.bottom - margin.inBetween * 2) /\n      3\n    );\n  }\n\n  render() {\n    const message = this.props.damaging ? \"damaging\" : \"good faith\";\n    const opposite = this.props.damaging ? \"good\" : \"bad faith\";\n    return (\n      <div style={{ marginTop: \"20px\" }}>\n        <div\n          style={{\n            width: \"50%\",\n            display: \"inline-block\",\n            verticalAlign: \"top\",\n          }}\n        >\n          <div\n            style={{ marginTop: \"20px\" }}\n            className=\"performanceChart\"\n            ref={this.chartPerformanceRef}\n          />\n        </div>\n        <div\n          style={{\n            width: \"50%\",\n            display: \"inline-block\",\n            verticalAlign: \"top\",\n          }}\n        >\n          <div\n            style={{\n              height: `${this.getBoxHeight()}px`,\n              padding: \"0% 5%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              marginTop: `${this.getMargin().top + 20}px`,\n              marginBottom: `${this.getMargin().inBetween}px`,\n            }}\n          >\n            <div>\n              <Typography variant=\"h6\" textAlign=\"center\">\n                Accuracy{\" \"}\n              </Typography>\n              <Typography variant=\"body2\">\n                Correctly predicted edits out of all edits{\" \"}\n              </Typography>\n            </div>\n          </div>\n\n          <div\n            style={{\n              height: `${this.getBoxHeight()}px`,\n              padding: \"0% 5%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              marginBottom: `${this.getMargin().inBetween}px`,\n            }}\n          >\n            <div>\n              <Typography variant=\"h6\" textAlign=\"center\">\n                False Positive Rate\n              </Typography>\n              <Typography variant=\"body2\">\n                Percentage of {opposite} edits that are falsely identified as{\" \"}\n                {message}{\" \"}\n              </Typography>\n            </div>\n          </div>\n\n          <div\n            style={{\n              height: `${this.getBoxHeight()}px`,\n              padding: \"0% 5%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n            }}\n          >\n            <div>\n              <Typography variant=\"h6\" textAlign=\"center\">\n                False Negative Rate\n              </Typography>\n              <Typography variant=\"body2\">\n                Percentage of {message} edits that won’t be identified{\" \"}\n              </Typography>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ThresholdPerformance;\n","import React, {Component} from 'react';\nclass Circle extends Component {\n  constructor (props) {\n    super (props);\n  }\n  state = {};\n  render () {\n    const size = this.props.size / 2;\n    return (\n      <svg height={size * 2} width={size * 2}>\n        <circle cx={size} cy={size} r={size} fill={this.props.color} />\n      </svg>\n    );\n  }\n}\n\nexport class Cross extends Component {\n  constructor (props) {\n    super (props);\n  }\n  state = {};\n  render () {\n    const size = this.props.size;\n    return (\n      <svg height={size} width={size}>\n        <line\n          x1=\"0\"\n          y1=\"0\"\n          x2={size}\n          y2={size}\n          stroke={this.props.color}\n          strokeWidth={2}\n        />\n        <line\n          x1=\"0\"\n          y1={size}\n          x2={size}\n          y2=\"0\"\n          stroke={this.props.color}\n          strokeWidth={2}\n        />\n      </svg>\n    );\n  }\n}\n\nexport default Circle;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ToggleButtonGroup, ToggleButton } from \"@material-ui/lab\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\n\nclass TypeToggle extends Component {\n  render() {\n    return (\n      <Grid item xs={this.props.gridSize} className=\"modelOptions\">\n        <Typography component=\"div\" variant=\"subtitle2\">\n          <Box>MODEL OPTIONS</Box>\n        </Typography>\n        <ToggleButtonGroup\n          exclusive\n          value={this.props.damaging}\n          onChange={this.props.onChange}\n          className=\"options\"\n        >\n          <Typography\n            component={ToggleButton}\n            value={true}\n            variant=\"h6\"\n            className=\"text\"\n          >\n            Damaging Model\n          </Typography>\n          <Typography\n            value={false}\n            component={ToggleButton}\n            variant=\"h6\"\n            className=\"text\"\n          >\n            GoodFaith Model\n          </Typography>\n        </ToggleButtonGroup>\n      </Grid>\n    );\n  }\n}\n\nexport default TypeToggle;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport ThresholdSlider from \"../../partials/slider\";\nimport ThresholdPerformance from \"./threshold_performance\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ToggleButtonGroup, ToggleButton } from \"@material-ui/lab\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Circle, { Cross } from \"../../partials/shape\";\nimport TypeToggle from \"../../partials/typeToggle\";\nimport axios from \"axios\";\n\nclass ThresholdExplorer extends Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n    this.getWidth = this.getWidth.bind(this);\n    this.drawChart = this.drawChart.bind(this);\n    this.redrawChart = this.redrawChart.bind(this);\n    this.state = {\n      threshold: 60,\n      width: 1000,\n      height: 1000,\n      widthHeightRatio: 0.8,\n      graph1Scale: 1,\n      dotWidth: 0,\n      sliderRange: [20, 1000],\n      damaging: true,\n    };\n  }\n\n  getWidth() {\n    if (this.chartRef.current == null) {\n      return this.state.width;\n    } else {\n      return this.chartRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  onSliderChange = (event, threshold) => {\n    this.setState({\n      threshold: threshold,\n    });\n    d3.select(\".rowChart svg\").remove();\n    this.drawChart = this.drawChart.bind(this);\n    this.drawChart();\n  };\n\n  onTypeChange = (event, type) => {\n    if (type != null) {\n      this.setState({ damaging: type });\n      this.state.damaging = type;\n      d3.select(\".rowChart svg\").remove();\n      this.drawChart = this.drawChart.bind(this);\n      this.drawChart();\n    }\n  };\n\n  componentDidMount() {\n    let width = this.getWidth();\n    let height = width * 0.8;\n    let sliderRight = width - 30;\n\n    this.setState(\n      {\n        width: width,\n        height: height,\n        sliderRange: [10, sliderRight],\n        damaging: true,\n      },\n      () => {\n        this.drawChart();\n      }\n    );\n\n    let resizedFn;\n    window.addEventListener(\"resize\", () => {\n      clearTimeout(resizedFn);\n      resizedFn = setTimeout(() => {\n        this.redrawChart();\n      }, 200);\n    });\n  }\n\n  redrawChart() {\n    let width = this.getWidth();\n    let sliderRight = width - 30;\n    this.setState({\n      width: width,\n      height: width * 0.8,\n      sliderRange: [10, sliderRight],\n      damaging: this.state.damaging,\n    });\n    d3.select(\".rowChart svg\").remove();\n    this.drawChart = this.drawChart.bind(this);\n    this.drawChart();\n  }\n\n  drawChart(diff) {\n    const margin = { top: 0, right: 30, bottom: 30, left: 10 };\n    let width = this.state.width - margin.left - margin.right;\n    let height = this.state.height - margin.top - margin.bottom;\n    // append the svg object to the body of the page\n    let svg = d3\n      .select(\".rowChart\")\n      .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom);\n\n    const threshold = this.state.threshold / 100;\n    const graph1Scale = 1;\n\n    const diameter = (width * graph1Scale) / 50;\n    const dotWidth = diameter * 0.5;\n    if (this.props.data != null) {\n      const dd = dodge(\n        threshold,\n        this.props.data,\n        diameter,\n        this.state.damaging\n      );\n\n      const xAxis = (g) =>\n        g\n          .attr(\"transform\", `translate(0,${margin.top})`)\n          .call(d3.axisTop(x).ticks(0));\n\n      const x = d3\n        .scaleLinear()\n        .domain([0, 1])\n        .nice()\n        .range([margin.left, width + margin.left]);\n\n      // const shape = d3.scaleOrdinal (\n      //   dd.map (d => d.category),\n      //   d3.symbols.map (s =>\n      //     d3.symbol ().size (diameter * diameter * 0.4).type (s) ()\n      //   )\n      // );\n\n      async function diff(id) {\n        var data =\n          '<h3>Rev. Id = <span><a href=\"https://en.wikipedia.org/w/index.php?title=&diff=prev&oldid=' +\n          id +\n          '\" target=\"_blank\">' +\n          id +\n          \"</a></span></h3>\\n\";\n\n        var cors = \"https://cors-anywhere.herokuapp.com/\";\n        var api = \"https://en.wikipedia.org/w/api.php\";\n\n        function ValidateIPaddress(ipaddress) {\n          return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(\n            ipaddress\n          );\n        }\n\n        await axios\n          .get(\n            cors +\n              api +\n              \"?format=json&action=query&revids=\" +\n              id +\n              \"&prop=revisions\"\n          )\n          .then(\n            (res) => {\n              const page =\n                res.data.query.pages[Object.keys(res.data.query.pages)[0]];\n\n              const rev = page.revisions[0];\n\n              console.log(rev);\n\n              data =\n                data +\n                \"<h4 class='articleTitle'>ARTICLE TITLE: \" +\n                page.title +\n                \"</h4><h5>Edited by \" +\n                (ValidateIPaddress(rev.user) ? \"Anonymous\" : rev.user) +\n                \" on \" +\n                rev.timestamp +\n                \"</h5>\\n\";\n\n              if (rev.comment != \"\") {\n                data =\n                  data +\n                  \"<h4>Comment from editor: </h4><p>\" +\n                  rev.comment +\n                  \"</p>\";\n              }\n            },\n            (err) => {}\n          );\n\n        await axios\n          .get(\n            cors +\n              api +\n              \"?&action=compare&torelative=prev&prop=diff&fromrev=\" +\n              id +\n              \"&format=json\"\n          )\n          .then(\n            (res) => {\n              data =\n                data +\n                \"<table>\" +\n                \"<tr class='header'><td class='before' colspan='2'>Before</td><td class='after' colspan='2'>After</td></tr>\" +\n                res.data.compare[\"*\"] +\n                \"</table>\";\n            },\n            (err) => {}\n          );\n\n        return data;\n      }\n\n      function dodge(threshold, data, diameter, damaging) {\n        const circles = data\n          .map((d) => ({\n            rev_id: d.rev_id,\n            xvalue: parseFloat(\n              damaging ? d.confidence_damage : d.confidence_faith\n            ).toFixed(2),\n            x:\n              0.02 *\n              Math.ceil(\n                parseFloat(\n                  damaging ? d.confidence_damage : d.confidence_faith\n                ).toFixed(2) * 50\n              ),\n            correct:\n              parseFloat(\n                damaging ? d.confidence_damage : d.confidence_faith\n              ).toFixed(2) >=\n                threshold ==\n              damaging\n                ? d.damaging_label\n                : d.faith_label,\n            predict:\n              parseFloat(\n                damaging ? d.confidence_damage : d.confidence_faith\n              ).toFixed(2) >= threshold,\n            label: damaging ? d.damaging_label : d.faith_label,\n          }))\n          .sort(function (a, b) {\n            if (a.x == b.x) {\n              let ca = a.correct ? 1 : 0;\n              let cb = b.correct ? 1 : 0;\n              return cb - ca;\n            } else {\n              return b.x - a.x;\n            }\n          });\n        const epsilon = 1e-4;\n\n        let prev = 100;\n        let cnt = 1;\n\n        for (const b of circles) {\n          //determine the position of the dot\n          if (Math.abs(prev - b.x) < epsilon) {\n            // belongs to the same col\n            cnt += 1;\n            b.y = diameter * cnt;\n          } else {\n            prev = b.x;\n            cnt = 1;\n            b.y = diameter;\n          }\n\n          if (b.correct) {\n            b.category = 1;\n          } else {\n            b.category = 0;\n          }\n\n          if (b.predict) {\n            b.color = d3.color(\"#C57619\");\n          } else {\n            b.color = d3.color(\"#909090\");\n          }\n        }\n\n        return circles;\n      }\n\n      var customCross = {\n        draw: function (context, size) {\n          let s = Math.sqrt(size * 2) / 2;\n          let w = Math.sqrt(size) / 6;\n          context.moveTo(-s, w);\n          context.lineTo(s, w);\n          context.lineTo(s, -w);\n          context.lineTo(-s, -w);\n          context.closePath();\n          context.moveTo(w, s);\n          context.lineTo(w, -s);\n          context.lineTo(-w, -s);\n          context.lineTo(-w, s);\n          context.closePath();\n        },\n      };\n\n      svg\n        .append(\"line\")\n        .attr(\"x1\", width + margin.left - dotWidth * 100 * (1 - threshold))\n        .attr(\"y1\", margin.top)\n        .attr(\"x2\", width + margin.left - dotWidth * 100 * (1 - threshold))\n        .attr(\"y2\", height - 30)\n        .attr(\"stroke-width\", 2)\n        .attr(\"stroke\", \"black\")\n        .style(\"stroke-dasharray\", \"5,5\");\n\n      const thresholdText = threshold * 100 + \"%\";\n      svg\n        .append(\"text\")\n        .attr(\"x\", width + margin.left - dotWidth * 100 * (1 - threshold))\n        .attr(\"y\", height - 15)\n        .attr(\"text-anchor\", \"middle\")\n        .text(thresholdText)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"font-size\", \"15px\");\n\n      svg\n        .append(\"g\")\n        .selectAll(\"path\")\n        .data(dd)\n        .join(\"path\")\n        .attr(\n          \"transform\",\n          (d) => `translate(${x(d.x)},${d.y + margin.top}), rotate(45)`\n        )\n        .attr(\"fill\", (d) => d.color)\n        .attr(\n          \"d\",\n          d3\n            .symbol()\n            .type(function (d) {\n              if (d.category === 0) {\n                return customCross;\n              } else {\n                return d3.symbolCircle;\n              }\n            })\n            .size(diameter * diameter * 0.4)\n        )\n        .on(\"click\", async function (d) {\n          var div = d3\n            .select(\".rowChart\")\n            .append(\"div\")\n            .attr(\"class\", \"tooltip\")\n            .style(\"opacity\", 0);\n\n          div.transition().duration(200).style(\"opacity\", 1);\n\n          div\n            .html(await diff(d.rev_id))\n            .style(\"position\", \"absolute\")\n            .style(\"left\", x(d.x) + \"px\");\n\n          let topOffset = d.y + margin.top;\n          let tooltipHegiht = Number.parseInt(div.style(\"height\"));\n\n          if (topOffset + tooltipHegiht > height + 100)\n            topOffset = topOffset - tooltipHegiht;\n          div.style(\"top\", topOffset + \"px\");\n        })\n        .on(\"mouseover\", function (d) {\n          d3.select(\".rowChart div\").remove();\n        });\n    }\n  }\n\n  getClickTip() {\n    return (\n      <span>\n        <strong>TIP:</strong> Click on a revision (cross or circle) to view more\n        details.\n      </span>\n    );\n  }\n\n  render() {\n    const message = this.state.damaging ? \"damaging\" : \"good faith\";\n    const opposite = this.state.damaging ? \"good\" : \"bad faith\";\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            width: \"55%\",\n            display: \"inline-block\",\n            verticalAlign: \"top\",\n            position: \"relative\",\n          }}\n        >\n          <div className=\"upperSettings\">\n            <Grid container spacing={0}>\n              <TypeToggle\n                damaging={this.state.damaging}\n                onChange={this.onTypeChange}\n                gridSize={9}\n                key={this.state.damaging}\n              />\n              <Grid item xs={3} className=\"threshold\">\n                <div className=\"innerBox\">\n                  <Typography variant=\"subtitle2\">\n                    <Box>threshold</Box>\n                  </Typography>\n\n                  <Grid container spacing={2} className=\"options\">\n                    <Grid item xs={12}>\n                      <Typography component=\"div\" variant=\"h6\" className=\"text\">\n                        {this.state.threshold} %\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n\n          <div\n            style={{\n              marginLeft: `${this.state.sliderRange[0]}px`,\n              width: `${\n                this.state.sliderRange[1] - this.state.sliderRange[0]\n              }px`,\n            }}\n          >\n            <Typography variant=\"subtitle2\">VISUALIZATION</Typography>\n            <ThresholdSlider\n              defaultValue={60}\n              clickTip={true}\n              middleText={this.getClickTip}\n              onChangeCommitted={this.onSliderChange}\n              color={\"orange\"}\n            />\n          </div>\n          <div\n            className=\"rowChart\"\n            ref={this.chartRef}\n            style={{ position: \"relative\" }}\n          />\n          <div className=\"legendCard\" id=\"explorerLegend\">\n            <Typography component=\"div\" variant=\"subtitle2\">\n              legend\n            </Typography>\n            <Grid container spacing={0} style={{ marginTop: \"10px\" }}>\n              <Grid item xs={12}>\n                <div className=\"legendMark\">\n                  <Circle size={12} color=\"#909090\" />{\" \"}\n                  <Typography component=\"span\" variant=\"body2\">\n                    Correctly classified {opposite} edits (TN)\n                  </Typography>\n                </div>\n              </Grid>\n              <Grid item xs={12}>\n                <div className=\"legendMark\">\n                  <Cross size={12} color=\"#909090\" />{\" \"}\n                  <Typography component=\"span\" variant=\"body2\">\n                    Uncaught {message} edits (FN){\" \"}\n                  </Typography>\n                </div>\n              </Grid>\n              <Grid item xs={12}>\n                <div className=\"legendMark\">\n                  <Circle size={12} color=\"#C57619\" />{\" \"}\n                  <Typography component=\"span\" variant=\"body2\">\n                    Correctly classified {message} edits (TP)\n                  </Typography>\n                </div>\n              </Grid>\n              <Grid item xs={12}>\n                <div className=\"legendMark\">\n                  <Cross size={12} color=\"#C57619\" />{\" \"}\n                  <Typography component=\"span\" variant=\"body2\">\n                    Mis-classified {opposite} edits (FP){\" \"}\n                  </Typography>\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n\n        <div className=\"sidePanel\">\n          <Typography variant=\"subtitle2\">PERFORMANCE</Typography>\n          <ThresholdPerformance\n            performance_data={this.props.performance_data}\n            threshold={this.state.threshold}\n            key={[this.state.damaging, this.state.threshold]}\n            damaging={this.state.damaging}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ThresholdExplorer;\n","import React, { Component } from \"react\";\nimport ThresholdExplorer from \"./threshold_explorer\";\nimport * as d3 from \"d3\";\nimport data_balanced from \"../../data/data_not-balanced.csv\";\nimport data_performance from \"../../data/performance.csv\";\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      change: 0,\n    };\n  }\n\n  componentDidMount() {\n    d3.csv(data_balanced, (d) => {\n      return {\n        confidence_faith: +d.confidence_faith,\n        faith_label: d.goodfaith == \"True\" ? true : false,\n        confidence_damage: +d.confidence_damage,\n        damaging_label: d.damaging == \"True\" ? true : false,\n        rev_id: +d.rev_id,\n      };\n    }).then((data) => {\n      this.setState({ data: data.slice(0, 2000) });\n      this.setState({ change: 2 });\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return true;\n  }\n\n  render() {\n    return (\n      <div style={{ display: \"flex\" }}>\n        {/* <Test data={this.state.data} key={this.state.change} /> */}\n        <ThresholdExplorer\n          data={this.state.data}\n          performance_data={this.props.performanceData}\n          key={this.state.change}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport dotData from \"../../data/new.json\";\nimport ThresholdSlider from \"../../partials/slider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Circle, { Cross } from \"../../partials/shape\";\nimport TypeToggle from \"../../partials/typeToggle\";\nimport { ToggleButtonGroup, ToggleButton } from \"@material-ui/lab\";\n\nconst getColor = (accuracy, defaultValue, currentValue) => {\n  let perform = 1;\n  if (accuracy) {\n    if (defaultValue > currentValue) {\n      perform = -1;\n    } else if (defaultValue === currentValue) {\n      perform = 0;\n    } else {\n      perform = 1;\n    }\n  } else {\n    if (defaultValue > currentValue) {\n      perform = 1;\n    } else if (defaultValue === currentValue) {\n      perform = 0;\n    } else {\n      perform = -1;\n    }\n  }\n  //color for stroke\n  if (perform === 1) {\n    return d3.color(\"#159256\");\n  } else if (perform === 0) {\n    return d3.color(\"#878787\");\n  } else {\n    return d3.color(\"#921515\");\n  }\n};\n\nconst getPerformance = (data) => {\n  const TP = data[0],\n    TN = data[1],\n    FP = data[2],\n    FN = data[3];\n  //accuracy:\n  const acc = (TP + TN) / (TP + TN + FP + FN);\n  const fpr = FP / (FP + TN);\n  const fnr = FN / (FN + TP);\n  return [acc, fpr, fnr];\n};\n\nclass GroupCompareVisualizer extends Component {\n  constructor(props) {\n    super(props);\n    this.compareChartRef = React.createRef();\n    this.comparePerformanceRef = React.createRef();\n    this.wholePerformanceRef = React.createRef();\n    this.getMargin = this.getMargin.bind(this);\n    this.getWidth = this.getWidth.bind(this);\n    this.drawChart = this.drawChart.bind(this);\n    this.redrawChart = this.redrawChart.bind(this);\n    this.getWholePerformance = this.getWholePerformance.bind(this);\n    this.getPerformanceWidth = this.getPerformanceWidth.bind(this);\n    this.getPerformanceForThreshold = this.getPerformanceForThreshold.bind(\n      this\n    );\n    this.state = {\n      threshold: 60,\n      width: 1000,\n      height: 1000,\n      performanceWidth: 1000,\n      group1Color: \"#C57619\",\n      group2Color: \"#3777A5\",\n      sliderRange: [20, 1000],\n      wholePerformance: [0, 0, 0],\n      defaultPerformance: [0, 0, 0],\n      groupOnePerformance: null,\n      groupTwoPerformance: null,\n      damaging: true,\n    };\n  }\n\n  getMargin() {\n    const performanceHeight = this.state.performanceHeight;\n    const bottom = 50;\n    return {\n      top: 0,\n      right: 40,\n      bottom: bottom,\n      left: 20,\n      blockHeight: (performanceHeight - bottom) / 3,\n      chartHeight: (performanceHeight - bottom) / 12,\n    };\n  }\n\n  getWidth() {\n    if (this.compareChartRef.current === null) {\n      return this.state.width;\n    } else {\n      return this.compareChartRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  getPerformanceWidth() {\n    if (this.comparePerformanceRef.current === null) {\n      return this.state.performanceWidth;\n    } else {\n      return this.comparePerformanceRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  getPerformanceHeight() {\n    if (\n      this.wholePerformanceRef.current === null ||\n      this.compareChartRef.current === null\n    ) {\n      return this.state.performanceHeight;\n    } else {\n      return (\n        (this.compareChartRef.current.parentElement.offsetWidth - 60) * 0.5 +\n        300 -\n        this.wholePerformanceRef.current.offsetHeight\n      );\n    }\n  }\n\n  getPerformanceForThreshold() {\n    const threshold = this.state.threshold * 0.01;\n    const damaging = this.state.damaging;\n    console.log(this.state.damaging, damaging);\n    if (this.props.groupOneData != null && this.props.groupTwoData != null) {\n      const groupOneFP = this.props.groupOneData.filter(function (d) {\n        return (\n          (damaging ? d.confidence_damage : d.confidence_faith) >= threshold &&\n          !(damaging ? d.damaging_label : d.faith_label)\n        );\n      }).length;\n\n      const groupOneTP = this.props.groupOneData.filter(function (d) {\n        return (\n          (damaging ? d.confidence_damage : d.confidence_faith) >= threshold &&\n          (damaging ? d.damaging_label : d.faith_label)\n        );\n      }).length;\n\n      const groupOneFN = this.props.groupOneData.filter(function (d) {\n        return (\n          (damaging ? d.confidence_damage : d.confidence_faith) < threshold &&\n          (damaging ? d.damaging_label : d.faith_label)\n        );\n      }).length;\n\n      const groupOneTN = this.props.groupOneData.filter(function (d) {\n        return (\n          (damaging ? d.confidence_damage : d.confidence_faith) < threshold &&\n          !(damaging ? d.damaging_label : d.faith_label)\n        );\n      }).length;\n\n      const groupTwoFP = this.props.groupTwoData.filter(function (d) {\n        return (\n          (damaging ? d.confidence_damage : d.confidence_faith) >= threshold &&\n          !(damaging ? d.damaging_label : d.faith_label)\n        );\n      }).length;\n\n      const groupTwoTP = this.props.groupTwoData.filter(function (d) {\n        return (\n          (damaging ? d.confidence_damage : d.confidence_faith) >= threshold &&\n          (damaging ? d.damaging_label : d.faith_label)\n        );\n      }).length;\n\n      const groupTwoFN = this.props.groupTwoData.filter(function (d) {\n        return (\n          (damaging ? d.confidence_damage : d.confidence_faith) < threshold &&\n          (damaging ? d.damaging_label : d.faith_label)\n        );\n      }).length;\n\n      const groupTwoTN = this.props.groupTwoData.filter(function (d) {\n        return (\n          (damaging ? d.confidence_damage : d.confidence_faith) < threshold &&\n          !(damaging ? d.damaging_label : d.faith_label)\n        );\n      }).length;\n\n      return {\n        groupOne: [groupOneTP, groupOneTN, groupOneFP, groupOneFN],\n        groupTwo: [groupTwoTP, groupTwoTN, groupTwoFP, groupTwoFN],\n        all: [\n          groupOneTP + groupTwoTP,\n          groupOneTN + groupTwoTN,\n          groupOneFP + groupTwoFP,\n          groupOneFN + groupTwoFN,\n        ],\n      };\n    } else {\n      return {\n        groupOne: this.state.groupOnePerformance,\n        groupTwo: this.state.groupTwoPerformance,\n        all: this.state.wholePerformance,\n      };\n    }\n  }\n\n  onTypeChange = (event, type) => {\n    if (type != null) {\n      let acc = 0;\n      let fpr = 0;\n      let fnr = 0;\n\n      if (this.props.performanceData != null) {\n        const data = this.props.performanceData;\n        acc =\n          100 * (type ? data[50].damaging_accuracy : data[50].faith_accuracy);\n        fpr = 100 * (type ? data[50].damaging_fpr : data[50].faith_fpr);\n        fnr = 100 * (type ? data[50].damaging_fnr : data[50].faith_fnr);\n      }\n\n      this.setState({\n        damaging: type,\n        // defaultPerformance: [acc.toFixed(1), fpr.toFixed(1), fnr.toFixed(1)],\n      });\n\n      this.state.damaging = type;\n      //   this.state.defaultPerformance = [\n      //     acc.toFixed(1),\n      //     fpr.toFixed(1),\n      //     fnr.toFixed(1),\n      //   ];\n\n      this.getWholePerformance();\n      d3.select(\".compareChart svg\").remove();\n      this.drawChart = this.drawChart.bind(this);\n      this.drawChart();\n\n      this.setState({\n        // damaging: type,\n        defaultPerformance: [acc.toFixed(1), fpr.toFixed(1), fnr.toFixed(1)],\n      });\n      //   this.state.defaultPerformance = [\n      //     acc.toFixed(1),\n      //     fpr.toFixed(1),\n      //     fnr.toFixed(1),\n      //   ];\n\n      d3.select(\".comparePerformance svg\").remove();\n      this.drawPerformanceChart = this.drawPerformanceChart.bind(this);\n      this.drawPerformanceChart();\n\n      this.setState({\n        // damaging: type,\n        defaultPerformance: [acc.toFixed(1), fpr.toFixed(1), fnr.toFixed(1)],\n      });\n    }\n  };\n\n  onSliderChange = (event, threshold) => {\n    this.setState({\n      threshold: threshold,\n    });\n\n    this.getWholePerformance();\n\n    d3.select(\".compareChart svg\").remove();\n    this.drawChart = this.drawChart.bind(this);\n    this.drawChart();\n    d3.select(\".comparePerformance svg\").remove();\n    this.drawPerformanceChart = this.drawPerformanceChart.bind(this);\n    this.drawPerformanceChart();\n  };\n\n  componentDidMount() {\n    let width = this.getWidth();\n    let height = width / 2.4;\n    let performanceWidth = this.getPerformanceWidth();\n    let performanceHeight = this.getPerformanceHeight();\n    let sliderRight = width - 40;\n    this.getWholePerformance();\n    let acc = 0;\n    let fpr = 0;\n    let fnr = 0;\n    if (this.props.performanceData != null) {\n      const data = this.props.performanceData;\n      acc = data[50].damaging_accuracy * 100;\n      fpr = 100 * data[50].damaging_fpr;\n      fnr = 100 * data[50].damaging_fnr;\n    }\n\n    this.setState(\n      {\n        width: width,\n        height: height,\n        sliderRange: [10, sliderRight],\n        performanceWidth: performanceWidth,\n        performanceHeight: performanceHeight,\n        damaging: true,\n        defaultPerformance: [acc.toFixed(1), fpr.toFixed(1), fnr.toFixed(1)],\n      },\n      () => {\n        this.drawChart();\n        this.drawPerformanceChart();\n      }\n    );\n\n    let resizedFn;\n    window.addEventListener(\"resize\", () => {\n      clearTimeout(resizedFn);\n      resizedFn = setTimeout(() => {\n        this.redrawChart();\n      }, 200);\n    });\n  }\n\n  redrawChart() {\n    let width = this.getWidth();\n    let performanceWidth = this.getPerformanceWidth();\n    let performanceHeight = this.getPerformanceHeight();\n    let sliderRight = width - 40;\n    this.setState({\n      width: width,\n      height: width / 2,\n      performanceWidth: performanceWidth,\n      performanceHeight: performanceHeight,\n\n      sliderRange: [10, sliderRight],\n    });\n    d3.select(\".compareChart svg\").remove();\n    this.drawChart = this.drawChart.bind(this);\n    this.drawChart();\n    d3.select(\".comparePerformance svg\").remove();\n    this.drawPerformanceChart = this.drawPerformanceChart.bind(this);\n    this.drawPerformanceChart();\n  }\n\n  getWholePerformance() {\n    if (\n      this.props.performanceData != null &&\n      this.props.groupOneData != null &&\n      this.props.groupTwoData != null\n    ) {\n      const performance = this.getPerformanceForThreshold();\n      const groupOnePerf = performance.groupOne;\n      const groupTwoPerf = performance.groupTwo;\n      const allPerf = getPerformance(performance.all);\n\n      this.setState({\n        wholePerformance: allPerf,\n        groupOnePerformance: groupOnePerf,\n        groupTwoPerformance: groupTwoPerf,\n      });\n    }\n  }\n  drawPerformanceChart() {\n    const margin = this.getMargin();\n    let width = this.state.performanceWidth - margin.left - margin.right;\n    let height = this.state.performanceHeight - margin.top - margin.bottom;\n    let svg = d3\n      .select(\".comparePerformance\")\n      .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom);\n\n    let blockHeight = height / 3;\n    let vizHeight = blockHeight / 4;\n    // TP, TN, FP, FN\n    if (\n      this.state.groupOnePerformance != null &&\n      this.state.groupTwoPerformance != null\n    ) {\n      let groupOnePerformance = getPerformance(this.state.groupOnePerformance);\n      let groupTwoPerformance = getPerformance(this.state.groupTwoPerformance);\n\n      let wholePerformance = this.state.wholePerformance;\n      const x = d3\n        .scaleLinear()\n        .domain([0, 1])\n        .nice()\n        .range([margin.left, margin.left + width]);\n\n      function drawPerformance(\n        height,\n        defaultPerformance,\n        currentPerformance,\n        color,\n        larger,\n        groupNumber,\n        largerPerformance\n      ) {\n        const markHeight = 5;\n        const markWidth = 6;\n        const actualx = x(currentPerformance);\n\n        svg\n          .append(\"line\")\n          .attr(\"x1\", margin.left)\n          .attr(\"y1\", height)\n          .attr(\"x2\", margin.left + width)\n          .attr(\"y2\", height)\n          .attr(\"stroke-width\", 2)\n          .attr(\"stroke\", \"grey\");\n        svg\n          .append(\"line\")\n          .attr(\"x1\", actualx)\n          .attr(\"y1\", height - markHeight)\n          .attr(\"x2\", actualx)\n          .attr(\"y2\", height + markHeight)\n          .attr(\"stroke-width\", markWidth)\n          .attr(\"stroke\", color);\n\n        svg\n          .append(\"line\")\n          .attr(\"x1\", x(defaultPerformance))\n          .attr(\"y1\", height)\n          .attr(\"x2\", actualx)\n          .attr(\"y2\", height)\n          .attr(\"stroke-width\", 3)\n          .attr(\"stroke\", color);\n\n        let tooltipHalfWidth = 40;\n        let tooltipx = actualx - tooltipHalfWidth;\n\n        if (tooltipx < margin.left) {\n          tooltipx = margin.left;\n        } else if (tooltipx > width + margin.left + margin.right) {\n          tooltipx = width + margin.left + margin.right - tooltipHalfWidth;\n        }\n        let tooltipy = height + 10;\n        if (larger) {\n          if (groupNumber == 1) {\n            tooltipy = height - 35;\n          }\n\n          svg\n            .append(\"rect\")\n            .attr(\"x\", tooltipx)\n            .attr(\"y\", tooltipy)\n            .attr(\"width\", tooltipHalfWidth * 2)\n            .attr(\"height\", 24)\n            .attr(\"rx\", 4)\n            .attr(\"ry\", 4)\n            .attr(\"fill\", color);\n\n          svg\n            .append(\"text\")\n            .attr(\"x\", tooltipx + tooltipHalfWidth)\n            .attr(\"y\", tooltipy + 13)\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"alignment-baseline\", \"middle\")\n            .text(largerPerformance + \" more\")\n            .attr(\"font-family\", \"sans-serif\")\n            .attr(\"fill\", \"white\")\n            .attr(\"font-size\", \"14px\");\n        }\n      }\n\n      [\"Accuracy\", \"FPR\", \"FNR\"].forEach((item, index) => {\n        const groupOneHeight = blockHeight * index + vizHeight * 3;\n        const groupTwoHeight = margin.top + blockHeight * index + vizHeight * 4;\n\n        const groupOneCurrentPerformance = groupOnePerformance[index];\n        const groupTwoCurrentPerformance = groupTwoPerformance[index];\n\n        let min = groupOneCurrentPerformance;\n        let max = groupTwoCurrentPerformance;\n        let larger = 2;\n        if (groupOneCurrentPerformance > groupTwoCurrentPerformance) {\n          min = groupTwoCurrentPerformance;\n          max = groupOneCurrentPerformance;\n          larger = 1;\n        } else if (groupOneCurrentPerformance > groupTwoCurrentPerformance) {\n          larger = 0;\n        }\n\n        let largerPercentage = 0;\n        if (min === 0) {\n          largerPercentage = \"∞\";\n        } else {\n          largerPercentage = Math.round(((max - min) * 100) / max) + \"%\";\n        }\n\n        drawPerformance(\n          groupOneHeight,\n          wholePerformance[index],\n          groupOnePerformance[index],\n          d3.color(this.state.group1Color),\n          larger === 1,\n          1,\n          largerPercentage\n        );\n        drawPerformance(\n          groupTwoHeight,\n          wholePerformance[index],\n          groupTwoPerformance[index],\n          d3.color(this.state.group2Color),\n          larger === 2,\n          2,\n          largerPercentage\n        );\n      });\n    }\n  }\n\n  drawChart() {\n    const margin = { top: 20, right: 40, bottom: 0, left: 0 };\n    let width = this.state.width - margin.left - margin.right;\n    let height = width / 2.5;\n    // append the svg object to the body of the page\n    let svg = d3\n      .select(\".compareChart\")\n      .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height);\n\n    var customCross = {\n      draw: function (context, size) {\n        let s = Math.sqrt(size * 2) / 2;\n        let w = Math.sqrt(size) / 6;\n        context.moveTo(-s, w);\n        context.lineTo(s, w);\n        context.lineTo(s, -w);\n        context.lineTo(-s, -w);\n        context.closePath();\n        context.moveTo(w, s);\n        context.lineTo(w, -s);\n        context.lineTo(-w, -s);\n        context.lineTo(-w, s);\n        context.closePath();\n      },\n    };\n\n    const groupSize = width / 2.4;\n\n    const pack = (data) =>\n      d3\n        .pack()\n        .size([groupSize - 2, groupSize - 2])\n        .padding(3)(\n        d3\n          .hierarchy(data)\n          .sum((d) => d.value)\n          .sort((a, b) => b.value - a.value)\n      );\n\n    const threshold = this.state.threshold * 0.01;\n\n    const app = this;\n\n    if (\n      this.props.groupOneData != null &&\n      this.props.groupTwoData != null &&\n      this.state.groupOnePerformance != null &&\n      this.state.groupTwoPerformance != null\n    ) {\n      const groupOnePerf = this.state.groupOnePerformance;\n      const groupTwoPerf = this.state.groupTwoPerformance;\n      const groupOneTP = groupOnePerf[0],\n        groupOneTN = groupOnePerf[1],\n        groupOneFP = groupOnePerf[2],\n        groupOneFN = groupOnePerf[3];\n      const groupTwoTP = groupTwoPerf[0],\n        groupTwoTN = groupTwoPerf[1],\n        groupTwoFP = groupTwoPerf[2],\n        groupTwoFN = groupTwoPerf[3];\n\n      const dots = pack(dotData)\n        .children.slice(0, this.props.sliceNumber)\n        .map((d) => ({\n          x: d.x,\n          y: d.y,\n          r: d.r,\n          category: \"cross\",\n        }))\n        .sort(function (a, b) {\n          const centerX = margin.left + height;\n          const centerY = height / 2 + margin.top;\n          const distA = Math.sqrt(\n            Math.pow(a.x - centerX, 2) + Math.pow(a.y - centerY, 2)\n          );\n          const distB = Math.sqrt(\n            Math.pow(b.x - centerX, 2) + Math.pow(b.y - centerY, 2)\n          );\n          return distA - distB;\n        });\n\n      const dotRadius = dots[0].r;\n\n      function getSymbolColor(color, fp, tp, fn, tn) {\n        let dd = [];\n        const cp = [fp, fp + tp, fp + tp + fn];\n        dots.forEach(function (dot, index) {\n          if (index < cp[0]) {\n            dd.push({\n              //false positive\n              x: dot.x,\n              y: dot.y,\n              category: 0,\n              color: color,\n            });\n          } else if (index >= cp[0] && index < cp[1]) {\n            dd.push({\n              //true positive\n              x: dot.x,\n              y: dot.y,\n              category: 1,\n              color: color,\n            });\n          } else if (index >= cp[1] && index < cp[2]) {\n            dd.push({\n              //false negative\n              x: dot.x,\n              y: dot.y,\n              category: 0,\n              color: d3.color(\"#909090\"),\n            });\n          } else {\n            dd.push({\n              //false positive\n              x: dot.x,\n              y: dot.y,\n              category: 1,\n              color: d3.color(\"#909090\"),\n            });\n          }\n        });\n\n        return dd;\n      }\n      let groupOneDots = getSymbolColor(\n        d3.color(this.state.group1Color),\n        groupOneFP,\n        groupOneTP,\n        groupOneFN,\n        groupOneTN\n      );\n      let groupTwoDots = getSymbolColor(\n        d3.color(this.state.group2Color),\n        groupTwoFP,\n        groupTwoTP,\n        groupTwoFN,\n        groupTwoTN\n      );\n\n      svg\n        .append(\"g\")\n        .selectAll(\"path\")\n        .data(groupOneDots)\n        .join(\"path\")\n        .attr(\n          \"transform\",\n          (d) =>\n            `translate(${margin.left + width * 0.05 + d.x},${d.y}),rotate(45)`\n        )\n        .attr(\"fill\", (d) => d.color)\n        .attr(\n          \"d\",\n          d3\n            .symbol()\n            .type(function (d) {\n              if (d.category === 0) {\n                return customCross;\n              } else {\n                return d3.symbolCircle;\n              }\n            })\n            .size(dotRadius * dotRadius * 1.5)\n        );\n\n      svg\n        .append(\"g\")\n        .selectAll(\"path\")\n        .data(groupTwoDots)\n        .join(\"path\")\n        .attr(\n          \"transform\",\n          (d) =>\n            `translate(${margin.left + width * 0.55 + d.x},${d.y}),rotate(45)`\n        )\n        .attr(\"fill\", (d) => d.color)\n        .attr(\n          \"d\",\n          d3\n            .symbol()\n            .type(function (d) {\n              if (d.category === 0) {\n                return customCross;\n              } else {\n                return d3.symbolCircle;\n              }\n            })\n            .size(dotRadius * dotRadius * 1.5)\n        );\n    }\n  }\n\n  getDisclaimer() {\n    return (\n      <span>\n        <strong>NOTE:</strong> GoodFaith Model has some bugs and so is disabled.\n      </span>\n    );\n  }\n\n  render() {\n    const message = this.state.damaging ? \"damaging\" : \"good faith\";\n    const opposite = this.state.damaging ? \"good\" : \"bad faith\";\n    return (\n      <React.Fragment>\n        <div\n          ref={this.visualizationRef}\n          style={{\n            width: \"55%\",\n            display: \"inline-block\",\n            verticalAlign: \"top\",\n          }}\n        >\n          <div className=\"upperSettings\">\n            <Grid container spacing={0}>\n              <TypeToggle\n                damaging={this.state.damaging}\n                // onChange={this.onTypeChange}\n                gridSize={9}\n                key={this.state.damaging}\n              />\n              <Grid item xs={3} className=\"threshold\">\n                <div className=\"innerBox\">\n                  <Typography variant=\"subtitle2\">\n                    <Box>threshold</Box>\n                  </Typography>\n\n                  <Grid container spacing={2} className=\"options\">\n                    <Grid item xs={12}>\n                      <Typography component=\"div\" variant=\"h6\" className=\"text\">\n                        {this.state.threshold} %\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n\n          <div\n            style={{\n              marginLeft: `${this.state.sliderRange[0]}px`,\n              width: `${\n                this.state.sliderRange[1] - this.state.sliderRange[0]\n              }px`,\n            }}\n          >\n            <Typography variant=\"subtitle2\">Fairness in Groups</Typography>\n            <ThresholdSlider\n              defaultValue={60}\n              middleText={this.getDisclaimer}\n              onChangeCommitted={this.onSliderChange}\n            />\n          </div>\n          <div className=\"compareChart\" ref={this.compareChartRef} />\n          <div\n            style={{\n              marginLeft: `${this.state.sliderRange[0]}px`,\n              width: `${\n                this.state.sliderRange[1] - this.state.sliderRange[0]\n              }px`,\n              transform: \"translate(0px,-20px)\",\n            }}\n          >\n            <div\n              style={{\n                width: \"50%\",\n                display: \"inline-block\",\n              }}\n            >\n              <Typography\n                variant=\"h6\"\n                component=\"div\"\n                style={{\n                  textAlign: \"center\",\n                  color: `${this.state.group1Color}`,\n                }}\n              >\n                Newcomer Edits\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                component=\"div\"\n                style={{ textAlign: \"center\" }}\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <Box width=\"80%\">\n                    Model performance on edits made by newcomer editors\n                  </Box>\n                </div>\n              </Typography>\n            </div>\n            <div\n              style={{\n                width: \"50%\",\n                display: \"inline-block\",\n                // transform: 'translate(0,-10px)',\n              }}\n            >\n              <Typography\n                variant=\"h6\"\n                component=\"div\"\n                style={{\n                  textAlign: \"center\",\n                  color: `${this.state.group2Color}`,\n                }}\n              >\n                Experienced Edits\n              </Typography>\n\n              <Typography\n                variant=\"body2\"\n                component=\"div\"\n                style={{ textAlign: \"center\" }}\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <Box width=\"80%\">\n                    Model performance on edits made by experienced editors\n                  </Box>\n                </div>\n              </Typography>\n            </div>\n            <div className=\"legendCard\">\n              <Typography component=\"div\" variant=\"subtitle2\">\n                legend\n              </Typography>\n              <Grid container spacing={0} style={{ marginTop: \"10px\" }}>\n                <Grid item xs={6}>\n                  <div className=\"legendMark\">\n                    <Circle size={12} color=\"#909090\" />{\" \"}\n                    <Typography component=\"span\" variant=\"body2\">\n                      Correctly classified {opposite} edits\n                    </Typography>\n                  </div>\n                </Grid>\n                <Grid item xs={6}>\n                  <div className=\"legendMark\">\n                    <Circle size={12} color={this.state.group1Color} />\n                    <span style={{ width: \"2px\" }} />\n                    <Circle size={12} color={this.state.group2Color} />{\" \"}\n                    <Typography component=\"span\" variant=\"body2\">\n                      Correctly classified {message} edits\n                    </Typography>\n                  </div>\n                </Grid>\n                <Grid item xs={6}>\n                  <div className=\"legendMark\">\n                    <Cross size={12} color=\"#909090\" />{\" \"}\n                    <Typography component=\"span\" variant=\"body2\">\n                      Uncaught {message} edits{\" \"}\n                    </Typography>\n                  </div>\n                </Grid>\n                <Grid item xs={6}>\n                  <div className=\"legendMark\">\n                    <Cross size={12} color={this.state.group1Color} />\n                    <span style={{ width: \"2px\" }} />\n                    <Cross size={12} color={this.state.group2Color} />{\" \"}\n                    <Typography component=\"span\" variant=\"body2\">\n                      Misclassified {opposite} edits{\" \"}\n                    </Typography>\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"sidePanel\" id=\"comparePerformanceSidePanel\">\n          <div\n            className=\"overallPerformance\"\n            ref={this.wholePerformanceRef}\n            style={{ borderBottom: \"1px solid lightgrey\" }}\n          >\n            <Typography component=\"div\" variant=\"subtitle2\">\n              PERFORMANCE\n            </Typography>\n            <Grid\n              container\n              className=\"performanceBlock\"\n              spacing={0}\n              style={{ marginTop: \"5px\", textAlign: \"left\", marginLeft: \"0px\" }}\n            >\n              <Grid item xs={4}>\n                <Typography component=\"div\" className=\"title\">\n                  ACC\n                </Typography>\n                <Typography component=\"div\">\n                  <Box className=\"data\">\n                    {(this.state.wholePerformance[0] * 100).toFixed(1)}%\n                  </Box>\n                </Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"div\" className=\"title\">\n                  FPR\n                </Typography>\n                <Typography component=\"div\">\n                  <Box className=\"data\">\n                    {(this.state.wholePerformance[1] * 100).toFixed(1)}%\n                  </Box>\n                </Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"div\" className=\"title\">\n                  FNR\n                </Typography>\n                <Typography component=\"div\">\n                  <Box className=\"data\">\n                    {(this.state.wholePerformance[2] * 100).toFixed(1)}%\n                  </Box>\n                </Typography>\n              </Grid>\n            </Grid>\n          </div>\n          <div style={{ display: \"flex\" }}>\n            <div\n              style={{\n                width: \"40%\",\n                display: \"inline-block\",\n              }}\n              className=\"groupPerformance\"\n            >\n              {[\"Accuracy\", \"FPR\", \"FNR\"].map((value, index) => {\n                return (\n                  <div\n                    style={{\n                      height: `${this.getMargin().blockHeight}px`,\n                      fontSize: \"12px\",\n                      transform: `translate(0px,7px)`,\n                    }}\n                  >\n                    <div\n                      style={{\n                        height: `${this.getMargin().chartHeight}px`,\n                      }}\n                    />\n                    <div\n                      style={{\n                        height: `${this.getMargin().chartHeight}px`,\n                        display: \"flex\",\n                        flexDirection: \"column-reverse\",\n                      }}\n                    >\n                      <Typography variant=\"body2\" className=\"classTitle\">\n                        {value}\n                      </Typography>\n                    </div>\n\n                    <div\n                      style={{\n                        height: `${this.getMargin().chartHeight}px`,\n                        display: \"flex\",\n                        flexDirection: \"column-reverse\",\n                      }}\n                    >\n                      <div>\n                        <div className=\"title\">newcomer edits</div>\n                        <div\n                          className=\"data\"\n                          style={{ color: this.state.group1Color }}\n                        >\n                          {this.state.groupOnePerformance === null\n                            ? \"...\"\n                            : (\n                                getPerformance(this.state.groupOnePerformance)[\n                                  index\n                                ] * 100\n                              ).toFixed(1) + \"%\"}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div\n                      style={{\n                        height: `${this.getMargin().chartHeight}px`,\n                        display: \"flex\",\n                        flexDirection: \"column-reverse\",\n                      }}\n                    >\n                      <div>\n                        <div className=\"title\">experienced edits</div>\n                        <div\n                          className=\"data\"\n                          style={{ color: this.state.group2Color }}\n                        >\n                          {this.state.groupTwoPerformance === null\n                            ? \"...\"\n                            : (\n                                getPerformance(this.state.groupTwoPerformance)[\n                                  index\n                                ] * 100\n                              ).toFixed(1) + \"%\"}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n            <div style={{ width: \"60%\", display: \"inline-block\" }}>\n              <div\n                className=\"comparePerformance\"\n                ref={this.comparePerformanceRef}\n              />\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GroupCompareVisualizer;\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport data_balanced from '../../data/data_balanced_1.csv';\nimport GroupCompareVisualizer from './compare_visualizer';\n\nconst groupSliceNumber = 100;\nclass GroupCompareChart extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      anonData: null,\n      loggedData: null,\n      newcomerData: null,\n      experiencedData: null,\n      change: 0,\n    };\n  }\n\n  componentDidMount () {\n    d3\n      .csv (data_balanced, d => {\n        return {\n          anonymous: d.anonymous == 'TRUE' ? true : false,\n          newcomer: d.edit_years <= 8 ? true : false,\n          confidence_faith: +d.confidence_faith,\n          faith_label: d.goodfaith == 'TRUE' ? true : false,\n          confidence_damage: +d.confidence_damage,\n          damaging_label: d.damaging == 'TRUE' ? true : false,\n        };\n      })\n      .then (data => {\n        const anonData = data\n          .filter (d => {\n            return d.anonymous;\n          })\n          .slice (0, groupSliceNumber);\n        const loggedData = data\n          .filter (d => {\n            return !d.anonymous;\n          })\n          .slice (0, groupSliceNumber);\n\n        const newcomerData = data\n          .filter (d => {\n            return d.newcomer;\n          })\n          .slice (0, groupSliceNumber);\n\n        const experiencedData = data\n          .filter (d => {\n            return !d.newcomer;\n          })\n          .slice (0, groupSliceNumber);\n        this.setState ({\n          anonData: anonData,\n          loggedData: loggedData,\n          newcomerData: newcomerData,\n          experiencedData: experiencedData,\n        });\n\n        console.log (newcomerData);\n        console.log (experiencedData);\n        this.setState ({change: 2});\n      });\n  }\n\n  //   shouldComponentUpdate (nextProps, nextState) {\n  //     return true;\n  //   }\n\n  render () {\n    console.log ('hi');\n    console.log (this.props);\n    return (\n      <div style={{display: 'flex'}}>\n        {/* <Test data={this.state.data} key={this.state.change} /> */}\n        <GroupCompareVisualizer\n          groupOneData={this.state.newcomerData}\n          groupTwoData={this.state.experiencedData}\n          key={this.state.change}\n          performanceData={this.props.performanceData}\n          sliceNumber={groupSliceNumber}\n        />\n      </div>\n    );\n  }\n}\n\nexport default GroupCompareChart;\n","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ToggleButtonGroup, ToggleButton } from \"@material-ui/lab\";\nimport {\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport TypeToggle from \"../../partials/typeToggle\";\nimport versions from \"../../data/versions.json\";\nimport axios from \"axios\";\n\nclass Recommender extends Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n    this.state = {\n      damaging: true,\n      threshold: null,\n      damagingData: null,\n      goodfaithData: null,\n      recommendations: null,\n    };\n  }\n\n  onTypeChange = (event, type) => {\n    if (type != null) {\n      this.setState({ damaging: type });\n    }\n  };\n\n  onThresChange = (event, thres) => {\n    if (thres != null) {\n      this.setState({ threshold: thres });\n    }\n  };\n\n  onTextChange = (event) => {\n    this.onThresChange(\n      event,\n      event.target.value ? Number(event.target.value) : null\n    );\n  };\n\n  getData = () => {\n    function getObject(array) {\n      var newArray = {};\n      var arrayIdx = 0;\n      var i = 0.01;\n\n      while (i < 1 && arrayIdx < array.length) {\n        if (array[arrayIdx] && i - array[arrayIdx][\"threshold\"] < 0.000001) {\n          var elem = array[arrayIdx];\n          newArray[i.toFixed(2)] = {\n            \"!f1\": elem[\"!f1\"],\n            \"!precision\": elem[\"!precision\"],\n            \"!recall\": elem[\"!recall\"],\n            accuracy: elem[\"accuracy\"],\n            f1: elem[\"f1\"],\n            filter_rate: elem[\"filter_rate\"],\n            fpr: elem[\"fpr\"],\n            match_rate: elem[\"match_rate\"],\n            precision: elem[\"precision\"],\n            recall: elem[\"recall\"],\n          };\n          i = Number.parseFloat(Number.parseFloat(i + 0.01).toFixed(2));\n        }\n        arrayIdx = arrayIdx + 1;\n      }\n      return newArray;\n    }\n\n    axios\n      .get(\n        \"https://ores.wikimedia.org/v3/scores/enwiki/?models=damaging|goodfaith&model_info=statistics.thresholds.true\"\n      )\n      .then((res) => {\n        const damagingArray =\n          res.data.enwiki.models.damaging.statistics.thresholds.true;\n        const goodfaithArray =\n          res.data.enwiki.models.goodfaith.statistics.thresholds.true;\n        console.log(\"got data\");\n        this.setState({\n          damagingData: getObject(damagingArray),\n          goodfaithData: getObject(goodfaithArray),\n        });\n      });\n  };\n\n  getRecommendations() {\n    const models = [\"damaging\", \"goodfaith\"];\n    const ranges = [\n      { type: \"Aggressive\", param: '\"maximum precision @ recall >= 0.9\"' },\n      { type: \"Cautious\", param: '\"maximum recall @ precision >= 0.9\"' },\n    ];\n    var rec = {\n      damaging: { Aggressive: null, Cautious: null, Balanced: null },\n      goodfaith: { Aggressive: null, Cautious: null, Balanced: null },\n    };\n\n    for (const i in models) {\n      for (const j in ranges) {\n        axios\n          .get(\n            \"https://ores.wikimedia.org/v3/scores/enwiki/?models=\" +\n              models[i] +\n              \"&model_info=statistics.thresholds.true.\" +\n              ranges[j].param\n          )\n          .then((res) => {\n            rec[models[i]][ranges[j].type] = Number.parseFloat(\n              res.data.enwiki.models[\n                models[i]\n              ].statistics.thresholds.true[0].threshold.toFixed(2)\n            );\n          });\n      }\n      rec[models[i]][\"Balanced\"] = models[i] == \"damaging\" ? 0.63 : 0.5;\n    }\n    console.log(rec);\n    this.setState({ recommendations: rec });\n    this.state.recommendations = rec;\n    return rec;\n  }\n\n  getProp(prop, escape) {\n    if (\n      this.state.threshold != null &&\n      this.state.threshold > 0 &&\n      this.state.threshold <= 0.98\n    ) {\n      return this.state.damaging\n        ? this.state.damagingData[this.state.threshold.toFixed(2)][prop]\n        : this.state.goodfaithData[this.state.threshold.toFixed(2)][prop];\n    } else return escape;\n  }\n\n  getRec(range) {\n    let rec = this.state.recommendations;\n    if (rec == null)\n      rec = {\n        damaging: { Aggressive: 0.1, Cautious: 0.63, Balanced: 0.94 },\n        goodfaith: { Aggressive: 0.85, Cautious: 0.5, Balanced: 0.05 },\n      };\n    const mod = this.state.damaging ? \"damaging\" : \"goodfaith\";\n    return rec[mod][range];\n  }\n\n  componentDidMount() {\n    this.getData();\n    this.getRecommendations();\n    this.setState({\n      damaging: true,\n      threshold: null,\n    });\n  }\n\n  render() {\n    const borderColor = this.state.threshold ? \"#00f\" : \"#ddd\";\n    const message = this.state.damaging ? \"damaging\" : \"good faith\";\n    const opposite = this.state.damaging ? \"good\" : \"bad faith\";\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            width: \"100%\",\n            display: \"inline-block\",\n            verticalAlign: \"top\",\n          }}\n        >\n          <div className=\"upperSettings\" style={{ height: \"8vh\" }}>\n            <Grid container spacing={0} style={{ height: \"100%\" }}>\n              <TypeToggle\n                damaging={this.state.damaging}\n                onChange={this.onTypeChange}\n                gridSize={4}\n                key={this.state.damaging}\n              />\n              <Grid\n                item\n                xs={8}\n                style={{\n                  height: \"auto\",\n                  paddingLeft: 10,\n                  paddingBottom: 10,\n                  borderLeft: \"1px solid #d3d3d3\",\n                }}\n              >\n                <Typography component=\"div\" variant=\"subtitle2\">\n                  <Box>INTERACTION FLOW</Box>\n                </Typography>\n                <Grid\n                  container\n                  style={{ justifyContent: \"space-evenly\", height: \"100%\" }}\n                >\n                  {[\n                    \"1. Choose a Goal\",\n                    \"2. Tune Recommendation\",\n                    \"3. Request Performance\",\n                  ].map((text) => (\n                    <Typography\n                      component=\"span\"\n                      variant=\"h6\"\n                      style={{\n                        fontWeight: 400,\n                        paddingTop: 5,\n                        paddingRight: 50,\n                      }}\n                    >\n                      {text}\n                    </Typography>\n                  ))}\n                </Grid>\n              </Grid>\n            </Grid>\n          </div>\n          <Grid container spacing={0} style={{ height: 800 }}>\n            <Grid item xs={5}>\n              <ToggleButtonGroup\n                orientation=\"vertical\"\n                exclusive\n                value={this.state.threshold}\n                onChange={this.onThresChange}\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  textAlign: \"center\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-evenly\",\n                  height: \"100%\",\n                  margin: \"0px 15%\",\n                }}\n              >\n                {[\n                  {\n                    type: \"Aggressive\",\n                    subtitle: \"Tools for human reviewers\",\n                    description:\n                      \"Catch more \" +\n                      message +\n                      \" edits at the cost of some \" +\n                      opposite +\n                      \" edits being falsely predicted.\",\n                  },\n                  {\n                    type: \"Balanced\",\n                    subtitle: \"Tools for human reviewers\",\n                    description:\n                      \"Similar number of uncaught \" +\n                      message +\n                      \" edits and falsely predicted \" +\n                      opposite +\n                      \" edits.\",\n                  },\n                  {\n                    type: \"Cautious\",\n                    subtitle: \"Automated bots\",\n                    description:\n                      \"Less falsely predicted \" +\n                      opposite +\n                      \" edits at the cost of more uncaught \" +\n                      message +\n                      \" edits.\",\n                  },\n                ].map((obj) => (\n                  <ToggleButton\n                    value={this.getRec(obj.type)}\n                    className=\"recommendOptions\"\n                  >\n                    <Grid container spacing={0}>\n                      <Grid item xs={6}>\n                        <h4>{obj.type} Model</h4>\n                        <h5>{obj.subtitle}</h5>\n                        <p>{obj.description}</p>\n                      </Grid>\n                      <Grid item xs={5}>\n                        <img\n                          src={obj.type + \".svg\"}\n                          height=\"100%\"\n                          width=\"100%\"\n                        />\n                      </Grid>\n                    </Grid>\n                  </ToggleButton>\n                ))}\n              </ToggleButtonGroup>\n            </Grid>\n            <Grid\n              item\n              xs={7}\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <div className=\"card\" style={{ borderColor: borderColor }}>\n                <Typography\n                  component=\"div\"\n                  variant=\"subtitle2\"\n                  style={{ fontSize: 13, color: \"#000\" }}\n                >\n                  <Box>SUGGESTED THRESHOLD</Box>\n                </Typography>\n                <Input\n                  value={\n                    this.state.threshold\n                      ? this.state.threshold.toFixed(2)\n                      : \"N/A\"\n                  }\n                  onChange={this.onTextChange}\n                  helperText={\"N/A\"}\n                  inputProps={{\n                    step: 0.01,\n                    min: 0.01,\n                    max: 0.98,\n                    type: \"number\",\n                  }}\n                  style={{\n                    fontSize: 50,\n                    alignSelf: \"left\",\n                  }}\n                />\n                <Typography variant=\"body2\">\n                  This threshold will catch around\n                  <strong>\n                    {\" \"}\n                    {this.getProp(\"recall\", \"--\") == \"--\"\n                      ? \"--\"\n                      : (this.getProp(\"recall\", \"--\") * 100).toFixed(0)}\n                    %{\" \"}\n                  </strong>\n                  of the {\" \" + message} edits while having\n                  <strong>\n                    {\" \"}\n                    {this.getProp(\"fpr\", \"--\") == \"--\"\n                      ? \"--\"\n                      : (this.getProp(\"fpr\", \"--\") * 100).toFixed(0)}\n                    %{\" \"}\n                  </strong>\n                  of the {\" \" + opposite} edits misclassified.\n                </Typography>\n                <ExpansionPanel>\n                  <ExpansionPanelSummary>\n                    <Typography variant=\"h5\">\n                      See specific performance\n                    </Typography>\n                  </ExpansionPanelSummary>\n                  <ExpansionPanelDetails>\n                    <div>\n                      {[\n                        \"!f1\",\n                        \"!precision\",\n                        \"!recall\",\n                        \"accuracy\",\n                        \"f1\",\n                        \"filter_rate\",\n                        \"fpr\",\n                      ].map((prop) => (\n                        <Typography variant=\"body2\" style={{ margin: 5 }}>\n                          <strong>{prop}</strong>: {this.getProp(prop, \"N/A\")}\n                        </Typography>\n                      ))}\n                    </div>\n                  </ExpansionPanelDetails>\n                </ExpansionPanel>\n\n                <ExpansionPanel>\n                  <ExpansionPanelSummary>\n                    <Typography variant=\"h5\">\n                      Copy code for this threshold\n                    </Typography>\n                  </ExpansionPanelSummary>\n                  <ExpansionPanelDetails>\n                    <pre style={{ textAlign: \"left\" }}>\n                      <p style={{ margin: 5, fontWeight: \"bold\" }}>\n                        def compute_metrics(y_true, y_pred_scores,{\" \"}\n                        {this.state.threshold}, model=\"\n                        {this.state.damaging ? \"damaging\" : \"goodfaith\"}\"):\n                      </p>\n                      {[\n                        \"# model = damaging or goodfaith\",\n                        \"# return a dictionary with metrics\",\n                        \"# y_true: a np array of true labels 1/0\",\n                        \"# y_pred_scores: a np array of predictions\",\n                      ].map((text, index) => (\n                        <p style={{ margin: 5 }}>\n                          {\"  \"}\n                          {text}\n                        </p>\n                      ))}\n                    </pre>\n                  </ExpansionPanelDetails>\n                </ExpansionPanel>\n              </div>\n            </Grid>\n          </Grid>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Recommender;\n","import React, { Component } from \"react\";\nimport Chart from \"./threshold_explorer/threshold_explorer_section\";\nimport GroupCompareChart from \"./group_compare/section\";\nimport Recommender from \"./threshold_recommender/recommender\";\nimport Typography from \"@material-ui/core/Typography\";\nimport data_performance from \"../data/performance.csv\";\nimport * as d3 from \"d3\";\nimport styled from \"styled-components\";\nimport { curveNatural } from \"d3\";\nimport { Route, Switch } from \"react-router-dom\";\n\nconst SectionHeader = styled.div`\n  padding-left: 10px;\n  padding-top: 5px;\n  padding-bottom: 30px;\n  border-bottom: 1px solid lightgrey;\n`;\n\nconst Section = styled.div`\n  display: block;\n  margin-bottom: 0vh;\n`;\n\nclass MainContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      performance_data: null,\n      change: 0,\n    };\n  }\n\n  componentDidMount() {\n    d3.csv(data_performance, (d) => {\n      return {\n        threshold: +d.threshold,\n        damaging_accuracy: +d.damaging_accuracy,\n        damaging_fpr: +d.damaging_fpr,\n        damaging_fnr: +d.damaging_fnr,\n        faith_accuracy: +d.faith_accuracy,\n        faith_fpr: +d.faith_fpr,\n        faith_fnr: +d.faith_fnr,\n      };\n    }).then((data) => {\n      this.setState({ performance_data: data });\n      this.setState({ change: 1 });\n    });\n  }\n\n  state = {};\n  render() {\n    return (\n      <React.Fragment>\n        {\" \"}\n        <Switch>\n          <Route path=\"/recommender\">\n            <Section style={{ height: \"97vh\", marginBottom: 0 }}>\n              <SectionHeader style={{ height: \"7vh\" }}>\n                <Typography variant=\"subtitle1\" style={{ textAlign: \"left\" }}>\n                  Threshold Recommender\n                </Typography>\n                <div\n                  style={{\n                    width: \"50%\",\n                    marginTop: \"10px\",\n                  }}\n                >\n                  <Typography variant=\"body2\" style={{ color: \"grey\" }}>\n                    The threshold recommender helps you decide a threshold that\n                    aligns with your model preferences.{\" \"}\n                  </Typography>\n                </div>\n              </SectionHeader>\n              <Recommender\n                style={{ height: \"77vh\" }}\n                performanceData={this.state.performance_data}\n                key={this.state.change}\n              />\n            </Section>\n          </Route>\n          <Route path=\"/disparity\">\n            <Section>\n              <SectionHeader>\n                <Typography variant=\"subtitle1\" style={{ textAlign: \"left\" }}>\n                  Disparity Visualizer\n                </Typography>\n                <div\n                  style={{\n                    width: \"50%\",\n                    marginTop: \"10px\",\n                  }}\n                >\n                  <Typography variant=\"body2\" style={{ color: \"grey\" }}>\n                    This visualization provides insights on how the model\n                    performs for wiki’s edited by different user groups; this\n                    may help you weigh the pros and cons of picking the\n                    threshold.{\" \"}\n                  </Typography>\n                </div>\n              </SectionHeader>\n              <GroupCompareChart\n                performanceData={this.state.performance_data}\n                key={this.state.change}\n              />\n            </Section>\n          </Route>\n          <Route path=\"/\">\n            <Section>\n              <SectionHeader>\n                <Typography variant=\"subtitle1\" style={{ textAlign: \"left\" }}>\n                  Threshold Explorer\n                </Typography>\n                <div\n                  style={{\n                    width: \"50%\",\n                    marginTop: \"10px\",\n                  }}\n                >\n                  <Typography variant=\"body2\" style={{ color: \"grey\" }}>\n                    Threshold Explorer helps you visualize model performance\n                    under specific thresholds with an example dataset. To start,\n                    select a model below, then pick a threshold.{\" \"}\n                  </Typography>\n                </div>\n              </SectionHeader>\n\n              <Chart\n                performanceData={this.state.performance_data}\n                key={this.state.change}\n              />\n            </Section>\n          </Route>\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MainContent;\n","import React, { Component } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Box from \"@material-ui/core/Box\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.scss\";\n\nclass DrawerList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { selected: -1 };\n    this.clickSection = this.clickSection.bind(this);\n  }\n\n  clickSection(index) {\n    this.setState({ selected: index });\n    console.log(\"ha\");\n    console.log(index);\n  }\n\n  render() {\n    return (\n      <List style={{ marginTop: \"10vh\" }}>\n        {[\n          { text: \"About ORES\", path: \"/about-ores\" },\n          { text: \"Threshold Explorer\", path: \"/explorer\" },\n          { text: \"Threshold Recommender\", path: \"/recommender\" },\n          { text: \"Disparity Visualizer\", path: \"/disparity\" },\n          { text: \"Feature Injection\", path: \"/injection\" },\n        ].map((obj, index) => (\n          <Link to={obj.path}>\n            <ListItem\n              className={this.props.klass}\n              button\n              key={obj.text}\n              onClick={() => this.clickSection(index)}\n            >\n              <div style={{ width: \"12.5%\" }} />\n              <div style={{ width: \"87.5%\" }}>\n                <Typography component=\"div\">\n                  <Box\n                    className={\n                      this.state.selected === index\n                        ? \"active-section\"\n                        : \"inactive-section\"\n                    }\n                  >\n                    {obj.text}\n                  </Box>\n                </Typography>\n              </div>\n            </ListItem>\n          </Link>\n        ))}\n      </List>\n    );\n  }\n}\n\nexport default DrawerList;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport * as d3 from \"d3\";\nimport Box from \"@material-ui/core/Box\";\nimport Chart from \"./components/threshold_explorer/threshold_explorer_section\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\nimport { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport styled from \"styled-components\";\nimport MainContent from \"./components/content\";\nimport DrawerList from \"./partials/drawerList\";\n\nimport { BrowserRouter, Link } from \"react-router-dom\";\n\nconst SectionHeader = styled.div`\n  padding-left: 10px;\n  padding-top: 5px;\n  padding-bottom: 30px;\n  border-bottom: 1px solid lightgrey;\n`;\n\n// const PerformanceTitle = styled.h1`\n//   font-size: 1.1em;\n//   text-align: left;\n//   margin-bottom: 0px;\n//   font-weight: 800;\n// `;\n\nconst Section = styled.div`\n  display: block;\n  margin-bottom: 15vh;\n`;\n\nconst drawerWidth = 270;\n\nlet theme = createMuiTheme({\n  typography: {\n    root: {\n      component: \"div\",\n    },\n    fontFamily: \"Noto Sans KR\",\n    subtitle1: {\n      fontFamily: \"Noto Serif\",\n      fontSize: \"24px\",\n    },\n    subtitle2: {\n      fontSize: \"12px\",\n      marginTop: \"10px\",\n      color: \"#B0B0B0\",\n      fontWeight: \"bold\",\n      textTransform: \"uppercase\",\n      textAlign: \"left\",\n    },\n    h6: {\n      fontWeight: \"bold\",\n      fontSize: \"16px\",\n      textAlign: \"left\",\n    },\n    body1: {\n      // textAlign: 'left',\n      fontSize: \"14px\",\n    },\n    body2: {\n      textAlign: \"left\",\n      fontSize: \"14px\",\n    },\n    button: {\n      fontStyle: \"italic\",\n    },\n    h5: {\n      fontSize: \"15px\",\n      color: \"blue\",\n      fontWeight: \"bold\",\n      textTransform: \"none\",\n      textAlign: \"left\",\n    },\n  },\n});\n\ntheme = responsiveFontSizes(theme);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    // fontFamily: 'Noto Sans, sans-serif',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    textAlign: \"center\",\n    position: \"relative\",\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    paddingTop: \"35px\",\n    paddingBottom: \"35px\",\n  },\n  paper: {\n    textAlign: \"left\",\n    padding: \"20px 20px\",\n  },\n  list: {\n    fontSize: \"16px\",\n    textDecoration: \"none\",\n  },\n  // necessary for content to be below app bar\n  toolbar: {\n    padding: theme.spacing(2),\n  },\n  content: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: \"1.5vh\",\n    height: \"100vh\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL + \"/\"}>\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n          <body>\n            <div className={classes.root}>\n              <Drawer\n                className={classes.drawer}\n                variant=\"permanent\"\n                classes={{ paper: classes.drawerPaper }}\n                anchor=\"left\"\n              >\n                <Link to=\"/\">\n                  <Paper className={classes.paper} elevation=\"0\">\n                    <div style={{ textAlign: \"center\" }}>\n                      <Typography variant=\"subtitle1\">WIKIPEDIA</Typography>\n                      <Typography style={{ textAlign: \"center\" }}>\n                        ORES Explorer\n                      </Typography>\n                    </div>\n                  </Paper>\n                </Link>\n                <DrawerList klass={classes.list} />\n                <List\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"120px\",\n                    width: \"100%\",\n                  }}\n                >\n                  {[\n                    { text: \"About ORES Explorer\", path: \"/about-us\" },\n                    { text: \"External Resources\", path: \"/external\" },\n                  ].map((obj, index) => (\n                    <Link to={obj.path}>\n                      <ListItem className={classes.list} button key={obj.text}>\n                        <div style={{ width: \"12.5%\" }} />\n                        <div style={{ width: \"87.5%\" }}>\n                          <Typography component=\"div\">\n                            <Box color=\"#989898\">{obj.text}</Box>\n                          </Typography>\n                        </div>\n                      </ListItem>\n                    </Link>\n                  ))}\n                </List>\n              </Drawer>\n              <main className={classes.content}>\n                <MainContent />\n              </main>\n            </div>\n          </body>\n        </div>\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render (\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById ('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister ();\n","module.exports = __webpack_public_path__ + \"static/media/performance.760a321c.csv\";"],"sourceRoot":""}