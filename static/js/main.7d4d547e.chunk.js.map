{"version":3,"sources":["logo.svg","partials/slider.jsx","components/threshold_explorer/threshold_performance.jsx","components/threshold_explorer/threshold_explorer.jsx","components/threshold_explorer/threshold_explorer_section.js","components/group_compare/compare_visualizer.jsx","components/group_compare/section.jsx","App.js","serviceWorker.js","index.js","data/data_not-balanced.csv","data/performance.csv","data/data_group.csv"],"names":["module","exports","ThresholdeSlider","props","state","PrettoSlider","valueLabelDisplay","aria-label","defaultValue","onChangeCommitted","this","Component","makeStyles","theme","root","width","spacing","margin","height","withStyles","color","paddingTop","paddingBottom","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","opacity","Slider","ThresholdPerformance","chartPerformanceRef","React","createRef","getBoxHeight","bind","getWidthHeightRatio","getMargin","getWidth","drawChart","redrawChart","threshold","current","parentElement","offsetWidth","top","right","bottom","inBetween","resizedFn","setState","window","addEventListener","clearTimeout","setTimeout","d3","remove","performance_data","dataCollection","map","d","value","Math","round","damaging_accuracy","damaging_fpr","damaging_fnr","eachHeight","svg","append","attr","getPerformanceColor","type","perform","getStrokeColor","preValue","currentValue","forEach","data","index","currentThreshold","x","domain","nice","range","y","getY","xAxis","g","call","tickSize","getXAxis","line","defined","isNaN","area","x1","x2","number","y0","y1","datum","filter","getAreaColor","style","text","ticks","Fragment","display","verticalAlign","className","ref","padding","flexDirection","justifyContent","marginBottom","Typography","variant","textAlign","ThresholdExplorer","onSliderChange","event","chartRef","widthHeightRatio","graph1Scale","dotWidth","sliderRange","sliderRight","diameter","dd","circles","xvalue","parseFloat","confidence_damage","toFixed","ceil","correct","damaging_label","damaging_predict","sort","a","b","ca","prev","cnt","abs","category","dodge","shape","s","size","selectAll","join","borderBottom","paddingLeft","borderLeft","key","Chart","change","data_balanced","confidence_faith","faith_label","goodfaith","damaging","then","slice","data_performance","faith_accuracy","faith_fpr","faith_fnr","console","log","nextProps","nextState","GroupCompareVisualizer","compareChartRef","anonData","loggedData","GroupCompareChart","anonymous","damagescore","SectionHeader","styled","div","Section","createMuiTheme","typography","fontFamily","subtitle1","fontSize","subtitle2","fontWeight","textTransform","h6","body1","body2","button","fontStyle","useStyles","appBar","drawer","flexShrink","drawerPaper","paper","list","toolbar","content","flexGrow","palette","background","default","App","classes","ThemeProvider","Drawer","anchor","Paper","elevation","List","ListItem","ListItemText","primary","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7d4d547e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles, makeStyles} from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nclass ThresholdeSlider extends Component {\n  constructor (props) {\n    super (props);\n  }\n  state = {};\n  render () {\n    // const classes = useStyles ();\n\n    return (\n      <PrettoSlider\n        valueLabelDisplay=\"auto\"\n        aria-label=\"pretto slider\"\n        defaultValue={60}\n        onChangeCommitted={this.props.onChangeCommitted}\n      />\n    );\n  }\n}\n\nexport default ThresholdeSlider;\n\nconst useStyles = makeStyles (theme => ({\n  root: {\n    width: 300 + theme.spacing (3) * 2,\n  },\n  margin: {\n    height: theme.spacing (3),\n  },\n}));\n\nconst PrettoSlider = withStyles ({\n  root: {\n    color: '#C57619',\n    height: 10,\n    paddingTop: '50px',\n    paddingBottom: '0px',\n  },\n  thumb: {\n    height: 18,\n    width: 18,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -9,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50%+12px)',\n  },\n  track: {\n    height: 4,\n    borderRadius: 4,\n    color: '#909090',\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4,\n    color: '#C57619',\n    opacity: '100%',\n  },\n}) (Slider);\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport styled from 'styled-components';\n\n// const PerformanceTitle = styled.h1`\n//   font-size: 1.1em;\n//   text-align: left;\n//   margin-bottom: 0px;\n//   font-weight: 800;\n// `;\n\n// const PerformanceText = styled.p`\n//   font-size: 1em;\n//   text-align: left;\n//   margin-top: 5px;\n//   color: black;\n// `;\n\nclass ThresholdPerformance extends Component {\n  constructor (props) {\n    super (props);\n    this.chartPerformanceRef = React.createRef ();\n    this.getBoxHeight = this.getBoxHeight.bind (this);\n    this.getWidthHeightRatio = this.getWidthHeightRatio.bind (this);\n    this.getMargin = this.getMargin.bind (this);\n    this.getWidth = this.getWidth.bind (this);\n    this.drawChart = this.drawChart.bind (this);\n    this.redrawChart = this.redrawChart.bind (this);\n    this.state = {\n      threshold: 80,\n      width: 1000,\n      height: 1000,\n    };\n  }\n\n  getWidthHeightRatio () {\n    return 2;\n  }\n\n  getWidth () {\n    if (this.chartPerformanceRef.current == null) {\n      return this.state.width;\n    } else {\n      return this.chartPerformanceRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  getMargin () {\n    return {\n      top: 20,\n      right: 5,\n      bottom: 20,\n      left: 30,\n      inBetween: this.state.width * 0.2,\n    };\n  }\n  componentDidMount () {\n    let width = this.getWidth ();\n    let height = width * this.getWidthHeightRatio ();\n\n    this.setState (\n      {\n        width: width,\n        height: height,\n      },\n      () => {\n        this.drawChart ();\n      }\n    );\n\n    let resizedFn;\n    window.addEventListener ('resize', () => {\n      clearTimeout (resizedFn);\n      resizedFn = setTimeout (() => {\n        this.redrawChart ();\n      }, 200);\n    });\n  }\n\n  redrawChart () {\n    let width = this.getWidth ();\n    this.setState ({width: width, height: width * this.getWidthHeightRatio ()});\n    d3.select ('.performanceChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n  }\n\n  drawChart () {\n    if (this.props.performance_data != null) {\n      const dataAccuracy = this.props.performance_data.map (d => ({\n        threshold: d.threshold,\n        value: Math.round (d.damaging_accuracy * 100),\n      }));\n\n      const dataFPR = this.props.performance_data.map (d => ({\n        threshold: d.threshold,\n        value: Math.round (d.damaging_fpr * 100),\n      }));\n\n      const dataFNR = this.props.performance_data.map (d => ({\n        threshold: d.threshold,\n        value: Math.round (d.damaging_fnr * 100),\n      }));\n\n      const dataCollection = [dataAccuracy, dataFPR, dataFNR];\n\n      const margin = this.getMargin ();\n      let width = this.state.width - margin.left - margin.right;\n      let height = this.state.height - margin.top - margin.bottom;\n      let eachHeight = (height - margin.inBetween * 2) / 3;\n\n      const betweenThreshold = (x1, x2, number) => {\n        return (number >= x1 && number <= x2) || (number <= x1 && number >= x2);\n      };\n\n      //   const xAxis = g =>\n      //     g\n      //       .attr ('transform', `translate(0,${height / 2})`)\n      //       .call (d3.axisBottom (x).ticks (width / 80).tickSizeOuter (0));\n\n      const getXAxis = (x, type) => {\n        switch (type) {\n          case 0:\n            return function (g) {\n              g\n                .attr ('transform', `translate(0,${eachHeight + margin.top})`)\n                .attr ('class', 'axisGreyY')\n                .call (d3.axisBottom (x).tickSize (0));\n            };\n            break;\n          case 1:\n            return function (g) {\n              g\n                .attr (\n                  'transform',\n                  `translate(0,${eachHeight * 2 + margin.inBetween + margin.top})`\n                )\n                .attr ('class', 'axisGreyY')\n                .call (d3.axisBottom (x).tickSize (0));\n            };\n            break;\n          default:\n            return function (g) {\n              g\n                .attr ('transform', `translate(0,${height + margin.top})`)\n                .attr ('class', 'axisGreyY')\n                .call (d3.axisBottom (x).tickSize (0));\n            };\n        }\n      };\n\n      //   const y = d3\n      //     .scaleLinear ()\n      //     .domain ([0, d3.max (data, d => d.value)])\n      //     .nice ()\n      //     .range ([height / 2, margin.top]);\n\n      const getY = type => {\n        switch (type) {\n          case 0:\n            return d3\n              .scaleLinear ()\n              .domain ([0, d3.max (dataCollection[0], d => d.value)])\n              .nice ()\n              .range ([eachHeight + margin.top, margin.top]);\n            break;\n          case 1:\n            return d3\n              .scaleLinear ()\n              .domain ([0, d3.max (dataCollection[1], d => d.value)])\n              .nice ()\n              .range ([\n                eachHeight * 2 + margin.inBetween + margin.top,\n                eachHeight + margin.inBetween + margin.top,\n              ]);\n            break;\n          default:\n            return d3\n              .scaleLinear ()\n              .domain ([0, d3.max (dataCollection[2], d => d.value)])\n              .nice ()\n              .range ([\n                height + margin.top,\n                eachHeight * 2 + margin.inBetween * 2 + margin.top,\n              ]);\n        }\n      };\n\n      let svg = d3\n        .select ('.performanceChart')\n        .append ('svg')\n        .attr ('width', width + margin.left + margin.right)\n        .attr ('height', height + margin.top + margin.bottom);\n\n      const getPerformanceColor = (type, perform) => {\n        if (type == 'stroke') {\n          //color for stroke\n          if (perform == 1) {\n            return d3.color ('#159256');\n          } else if (perform == 0) {\n            return d3.color ('#878787');\n          } else {\n            return d3.color ('#921515');\n          }\n        } else {\n          //color for area\n          if (perform == 1) {\n            return d3.color ('#F0F7F4');\n          } else if (perform == 0) {\n            return d3.color ('#E8E8E8');\n          } else {\n            return d3.color ('#F7F0F0');\n          }\n        }\n      };\n\n      const getAreaColor = (type, preValue, currentValue) => {\n        if (type == 0) {\n          //accuracy -> the higher the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor ('area', 1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor ('area', -1);\n          } else {\n            return getPerformanceColor ('area', 0);\n          }\n        } else {\n          //FPR, FNR -> the lower the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor ('area', -1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor ('area', 1);\n          } else {\n            return getPerformanceColor ('area', 0);\n          }\n        }\n      };\n\n      const getStrokeColor = (type, preValue, currentValue) => {\n        if (type == 0) {\n          //accuracy -> the higher the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor ('stroke', 1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor ('stroke', -1);\n          } else {\n            return getPerformanceColor ('stroke', 0);\n          }\n        } else {\n          //FPR, FNR -> the lower the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor ('stroke', -1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor ('stroke', 1);\n          } else {\n            return getPerformanceColor ('stroke', 0);\n          }\n        }\n      };\n\n      dataCollection.forEach ((data, index) => {\n        const defaultValue = data[50].value;\n        const currentValue = data[this.props.threshold].value;\n        const currentThreshold = this.props.threshold;\n        const x = d3\n          .scaleLinear ()\n          .domain ([0, d3.max (data, d => d.threshold)])\n          .nice ()\n          .range ([margin.left, width - margin.right]);\n\n        const y = getY (index);\n        const xAxis = getXAxis (x, index);\n\n        const yAxis = g =>\n          g\n            .attr ('transform', `translate(${margin.left},0)`)\n            .attr ('class', 'axisGrey')\n            .call (d3.axisLeft (y).ticks (2));\n\n        const line = d3\n          .line ()\n          .defined (d => !isNaN (d.value))\n          .x (d => x (d.threshold))\n          .y (d => y (d.value));\n\n        const area = d3\n          .area ()\n          .defined (d =>\n            betweenThreshold (0.5, currentThreshold * 0.01, d.threshold)\n          )\n          .x (d => x (d.threshold))\n          .y0 (y (0))\n          .y1 (d => y (d.value));\n\n        svg\n          .append ('path')\n          .datum (data.filter (area.defined ()))\n          .attr ('fill', getAreaColor (index, defaultValue, currentValue))\n          .attr ('d', area);\n\n        svg\n          .append ('path')\n          .datum (data)\n          .attr ('fill', 'none')\n          .attr ('stroke', 'grey')\n          .attr ('stroke-width', 1.5)\n          .attr ('stroke-linejoin', 'round')\n          .attr ('stroke-linecap', 'round')\n          .attr ('d', line);\n\n        svg\n          .append ('line')\n          .attr ('x1', x (currentThreshold * 0.01))\n          .attr ('y1', y (currentValue))\n          .attr ('x2', x (currentThreshold * 0.01))\n          .attr (\n            'y2',\n            margin.top + index * margin.inBetween + (index + 1) * eachHeight\n          )\n          .attr ('stroke-width', 2)\n          .attr ('stroke', getStrokeColor (index, defaultValue, currentValue))\n          .style ('stroke-dasharray', '5,5');\n\n        svg\n          .append ('text')\n          .attr ('x', x (currentThreshold * 0.01))\n          .attr ('y', y (currentValue + 8))\n          .attr ('text-anchor', 'middle')\n          .text (`${currentValue}%`)\n          .attr ('font-family', 'sans-serif')\n          .attr ('font-size', '16px')\n          .attr ('fill', getStrokeColor (index, defaultValue, currentValue));\n\n        svg.append ('g').call (xAxis);\n\n        svg.append ('g').call (yAxis);\n      });\n    }\n  }\n\n  getBoxHeight () {\n    const margin = this.getMargin ();\n    return (\n      (this.state.height - margin.top - margin.bottom - margin.inBetween * 2) /\n      3\n    );\n  }\n\n  render () {\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            width: '50%',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        >\n          <div\n            style={{marginTop: '20px'}}\n            className=\"performanceChart\"\n            ref={this.chartPerformanceRef}\n          />\n        </div>\n        <div\n          style={{\n            width: '40%',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        >\n          <div\n            style={{\n              height: `${this.getBoxHeight ()}px`,\n              padding: '0% 5%',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              marginTop: `${this.getMargin ().top + 20}px`,\n              marginBottom: `${this.getMargin ().inBetween}px`,\n            }}\n          >\n            <div>\n              <Typography variant=\"h6\" textAlign=\"center\">\n                Accuracy{' '}\n              </Typography>\n              <Typography variant=\"body2\">\n                Correctly predicted edits out of all edits{' '}\n              </Typography>\n            </div>\n\n          </div>\n\n          <div\n            style={{\n              height: `${this.getBoxHeight ()}px`,\n              padding: '0% 5%',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              marginBottom: `${this.getMargin ().inBetween}px`,\n            }}\n          >\n            <div>\n              <Typography variant=\"h6\" textAlign=\"center\">\n                False Positive Rate\n              </Typography>\n              <Typography variant=\"body2\">\n                Percentage of good edits that are falsely identified as damaing\n                {' '}\n              </Typography>\n            </div>\n          </div>\n\n          <div\n            style={{\n              height: `${this.getBoxHeight ()}px`,\n              padding: '0% 5%',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n            }}\n          >\n            <div>\n              <Typography variant=\"h6\" textAlign=\"center\">\n                False Negative Rate\n              </Typography>\n              <Typography variant=\"body2\">\n                Percentage of damaing edits that won’t be identified {' '}\n              </Typography>\n            </div>\n\n          </div>\n\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ThresholdPerformance;\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport ThresholdSlider from '../../partials/slider';\nimport ThresholdPerformance from './threshold_performance';\nimport Typography from '@material-ui/core/Typography';\n\nclass ThresholdExplorer extends Component {\n  constructor (props) {\n    super (props);\n    this.chartRef = React.createRef ();\n    this.getWidth = this.getWidth.bind (this);\n    this.drawChart = this.drawChart.bind (this);\n    this.redrawChart = this.redrawChart.bind (this);\n    this.state = {\n      threshold: 60,\n      width: 1000,\n      height: 1000,\n      widthHeightRatio: 0.8,\n      graph1Scale: 1,\n      dotWidth: 0,\n      sliderRange: [20, 1000],\n    };\n  }\n\n  getWidth () {\n    if (this.chartRef.current == null) {\n      return this.state.width;\n    } else {\n      return this.chartRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  onSliderChange = (event, threshold) => {\n    this.setState ({\n      threshold: threshold,\n    });\n    d3.select ('.rowChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n  };\n\n  componentDidMount () {\n    let width = this.getWidth ();\n    let height = width * 0.8;\n    let sliderRight = width - 30;\n\n    this.setState (\n      {\n        width: width,\n        height: height,\n        sliderRange: [10, sliderRight],\n      },\n      () => {\n        this.drawChart ();\n      }\n    );\n\n    let resizedFn;\n    window.addEventListener ('resize', () => {\n      clearTimeout (resizedFn);\n      resizedFn = setTimeout (() => {\n        this.redrawChart ();\n      }, 200);\n    });\n  }\n\n  redrawChart () {\n    let width = this.getWidth ();\n    let sliderRight = width - 30;\n    this.setState ({\n      width: width,\n      height: width * 0.8,\n      sliderRange: [10, sliderRight],\n    });\n    d3.select ('.rowChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n  }\n\n  drawChart () {\n    const margin = {top: 0, right: 30, bottom: 30, left: 10};\n    let width = this.state.width - margin.left - margin.right;\n    let height = this.state.height - margin.top - margin.bottom;\n    // append the svg object to the body of the page\n    let svg = d3\n      .select ('.rowChart')\n      .append ('svg')\n      .attr ('width', width + margin.left + margin.right)\n      .attr ('height', height + margin.top + margin.bottom);\n\n    const threshold = this.state.threshold / 100;\n    const graph1Scale = 1;\n\n    const diameter = width * graph1Scale / 50;\n    const dotWidth = diameter * 0.5;\n    if (this.props.data != null) {\n      const dd = dodge (threshold, this.props.data, diameter);\n\n      const xAxis = g =>\n        g\n          .attr ('transform', `translate(0,${margin.top})`)\n          .call (d3.axisTop (x).ticks (0));\n\n      const x = d3\n        .scaleLinear ()\n        .domain ([0, 1])\n        .nice ()\n        .range ([margin.left, width + margin.left]);\n\n      const shape = d3.scaleOrdinal (\n        dd.map (d => d.category),\n        d3.symbols.map (s =>\n          d3.symbol ().size (diameter * diameter * 0.4).type (s) ()\n        )\n      );\n\n      function dodge (threshold, data, diameter) {\n        const circles = data\n          .map (d => ({\n            xvalue: parseFloat (d.confidence_damage).toFixed (2),\n            x: 0.02 *\n              Math.ceil (parseFloat (d.confidence_damage).toFixed (2) * 50),\n\n            correct: parseFloat (d.confidence_damage).toFixed (2) >=\n              threshold ==\n              d.damaging_label,\n            damaging_predict: parseFloat (d.confidence_damage).toFixed (2) >=\n              threshold,\n            damaging_label: d.damaging_label,\n          }))\n          .sort (function (a, b) {\n            if (a.x == b.x) {\n              let ca = a.correct ? 1 : 0;\n              let cb = b.correct ? 1 : 0;\n              return cb - ca;\n            } else {\n              return b.x - a.x;\n            }\n          });\n        const epsilon = 1e-4;\n\n        let prev = 100;\n        let cnt = 1;\n\n        for (const b of circles) {\n          //determine the position of the dot\n          if (Math.abs (prev - b.x) < epsilon) {\n            // belongs to the same col\n            cnt += 1;\n            b.y = diameter * cnt;\n          } else {\n            prev = b.x;\n            cnt = 1;\n            b.y = diameter;\n          }\n\n          if (b.correct) {\n            b.category = 'circle';\n          } else {\n            b.category = 'cross';\n          }\n\n          if (b.damaging_predict) {\n            b.color = d3.color ('#C57619');\n          } else {\n            b.color = d3.color ('#909090');\n          }\n        }\n\n        return circles;\n      }\n\n      // svg.append ('g').call (xAxis);\n\n      svg\n        .append ('line')\n        .attr ('x1', width + margin.left - dotWidth * 100 * (1 - threshold))\n        .attr ('y1', margin.top)\n        .attr ('x2', width + margin.left - dotWidth * 100 * (1 - threshold))\n        .attr ('y2', height - 30)\n        .attr ('stroke-width', 2)\n        .attr ('stroke', 'black')\n        .style ('stroke-dasharray', '5,5');\n\n      svg\n        .append ('text')\n        .attr ('x', width + margin.left - dotWidth * 100 * (1 - threshold))\n        .attr ('y', height - 15)\n        .attr ('text-anchor', 'middle')\n        .text (threshold)\n        .attr ('font-family', 'sans-serif')\n        .attr ('font-size', '15px');\n\n      svg\n        .append ('g')\n        .selectAll ('path')\n        .data (dd)\n        .join ('path')\n        .attr (\n          'transform',\n          d => `translate(${x (d.x)},${d.y + margin.top}), rotate(45)`\n        )\n        .attr ('fill', function (d) {\n          return d.color;\n        })\n        .attr ('d', d => shape (d.category));\n    }\n  }\n\n  // shouldComponentUpdate (nextProps, nextState) {\n  //   return (\n  //     this.props.performance_data !== nextProps.performance_data ||\n  //     this.state != nextState\n  //   );\n  // }\n\n  render () {\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            width: '52%',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        >\n          <div\n            style={{\n              borderBottom: '1px solid lightgrey',\n              height: '50px',\n              paddingLeft: '10px',\n            }}\n          >\n            <Typography variant=\"subtitle2\">MODEL OPTIONS</Typography>\n          </div>\n          <div\n            style={{\n              marginLeft: `${this.state.sliderRange[0]}px`,\n              width: `${this.state.sliderRange[1] - this.state.sliderRange[0]}px`,\n            }}\n          >\n            <ThresholdSlider\n              defaultValue={60}\n              onChangeCommitted={this.onSliderChange}\n            />\n\n          </div>\n          <div className=\"rowChart\" ref={this.chartRef} />\n        </div>\n\n        <div\n          style={{\n            width: '43%',\n            paddingLeft: '2%',\n\n            borderLeft: '1px solid lightgrey',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        >\n          <ThresholdPerformance\n            performance_data={this.props.performance_data}\n            threshold={this.state.threshold}\n            key={this.state.threshold}\n          />\n        </div>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ThresholdExplorer;\n","import React, {Component} from 'react';\nimport ThresholdExplorer from './threshold_explorer';\nimport * as d3 from 'd3';\nimport data_balanced from '../../data/data_not-balanced.csv';\nimport data_performance from '../../data/performance.csv';\n\nclass Chart extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      data: null,\n      change: 0,\n    };\n  }\n\n  componentDidMount () {\n    d3\n      .csv (data_balanced, d => {\n        return {\n          confidence_faith: d.confidence_faith,\n          faith_label: d.goodfaith == 'True' ? true : false,\n          confidence_damage: +d.confidence_damage,\n          damaging_label: d.damaging == 'True' ? true : false,\n        };\n      })\n      .then (data => {\n        this.setState ({data: data.slice (0, 2000)});\n        this.setState ({change: 2});\n        d3\n          .csv (data_performance, d => {\n            return {\n              threshold: +d.threshold,\n              damaging_accuracy: +d.damaging_accuracy,\n              damaging_fpr: +d.damaging_fpr,\n              damaging_fnr: +d.damaging_fnr,\n              faith_accuracy: +d.faith_accuracy,\n              faith_fpr: +d.faith_fpr,\n              faith_fnr: +d.faith_fnr,\n            };\n          })\n          .then (data => {\n            console.log ('data');\n            console.log (this.state.data);\n            this.setState ({performance_data: data});\n            this.setState ({change: 3});\n          });\n      });\n  }\n\n  shouldComponentUpdate (nextProps, nextState) {\n    return true;\n  }\n\n  render () {\n    return (\n      <div style={{display: 'flex'}}>\n        {/* <Test data={this.state.data} key={this.state.change} /> */}\n        <ThresholdExplorer\n          data={this.state.data}\n          performance_data={this.state.performance_data}\n          key={this.state.change}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport dotData from '../../data/new.json';\nimport Typography from '@material-ui/core/Typography';\n\nclass GroupCompareVisualizer extends Component {\n  constructor (props) {\n    super (props);\n\n    this.compareChartRef = React.createRef ();\n    this.getWidth = this.getWidth.bind (this);\n    // this.pack = this.pack (this);\n    this.drawChart = this.drawChart.bind (this);\n    this.redrawChart = this.redrawChart.bind (this);\n    this.state = {\n      threshold: 50,\n      width: 1000,\n      height: 1000,\n      widthHeightRatio: 0.8,\n      graph1Scale: 1,\n      dotWidth: 0,\n      sliderRange: [20, 1000],\n    };\n  }\n\n  getWidth () {\n    if (this.compareChartRef.current == null) {\n      return this.state.width;\n    } else {\n      return this.compareChartRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  // pack = data =>\n  //   d3.pack ().size ([width - 2, height - 3]).padding (3) (\n  //     d3.hierarchy (data).sum (d => d.value).sort ((a, b) => b.value - a.value)\n  //   );\n\n  onSliderChange = (event, threshold) => {\n    this.setState ({\n      threshold: threshold,\n    });\n    d3.select ('.rowChart svg').remove ();\n    // this.drawChart = this.drawChart.bind (this);\n    // this.drawChart ();\n  };\n\n  componentDidMount () {\n    let width = this.getWidth ();\n    let height = width * 0.8;\n    let sliderRight = width - 30;\n\n    this.setState (\n      {\n        width: width,\n        height: height,\n        sliderRange: [10, sliderRight],\n      },\n      () => {\n        this.drawChart ();\n      }\n    );\n\n    let resizedFn;\n    window.addEventListener ('resize', () => {\n      clearTimeout (resizedFn);\n      resizedFn = setTimeout (() => {\n        // this.redrawChart ();\n      }, 200);\n    });\n  }\n\n  redrawChart () {\n    let width = this.getWidth ();\n    let sliderRight = width - 30;\n    this.setState ({\n      width: width,\n      height: width * 0.8,\n      sliderRange: [10, sliderRight],\n    });\n    d3.select ('.rowChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n  }\n\n  drawChart () {\n    const margin = {top: 0, right: 30, bottom: 30, left: 10};\n    let width = this.state.width - margin.left - margin.right;\n    let height = this.state.height - margin.top - margin.bottom;\n    // append the svg object to the body of the page\n    let svg = d3\n      .select ('.compareChart')\n      .append ('svg')\n      .attr ('width', width + margin.left + margin.right)\n      .attr ('height', height + margin.top + margin.bottom);\n\n    if (this.props.anonData != null && this.props.loggedData != null) {\n    }\n  }\n\n  // shouldComponentUpdate (nextProps, nextState) {\n  //   return (\n  //     this.props.performance_data !== nextProps.performance_data ||\n  //     this.state != nextState\n  //   );\n  // }\n\n  render () {\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            width: '52%',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        >\n          <div\n            style={{\n              borderBottom: '1px solid lightgrey',\n              height: '50px',\n              paddingLeft: '10px',\n            }}\n          >\n            <Typography variant=\"subtitle2\">MODEL OPTIONS</Typography>\n          </div>\n          <div className=\"compareChart\" ref={this.compareChartRef} />\n        </div>\n\n        <div\n          style={{\n            width: '43%',\n            paddingLeft: '2%',\n\n            borderLeft: '1px solid lightgrey',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        />\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GroupCompareVisualizer;\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport data_balanced from '../../data/data_group.csv';\nimport GroupCompareVisualizer from './compare_visualizer';\n\nclass GroupCompareChart extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      anonData: null,\n      loggedData: null,\n      change: 0,\n    };\n  }\n\n  componentDidMount () {\n    d3\n      .csv (data_balanced, d => {\n        return {\n          anonymous: d.anonymous == 'True' ? true : false,\n          confidence_faith: d.confidence_faith,\n          faith_label: d.goodfaith == 'True' ? true : false,\n          confidence_damage: +d.damagescore,\n          damaging_label: d.damaging == 'True' ? true : false,\n        };\n      })\n      .then (data => {\n        const anonData = data\n          .filter (d => {\n            return d.anonymous;\n          })\n          .slice (0, 100);\n        const loggedData = data\n          .filter (d => {\n            return !d.anonymous;\n          })\n          .slice (0, 100);\n        this.setState ({anonData: anonData, loggedData: loggedData});\n        this.setState ({change: 2});\n      });\n  }\n\n  //   shouldComponentUpdate (nextProps, nextState) {\n  //     return true;\n  //   }\n\n  render () {\n    return (\n      <div style={{display: 'flex'}}>\n        {/* <Test data={this.state.data} key={this.state.change} /> */}\n        <GroupCompareVisualizer\n          anonData={this.state.anonData}\n          loggedData={this.state.loggedData}\n          key={this.state.change}\n        />\n      </div>\n    );\n  }\n}\n\nexport default GroupCompareChart;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport * as d3 from 'd3';\nimport Box from '@material-ui/core/Box';\nimport Chart from './components/threshold_explorer/threshold_explorer_section';\nimport Paper from '@material-ui/core/Paper';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {createMuiTheme} from '@material-ui/core/styles';\nimport {ThemeProvider} from '@material-ui/styles';\nimport styled from 'styled-components';\nimport GroupCompareChart from './components/group_compare/section';\n\nconst SectionHeader = styled.div`\n  padding-left: 10px;\n  padding-top: 5px;\n  padding-bottom: 30px;\n  border-bottom: 1px solid lightgrey;\n`;\n\n// const PerformanceTitle = styled.h1`\n//   font-size: 1.1em;\n//   text-align: left;\n//   margin-bottom: 0px;\n//   font-weight: 800;\n// `;\n\nconst Section = styled.div`\n  display: block;\n`;\n\nconst drawerWidth = 240;\n\nconst theme = createMuiTheme ({\n  typography: {\n    fontFamily: 'Noto Sans',\n    subtitle1: {\n      fontFamily: 'Noto Serif',\n      fontSize: '24px',\n    },\n    subtitle2: {\n      fontSize: '12px',\n      color: '#B0B0B0',\n      fontWeight: 'bold',\n      textTransform: 'capitalize',\n      textAlign: 'left',\n    },\n    h6: {\n      fontWeight: 'bold',\n      fontSize: '16px',\n      textAlign: 'left',\n    },\n    body1: {\n      // textAlign: 'left',\n      fontSize: '14px',\n    },\n    body2: {\n      textAlign: 'left',\n      fontSize: '14px',\n    },\n    button: {\n      fontStyle: 'italic',\n    },\n  },\n});\n\nconst useStyles = makeStyles (theme => ({\n  root: {\n    display: 'flex',\n    // fontFamily: 'Noto Sans, sans-serif',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    textAlign: 'center',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    color: 'red',\n  },\n  paper: {\n    textAlign: 'left',\n    padding: '20px 20px',\n  },\n  list: {\n    fontSize: '19px',\n    color: 'black',\n    textAlign: 'center',\n  },\n  // necessary for content to be below app bar\n  toolbar: {\n    padding: theme.spacing (2),\n  },\n  content: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing (2),\n  },\n}));\n\nfunction App () {\n  const classes = useStyles ();\n  return (\n    <ThemeProvider theme={theme}>\n\n      <div className=\"App\">\n        <body>\n          <div className={classes.root}>\n\n            <Drawer\n              className={classes.drawer}\n              variant=\"permanent\"\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              anchor=\"left\"\n            >\n              <Paper className={classes.paper} elevation=\"0\">\n                <div style={{textAlign: 'center'}}>\n                  <Typography variant=\"subtitle1\">\n                    WIKIPEDIA\n                  </Typography>\n                  <Typography style={{textAlign: 'center'}}>\n                    ORES Explorer\n                  </Typography>\n                </div>\n\n              </Paper>\n              <List style={{marginTop: '100px'}}>\n                {[\n                  'About ORES',\n                  'Threshold Explorer',\n                  'Threshold Calculator',\n                  'Group Comparison',\n                ].map ((text, index) => (\n                  <ListItem className={classes.list} button key={text}>\n                    {/* <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <InboxIcon />}\n                </ListItemIcon> */}\n                    <ListItemText primary={text} />\n                  </ListItem>\n                ))}\n              </List>\n\n            </Drawer>\n            <main className={classes.content}>\n              <Section>\n\n                <SectionHeader>\n                  <Typography variant=\"subtitle1\" style={{textAlign: 'left'}}>\n                    Threshold Explorer\n                  </Typography>\n                  <div\n                    style={{\n                      width: '50%',\n                      marginTop: '10px',\n                    }}\n                  >\n                    <Typography variant=\"body2\" style={{color: 'grey'}}>\n                      Threshold Explorer helps you visualize model performance under specific thresholds with an example dataset. To start, select a model below, then pick a threshold.\n                      {' '}\n                    </Typography>\n                  </div>\n\n                </SectionHeader>\n\n                <Chart />\n              </Section>\n              <Section>\n                <SectionHeader>\n                  <Typography variant=\"subtitle1\" style={{textAlign: 'left'}}>\n                    Disparity\n                  </Typography>\n                  <div\n                    style={{\n                      width: '50%',\n                      marginTop: '10px',\n                    }}\n                  >\n                    <Typography variant=\"body2\" style={{color: 'grey'}}>\n                      Threshold Explorer helps you visualize model performance under specific thresholds with an example dataset. To start, select a model below, then pick a threshold.\n                      {' '}\n                    </Typography>\n                  </div>\n                </SectionHeader>\n                <GroupCompareChart />\n              </Section>\n\n            </main>\n          </div>\n        </body>\n\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render (\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById ('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister ();\n","module.exports = __webpack_public_path__ + \"static/media/data_not-balanced.2c5d8911.csv\";","module.exports = __webpack_public_path__ + \"static/media/performance.760a321c.csv\";","module.exports = __webpack_public_path__ + \"static/media/data_group.88e6b893.csv\";"],"sourceRoot":""}