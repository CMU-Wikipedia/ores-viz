{"version":3,"sources":["logo.svg","partials/slider.jsx","components/threshold_explorer/threshold_performance.jsx","components/threshold_explorer/threshold_explorer.jsx","components/threshold_explorer/threshold_explorer_section.js","components/group_compare/compare_visualizer.jsx","components/group_compare/section.jsx","components/content.jsx","App.js","serviceWorker.js","index.js","data/data_not-balanced.csv","data/performance.csv"],"names":["module","exports","ThresholdeSlider","props","getText","value","state","bind","style","position","marginTop","width","top","display","textAlign","Typography","fontWeight","this","color","OrangeSlider","valueLabelDisplay","valueLabelFormat","aria-label","defaultValue","onChangeCommitted","BlackSlider","Component","makeStyles","theme","root","spacing","margin","height","withStyles","paddingTop","paddingBottom","thumb","backgroundColor","border","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","opacity","Slider","ThresholdPerformance","chartPerformanceRef","React","createRef","getBoxHeight","getWidthHeightRatio","getMargin","getWidth","drawChart","redrawChart","threshold","current","parentElement","offsetWidth","right","bottom","inBetween","resizedFn","setState","window","addEventListener","clearTimeout","setTimeout","d3","remove","performance_data","dataCollection","map","d","Math","round","damaging_accuracy","damaging_fpr","damaging_fnr","eachHeight","svg","append","attr","getPerformanceColor","type","perform","getStrokeColor","preValue","currentValue","forEach","data","index","currentThreshold","x","domain","nice","range","y","getY","xAxis","g","call","tickSize","getXAxis","line","defined","isNaN","area","x1","x2","number","y0","y1","datum","filter","getAreaColor","text","ticks","verticalAlign","className","ref","padding","flexDirection","justifyContent","marginBottom","variant","ThresholdExplorer","onSliderChange","event","chartRef","widthHeightRatio","graph1Scale","dotWidth","sliderRange","sliderRight","diameter","dd","circles","xvalue","parseFloat","confidence_damage","toFixed","ceil","correct","damaging_label","damaging_predict","sort","a","b","ca","prev","cnt","abs","category","dodge","shape","s","size","selectAll","join","Fragment","Grid","container","item","xs","component","Box","borderRight","key","Chart","change","data_balanced","confidence_faith","faith_label","goodfaith","damaging","then","slice","nextProps","nextState","performanceData","getPerformance","TP","TN","FP","FN","GroupCompareVisualizer","getWholePerformance","drawPerformanceChart","visualizationRef","compareChartRef","comparePerformanceRef","wholePerformanceRef","getPerformanceWidth","getPerformanceForThreshold","performanceWidth","group1Color","group2Color","wholePerformance","defaultPerformance","groupOnePerformance","groupTwoPerformance","performanceHeight","blockHeight","chartHeight","offsetHeight","groupOneData","groupTwoData","groupOneFP","length","groupOneTP","groupOneFN","groupOneTN","groupTwoFP","groupTwoTP","groupTwoFN","groupTwoTN","groupOne","groupTwo","all","getPerformanceHeight","acc","fpr","fnr","performance","groupOnePerf","groupTwoPerf","allPerf","vizHeight","drawPerformance","currentPerformance","groupOneHeight","groupTwoHeight","customCross","draw","context","sqrt","w","moveTo","lineTo","closePath","groupSize","getSymbolColor","fp","tp","fn","tn","cp","dots","dot","push","dotData","sum","children","sliceNumber","r","centerX","centerY","pow","dotRadius","groupOneDots","groupTwoDots","transform","id","borderBottom","fontSize","GroupCompareChart","anonData","loggedData","newcomerData","experiencedData","anonymous","newcomer","edit_years","console","log","SectionHeader","styled","div","Section","MainContent","data_performance","faith_accuracy","faith_fpr","faith_fnr","createMuiTheme","typography","fontFamily","subtitle1","subtitle2","textTransform","h6","body1","body2","button","fontStyle","useStyles","appBar","drawer","flexShrink","drawerPaper","paper","list","toolbar","content","flexGrow","palette","background","default","App","classes","ThemeProvider","Drawer","anchor","Paper","elevation","List","ListItem","ListItemText","primary","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.58be8420.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles, makeStyles} from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nclass ThresholdeSlider extends Component {\n  constructor (props) {\n    super (props);\n    this.getText = this.getText.bind (this);\n  }\n\n  getText = value => {\n    return `${value}%`;\n  };\n\n  state = {};\n  render () {\n    // const classes = useStyles ();\n\n    return (\n      <div style={{position: 'relative', marginTop: '5px'}}>\n        <div style={{position: 'absolute', width: '100%', top: '10px'}}>\n          <div>\n            <div\n              style={{width: '50%', display: 'inline-block', textAlign: 'left'}}\n            >\n              <Typography style={{fontWeight: 'bold'}}>\n                {[<span>&#9664;</span>, ' Identify More']}\n              </Typography>\n            </div>\n            <div\n              style={{\n                width: '50%',\n                display: 'inline-block',\n                textAlign: 'right',\n              }}\n            >\n              <Typography style={{fontWeight: 'bold'}}>\n                {['Identify Less ', <span>&#9654;</span>]}\n              </Typography>\n            </div>\n          </div>\n\n        </div>\n        <div>\n          {this.props.color === 'orange'\n            ? <OrangeSlider\n                valueLabelDisplay=\"auto\"\n                valueLabelFormat={this.getText}\n                aria-label=\"pretto slider\"\n                defaultValue={this.props.defaultValue}\n                onChangeCommitted={this.props.onChangeCommitted}\n              />\n            : <BlackSlider\n                valueLabelDisplay=\"auto\"\n                valueLabelFormat={this.getText}\n                aria-label=\"pretto slider\"\n                defaultValue={this.props.defaultValue}\n                onChangeCommitted={this.props.onChangeCommitted}\n              />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ThresholdeSlider;\n\nconst useStyles = makeStyles (theme => ({\n  root: {\n    width: 300 + theme.spacing (3) * 2,\n  },\n  margin: {\n    height: theme.spacing (3),\n  },\n}));\n\nconst OrangeSlider = withStyles ({\n  root: {\n    color: '#C57619',\n    height: 10,\n    paddingTop: '50px',\n    paddingBottom: '0px',\n  },\n  thumb: {\n    height: 18,\n    width: 18,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -9,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50%+12px)',\n    fontWeight: 'bold',\n  },\n  track: {\n    height: 4,\n    borderRadius: 4,\n    color: '#909090',\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4,\n    color: '#C57619',\n    opacity: '100%',\n  },\n}) (Slider);\n\nconst BlackSlider = withStyles ({\n  root: {\n    color: '#000000',\n    height: 10,\n    paddingTop: '50px',\n    paddingBottom: '0px',\n  },\n  thumb: {\n    height: 18,\n    width: 18,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -9,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50%+12px)',\n    fontWeight: 'bold',\n  },\n  track: {\n    height: 4,\n    borderRadius: 4,\n    color: '#909090',\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4,\n    color: '#000000',\n    opacity: '100%',\n  },\n}) (Slider);\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport styled from 'styled-components';\n\nclass ThresholdPerformance extends Component {\n  constructor (props) {\n    super (props);\n    this.chartPerformanceRef = React.createRef ();\n    this.getBoxHeight = this.getBoxHeight.bind (this);\n    this.getWidthHeightRatio = this.getWidthHeightRatio.bind (this);\n    this.getMargin = this.getMargin.bind (this);\n    this.getWidth = this.getWidth.bind (this);\n    this.drawChart = this.drawChart.bind (this);\n    this.redrawChart = this.redrawChart.bind (this);\n    this.state = {\n      threshold: 80,\n      width: 1000,\n      height: 1000,\n    };\n  }\n\n  getWidthHeightRatio () {\n    return 2.4;\n  }\n\n  getWidth () {\n    if (this.chartPerformanceRef.current == null) {\n      return this.state.width;\n    } else {\n      return this.chartPerformanceRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  getMargin () {\n    return {\n      top: 30,\n      right: 5,\n      bottom: 20,\n      left: 30,\n      inBetween: this.state.width * 0.2,\n    };\n  }\n  componentDidMount () {\n    let width = this.getWidth ();\n    let height = width * this.getWidthHeightRatio ();\n\n    this.setState (\n      {\n        width: width,\n        height: height,\n      },\n      () => {\n        this.drawChart ();\n      }\n    );\n\n    let resizedFn;\n    window.addEventListener ('resize', () => {\n      clearTimeout (resizedFn);\n      resizedFn = setTimeout (() => {\n        this.redrawChart ();\n      }, 200);\n    });\n  }\n\n  redrawChart () {\n    let width = this.getWidth ();\n    this.setState ({width: width, height: width * this.getWidthHeightRatio ()});\n    d3.select ('.performanceChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n  }\n\n  drawChart () {\n    if (this.props.performance_data != null) {\n      const dataAccuracy = this.props.performance_data.map (d => ({\n        threshold: d.threshold,\n        value: Math.round (d.damaging_accuracy * 100),\n      }));\n\n      const dataFPR = this.props.performance_data.map (d => ({\n        threshold: d.threshold,\n        value: Math.round (d.damaging_fpr * 100),\n      }));\n\n      const dataFNR = this.props.performance_data.map (d => ({\n        threshold: d.threshold,\n        value: Math.round (d.damaging_fnr * 100),\n      }));\n\n      const dataCollection = [dataAccuracy, dataFPR, dataFNR];\n\n      const margin = this.getMargin ();\n      let width = this.state.width - margin.left - margin.right;\n      let height = this.state.height - margin.top - margin.bottom;\n      let eachHeight = (height - margin.inBetween * 2) / 3;\n\n      const betweenThreshold = (x1, x2, number) => {\n        return (number >= x1 && number <= x2) || (number <= x1 && number >= x2);\n      };\n\n      //   const xAxis = g =>\n      //     g\n      //       .attr ('transform', `translate(0,${height / 2})`)\n      //       .call (d3.axisBottom (x).ticks (width / 80).tickSizeOuter (0));\n\n      const getXAxis = (x, type) => {\n        switch (type) {\n          case 0:\n            return function (g) {\n              g\n                .attr ('transform', `translate(0,${eachHeight + margin.top})`)\n                .attr ('class', 'axisGreyY')\n                .call (d3.axisBottom (x).tickSize (0));\n            };\n            break;\n          case 1:\n            return function (g) {\n              g\n                .attr (\n                  'transform',\n                  `translate(0,${eachHeight * 2 + margin.inBetween + margin.top})`\n                )\n                .attr ('class', 'axisGreyY')\n                .call (d3.axisBottom (x).tickSize (0));\n            };\n            break;\n          default:\n            return function (g) {\n              g\n                .attr ('transform', `translate(0,${height + margin.top})`)\n                .attr ('class', 'axisGreyY')\n                .call (d3.axisBottom (x).tickSize (0));\n            };\n        }\n      };\n\n      //   const y = d3\n      //     .scaleLinear ()\n      //     .domain ([0, d3.max (data, d => d.value)])\n      //     .nice ()\n      //     .range ([height / 2, margin.top]);\n\n      const getY = type => {\n        switch (type) {\n          case 0:\n            return d3\n              .scaleLinear ()\n              .domain ([0, d3.max (dataCollection[0], d => d.value)])\n              .nice ()\n              .range ([eachHeight + margin.top, margin.top]);\n            break;\n          case 1:\n            return d3\n              .scaleLinear ()\n              .domain ([0, d3.max (dataCollection[1], d => d.value)])\n              .nice ()\n              .range ([\n                eachHeight * 2 + margin.inBetween + margin.top,\n                eachHeight + margin.inBetween + margin.top,\n              ]);\n            break;\n          default:\n            return d3\n              .scaleLinear ()\n              .domain ([0, d3.max (dataCollection[2], d => d.value)])\n              .nice ()\n              .range ([\n                height + margin.top,\n                eachHeight * 2 + margin.inBetween * 2 + margin.top,\n              ]);\n        }\n      };\n\n      let svg = d3\n        .select ('.performanceChart')\n        .append ('svg')\n        .attr ('width', width + margin.left + margin.right)\n        .attr ('height', height + margin.top + margin.bottom);\n\n      const getPerformanceColor = (type, perform) => {\n        if (type == 'stroke') {\n          //color for stroke\n          if (perform == 1) {\n            return d3.color ('#159256');\n          } else if (perform == 0) {\n            return d3.color ('#878787');\n          } else {\n            return d3.color ('#921515');\n          }\n        } else {\n          //color for area\n          if (perform == 1) {\n            return d3.color ('#F0F7F4');\n          } else if (perform == 0) {\n            return d3.color ('#E8E8E8');\n          } else {\n            return d3.color ('#F7F0F0');\n          }\n        }\n      };\n\n      const getAreaColor = (type, preValue, currentValue) => {\n        if (type == 0) {\n          //accuracy -> the higher the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor ('area', 1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor ('area', -1);\n          } else {\n            return getPerformanceColor ('area', 0);\n          }\n        } else {\n          //FPR, FNR -> the lower the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor ('area', -1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor ('area', 1);\n          } else {\n            return getPerformanceColor ('area', 0);\n          }\n        }\n      };\n\n      const getStrokeColor = (type, preValue, currentValue) => {\n        if (type == 0) {\n          //accuracy -> the higher the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor ('stroke', 1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor ('stroke', -1);\n          } else {\n            return getPerformanceColor ('stroke', 0);\n          }\n        } else {\n          //FPR, FNR -> the lower the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor ('stroke', -1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor ('stroke', 1);\n          } else {\n            return getPerformanceColor ('stroke', 0);\n          }\n        }\n      };\n\n      dataCollection.forEach ((data, index) => {\n        const defaultValue = data[50].value;\n        const currentValue = data[this.props.threshold].value;\n        const currentThreshold = this.props.threshold;\n        const x = d3\n          .scaleLinear ()\n          .domain ([0, d3.max (data, d => d.threshold)])\n          .nice ()\n          .range ([margin.left, width - margin.right]);\n\n        const y = getY (index);\n        const xAxis = getXAxis (x, index);\n\n        const yAxis = g =>\n          g\n            .attr ('transform', `translate(${margin.left},0)`)\n            .attr ('class', 'axisGrey')\n            .call (d3.axisLeft (y).ticks (2));\n\n        const line = d3\n          .line ()\n          .defined (d => !isNaN (d.value))\n          .x (d => x (d.threshold))\n          .y (d => y (d.value));\n\n        const area = d3\n          .area ()\n          .defined (d =>\n            betweenThreshold (0.5, currentThreshold * 0.01, d.threshold)\n          )\n          .x (d => x (d.threshold))\n          .y0 (y (0))\n          .y1 (d => y (d.value));\n\n        svg\n          .append ('path')\n          .datum (data.filter (area.defined ()))\n          .attr ('fill', getAreaColor (index, defaultValue, currentValue))\n          .attr ('d', area);\n\n        svg\n          .append ('path')\n          .datum (data)\n          .attr ('fill', 'none')\n          .attr ('stroke', 'grey')\n          .attr ('stroke-width', 1.5)\n          .attr ('stroke-linejoin', 'round')\n          .attr ('stroke-linecap', 'round')\n          .attr ('d', line);\n\n        svg\n          .append ('line')\n          .attr ('x1', x (currentThreshold * 0.01))\n          .attr ('y1', y (currentValue))\n          .attr ('x2', x (currentThreshold * 0.01))\n          .attr (\n            'y2',\n            margin.top + index * margin.inBetween + (index + 1) * eachHeight\n          )\n          .attr ('stroke-width', 2)\n          .attr ('stroke', getStrokeColor (index, defaultValue, currentValue))\n          .style ('stroke-dasharray', '5,5');\n\n        svg\n          .append ('text')\n          .attr ('x', x (currentThreshold * 0.01))\n          .attr ('y', y (currentValue + 8))\n          .attr ('text-anchor', 'middle')\n          .text (`${currentValue}%`)\n          .attr ('font-family', 'sans-serif')\n          .attr ('font-size', '16px')\n          .attr ('fill', getStrokeColor (index, defaultValue, currentValue));\n\n        svg.append ('g').call (xAxis);\n\n        svg.append ('g').call (yAxis);\n      });\n    }\n  }\n\n  getBoxHeight () {\n    const margin = this.getMargin ();\n    return (\n      (this.state.height - margin.top - margin.bottom - margin.inBetween * 2) /\n      3\n    );\n  }\n\n  render () {\n    return (\n      <div style={{marginTop: '20px'}}>\n        <div\n          style={{\n            width: '50%',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        >\n          <div\n            style={{marginTop: '20px'}}\n            className=\"performanceChart\"\n            ref={this.chartPerformanceRef}\n          />\n        </div>\n        <div\n          style={{\n            width: '50%',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        >\n          <div\n            style={{\n              height: `${this.getBoxHeight ()}px`,\n              padding: '0% 5%',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              marginTop: `${this.getMargin ().top + 20}px`,\n              marginBottom: `${this.getMargin ().inBetween}px`,\n            }}\n          >\n            <div>\n              <Typography variant=\"h6\" textAlign=\"center\">\n                Accuracy{' '}\n              </Typography>\n              <Typography variant=\"body2\">\n                Correctly predicted edits out of all edits{' '}\n              </Typography>\n            </div>\n\n          </div>\n\n          <div\n            style={{\n              height: `${this.getBoxHeight ()}px`,\n              padding: '0% 5%',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              marginBottom: `${this.getMargin ().inBetween}px`,\n            }}\n          >\n            <div>\n              <Typography variant=\"h6\" textAlign=\"center\">\n                False Positive Rate\n              </Typography>\n              <Typography variant=\"body2\">\n                Percentage of good edits that are falsely identified as damaing\n                {' '}\n              </Typography>\n            </div>\n          </div>\n\n          <div\n            style={{\n              height: `${this.getBoxHeight ()}px`,\n              padding: '0% 5%',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n            }}\n          >\n            <div>\n              <Typography variant=\"h6\" textAlign=\"center\">\n                False Negative Rate\n              </Typography>\n              <Typography variant=\"body2\">\n                Percentage of damaing edits that won’t be identified {' '}\n              </Typography>\n            </div>\n\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ThresholdPerformance;\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport ThresholdSlider from '../../partials/slider';\nimport ThresholdPerformance from './threshold_performance';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n\nclass ThresholdExplorer extends Component {\n  constructor (props) {\n    super (props);\n    this.chartRef = React.createRef ();\n    this.getWidth = this.getWidth.bind (this);\n    this.drawChart = this.drawChart.bind (this);\n    this.redrawChart = this.redrawChart.bind (this);\n    this.state = {\n      threshold: 60,\n      width: 1000,\n      height: 1000,\n      widthHeightRatio: 0.8,\n      graph1Scale: 1,\n      dotWidth: 0,\n      sliderRange: [20, 1000],\n    };\n  }\n\n  getWidth () {\n    if (this.chartRef.current == null) {\n      return this.state.width;\n    } else {\n      return this.chartRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  onSliderChange = (event, threshold) => {\n    this.setState ({\n      threshold: threshold,\n    });\n    d3.select ('.rowChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n  };\n\n  componentDidMount () {\n    let width = this.getWidth ();\n    let height = width * 0.8;\n    let sliderRight = width - 30;\n\n    this.setState (\n      {\n        width: width,\n        height: height,\n        sliderRange: [10, sliderRight],\n      },\n      () => {\n        this.drawChart ();\n      }\n    );\n\n    let resizedFn;\n    window.addEventListener ('resize', () => {\n      clearTimeout (resizedFn);\n      resizedFn = setTimeout (() => {\n        this.redrawChart ();\n      }, 200);\n    });\n  }\n\n  redrawChart () {\n    let width = this.getWidth ();\n    let sliderRight = width - 30;\n    this.setState ({\n      width: width,\n      height: width * 0.8,\n      sliderRange: [10, sliderRight],\n    });\n    d3.select ('.rowChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n  }\n\n  drawChart () {\n    const margin = {top: 0, right: 30, bottom: 30, left: 10};\n    let width = this.state.width - margin.left - margin.right;\n    let height = this.state.height - margin.top - margin.bottom;\n    // append the svg object to the body of the page\n    let svg = d3\n      .select ('.rowChart')\n      .append ('svg')\n      .attr ('width', width + margin.left + margin.right)\n      .attr ('height', height + margin.top + margin.bottom);\n\n    const threshold = this.state.threshold / 100;\n    const graph1Scale = 1;\n\n    const diameter = width * graph1Scale / 50;\n    const dotWidth = diameter * 0.5;\n    if (this.props.data != null) {\n      const dd = dodge (threshold, this.props.data, diameter);\n\n      const xAxis = g =>\n        g\n          .attr ('transform', `translate(0,${margin.top})`)\n          .call (d3.axisTop (x).ticks (0));\n\n      const x = d3\n        .scaleLinear ()\n        .domain ([0, 1])\n        .nice ()\n        .range ([margin.left, width + margin.left]);\n\n      const shape = d3.scaleOrdinal (\n        dd.map (d => d.category),\n        d3.symbols.map (s =>\n          d3.symbol ().size (diameter * diameter * 0.4).type (s) ()\n        )\n      );\n\n      function dodge (threshold, data, diameter) {\n        const circles = data\n          .map (d => ({\n            xvalue: parseFloat (d.confidence_damage).toFixed (2),\n            x: 0.02 *\n              Math.ceil (parseFloat (d.confidence_damage).toFixed (2) * 50),\n\n            correct: parseFloat (d.confidence_damage).toFixed (2) >=\n              threshold ==\n              d.damaging_label,\n            damaging_predict: parseFloat (d.confidence_damage).toFixed (2) >=\n              threshold,\n            damaging_label: d.damaging_label,\n          }))\n          .sort (function (a, b) {\n            if (a.x == b.x) {\n              let ca = a.correct ? 1 : 0;\n              let cb = b.correct ? 1 : 0;\n              return cb - ca;\n            } else {\n              return b.x - a.x;\n            }\n          });\n        const epsilon = 1e-4;\n\n        let prev = 100;\n        let cnt = 1;\n\n        for (const b of circles) {\n          //determine the position of the dot\n          if (Math.abs (prev - b.x) < epsilon) {\n            // belongs to the same col\n            cnt += 1;\n            b.y = diameter * cnt;\n          } else {\n            prev = b.x;\n            cnt = 1;\n            b.y = diameter;\n          }\n\n          if (b.correct) {\n            b.category = 'circle';\n          } else {\n            b.category = 'cross';\n          }\n\n          if (b.damaging_predict) {\n            b.color = d3.color ('#C57619');\n          } else {\n            b.color = d3.color ('#909090');\n          }\n        }\n\n        return circles;\n      }\n\n      // svg.append ('g').call (xAxis);\n\n      svg\n        .append ('line')\n        .attr ('x1', width + margin.left - dotWidth * 100 * (1 - threshold))\n        .attr ('y1', margin.top)\n        .attr ('x2', width + margin.left - dotWidth * 100 * (1 - threshold))\n        .attr ('y2', height - 30)\n        .attr ('stroke-width', 2)\n        .attr ('stroke', 'black')\n        .style ('stroke-dasharray', '5,5');\n\n      svg\n        .append ('text')\n        .attr ('x', width + margin.left - dotWidth * 100 * (1 - threshold))\n        .attr ('y', height - 15)\n        .attr ('text-anchor', 'middle')\n        .text (threshold)\n        .attr ('font-family', 'sans-serif')\n        .attr ('font-size', '15px');\n\n      svg\n        .append ('g')\n        .selectAll ('path')\n        .data (dd)\n        .join ('path')\n        .attr (\n          'transform',\n          d => `translate(${x (d.x)},${d.y + margin.top}), rotate(45)`\n        )\n        .attr ('fill', function (d) {\n          return d.color;\n        })\n        .attr ('d', d => shape (d.category));\n    }\n  }\n\n  // shouldComponentUpdate (nextProps, nextState) {\n  //   return (\n  //     this.props.performance_data !== nextProps.performance_data ||\n  //     this.state != nextState\n  //   );\n  // }\n\n  render () {\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            width: '55%',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        >\n\n          <div className=\"upperSettings\">\n\n            <Grid container spacing={0}>\n              <Grid item xs={9} className=\"modelOptions\">\n                <Typography component=\"div\" variant=\"subtitle2\">\n                  <Box>\n                    MODEL OPTIONS\n                  </Box>\n\n                </Typography>\n\n                <Grid container spacing={0} className=\"options\">\n                  <Grid item xs={6}>\n                    <Typography\n                      component=\"div\"\n                      style={{\n                        borderRight: '1px solid lightgrey',\n                        fontWeight: '500',\n                      }}\n                      variant=\"h6\"\n                      className=\"text\"\n                    >\n                      Damaging\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography\n                      style={{\n                        color: 'grey',\n                      }}\n                      component=\"div\"\n                      variant=\"h6\"\n                      className=\"text\"\n                    >\n                      GoodFaith\n                    </Typography>\n                  </Grid>\n\n                </Grid>\n              </Grid>\n              <Grid item xs={3} className=\"threshold\">\n                <div className=\"innerBox\">\n                  <Typography variant=\"subtitle2\">\n                    <Box>\n                      threshold\n                    </Box>\n\n                  </Typography>\n\n                  <Grid container spacing={2} className=\"options\">\n                    <Grid item xs={12}>\n                      <Typography component=\"div\" variant=\"h6\" className=\"text\">\n                        {this.state.threshold} %\n                      </Typography>\n                    </Grid>\n\n                  </Grid>\n                </div>\n\n              </Grid>\n            </Grid>\n          </div>\n\n          <div\n            style={{\n              marginLeft: `${this.state.sliderRange[0]}px`,\n              width: `${this.state.sliderRange[1] - this.state.sliderRange[0]}px`,\n            }}\n          >\n            <Typography variant=\"subtitle2\">VISUALIZATION</Typography>\n            <ThresholdSlider\n              defaultValue={60}\n              onChangeCommitted={this.onSliderChange}\n              color={'orange'}\n            />\n\n          </div>\n          <div className=\"rowChart\" ref={this.chartRef} />\n        </div>\n\n        <div className=\"sidePanel\">\n          <Typography variant=\"subtitle2\">PERFORMANCE</Typography>\n          <ThresholdPerformance\n            performance_data={this.props.performance_data}\n            threshold={this.state.threshold}\n            key={this.state.threshold}\n          />\n        </div>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ThresholdExplorer;\n","import React, {Component} from 'react';\nimport ThresholdExplorer from './threshold_explorer';\nimport * as d3 from 'd3';\nimport data_balanced from '../../data/data_not-balanced.csv';\nimport data_performance from '../../data/performance.csv';\n\nclass Chart extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      data: null,\n      change: 0,\n    };\n  }\n\n  componentDidMount () {\n    d3\n      .csv (data_balanced, d => {\n        return {\n          confidence_faith: d.confidence_faith,\n          faith_label: d.goodfaith == 'True' ? true : false,\n          confidence_damage: +d.confidence_damage,\n          damaging_label: d.damaging == 'True' ? true : false,\n        };\n      })\n      .then (data => {\n        this.setState ({data: data.slice (0, 2000)});\n        this.setState ({change: 2});\n      });\n  }\n\n  shouldComponentUpdate (nextProps, nextState) {\n    return true;\n  }\n\n  render () {\n    return (\n      <div style={{display: 'flex'}}>\n        {/* <Test data={this.state.data} key={this.state.change} /> */}\n        <ThresholdExplorer\n          data={this.state.data}\n          performance_data={this.props.performanceData}\n          key={this.state.change}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport dotData from '../../data/new.json';\nimport ThresholdSlider from '../../partials/slider';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n\nconst getColor = (accuracy, defaultValue, currentValue) => {\n  let perform = 1;\n  if (accuracy) {\n    if (defaultValue > currentValue) {\n      perform = -1;\n    } else if (defaultValue === currentValue) {\n      perform = 0;\n    } else {\n      perform = 1;\n    }\n  } else {\n    if (defaultValue > currentValue) {\n      perform = 1;\n    } else if (defaultValue === currentValue) {\n      perform = 0;\n    } else {\n      perform = -1;\n    }\n  }\n  //color for stroke\n  if (perform === 1) {\n    return d3.color ('#159256');\n  } else if (perform === 0) {\n    return d3.color ('#878787');\n  } else {\n    return d3.color ('#921515');\n  }\n};\n\nconst getPerformance = data => {\n  const TP = data[0], TN = data[1], FP = data[2], FN = data[3];\n  //accuracy:\n  const acc = (TP + TN) / (TP + TN + FP + FN);\n  const fpr = FP / (FP + TN);\n  const fnr = FN / (FN + TP);\n  return [acc, fpr, fnr];\n};\n\nclass GroupCompareVisualizer extends Component {\n  constructor (props) {\n    super (props);\n    this.visualizationRef = React.createRef ();\n    this.compareChartRef = React.createRef ();\n    this.comparePerformanceRef = React.createRef ();\n    this.wholePerformanceRef = React.createRef ();\n    this.getMargin = this.getMargin.bind (this);\n    this.getWidth = this.getWidth.bind (this);\n    this.drawChart = this.drawChart.bind (this);\n    this.redrawChart = this.redrawChart.bind (this);\n    this.getWholePerformance = this.getWholePerformance.bind (this);\n    this.getPerformanceWidth = this.getPerformanceWidth.bind (this);\n    this.getPerformanceForThreshold = this.getPerformanceForThreshold.bind (\n      this\n    );\n    this.state = {\n      threshold: 60,\n      width: 1000,\n      height: 1000,\n      performanceWidth: 1000,\n      group1Color: '#C57619',\n      group2Color: '#3777A5',\n      sliderRange: [20, 1000],\n      wholePerformance: [0, 0, 0],\n      defaultPerformance: [0, 0, 0],\n      groupOnePerformance: null,\n      groupTwoPerformance: null,\n    };\n  }\n\n  getMargin () {\n    const performanceHeight = this.state.performanceHeight;\n    const bottom = 20;\n    return {\n      top: 0,\n      right: 40,\n      bottom: bottom,\n      left: 20,\n      blockHeight: (performanceHeight - bottom) / 3,\n      chartHeight: (performanceHeight - bottom) / 12,\n    };\n  }\n\n  getWidth () {\n    if (this.compareChartRef.current === null) {\n      return this.state.width;\n    } else {\n      return this.compareChartRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  getPerformanceWidth () {\n    if (this.comparePerformanceRef.current === null) {\n      return this.state.performanceWidth;\n    } else {\n      return this.comparePerformanceRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  getPerformanceHeight () {\n    if (\n      this.wholePerformanceRef.current === null ||\n      this.compareChartRef.current === null\n    ) {\n      return this.state.performanceHeight;\n    } else {\n      return (\n        (this.compareChartRef.current.parentElement.offsetWidth - 60) * 0.5 +\n        250 -\n        this.wholePerformanceRef.current.offsetHeight\n      );\n    }\n  }\n\n  getPerformanceForThreshold () {\n    const threshold = this.state.threshold * 0.01;\n    if (this.props.groupOneData != null && this.props.groupTwoData != null) {\n      const groupOneFP = this.props.groupOneData.filter (function (d) {\n        return d.confidence_damage >= threshold && !d.damaging_label;\n      }).length;\n\n      const groupOneTP = this.props.groupOneData.filter (function (d) {\n        return d.confidence_damage >= threshold && d.damaging_label;\n      }).length;\n\n      const groupOneFN = this.props.groupOneData.filter (function (d) {\n        return d.confidence_damage < threshold && d.damaging_label;\n      }).length;\n\n      const groupOneTN = this.props.groupOneData.filter (function (d) {\n        return d.confidence_damage < threshold && !d.damaging_label;\n      }).length;\n\n      const groupTwoFP = this.props.groupTwoData.filter (function (d) {\n        return d.confidence_damage >= threshold && !d.damaging_label;\n      }).length;\n\n      const groupTwoTP = this.props.groupTwoData.filter (function (d) {\n        return d.confidence_damage >= threshold && d.damaging_label;\n      }).length;\n\n      const groupTwoFN = this.props.groupTwoData.filter (function (d) {\n        return d.confidence_damage < threshold && d.damaging_label;\n      }).length;\n\n      const groupTwoTN = this.props.groupTwoData.filter (function (d) {\n        return d.confidence_damage < threshold && !d.damaging_label;\n      }).length;\n\n      return {\n        groupOne: [groupOneTP, groupOneTN, groupOneFP, groupOneFN],\n        groupTwo: [groupTwoTP, groupTwoTN, groupTwoFP, groupTwoFN],\n        all: [\n          groupOneTP + groupTwoTP,\n          groupOneTN + groupTwoTN,\n          groupOneFP + groupTwoFP,\n          groupOneFN + groupTwoFN,\n        ],\n      };\n    } else {\n      return {\n        groupOne: this.state.groupOnePerformance,\n        groupTwo: this.state.groupTwoPerformance,\n        all: this.state.wholePerformance,\n      };\n    }\n  }\n\n  onSliderChange = (event, threshold) => {\n    this.setState ({\n      threshold: threshold,\n    });\n\n    this.getWholePerformance ();\n\n    d3.select ('.compareChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n    d3.select ('.comparePerformance svg').remove ();\n    this.drawPerformanceChart = this.drawPerformanceChart.bind (this);\n    this.drawPerformanceChart ();\n  };\n\n  componentDidMount () {\n    let width = this.getWidth ();\n    let height = width / 2;\n    let performanceWidth = this.getPerformanceWidth ();\n    let performanceHeight = this.getPerformanceHeight ();\n    let sliderRight = width - 40;\n    this.getWholePerformance ();\n    let acc = 0;\n    let fpr = 0;\n    let fnr = 0;\n    if (this.props.performanceData != null) {\n      const data = this.props.performanceData;\n      acc = data[50].damaging_accuracy * 100;\n      fpr = 100 * data[50].damaging_fpr;\n      fnr = 100 * data[50].damaging_fnr;\n    }\n\n    this.setState (\n      {\n        width: width,\n        height: height,\n        sliderRange: [10, sliderRight],\n        performanceWidth: performanceWidth,\n        performanceHeight: performanceHeight,\n        defaultPerformance: [acc.toFixed (1), fpr.toFixed (1), fnr.toFixed (1)],\n      },\n      () => {\n        this.drawChart ();\n        this.drawPerformanceChart ();\n      }\n    );\n\n    let resizedFn;\n    window.addEventListener ('resize', () => {\n      clearTimeout (resizedFn);\n      resizedFn = setTimeout (() => {\n        this.redrawChart ();\n      }, 200);\n    });\n  }\n\n  redrawChart () {\n    let width = this.getWidth ();\n    let performanceWidth = this.getPerformanceWidth ();\n    let performanceHeight = this.getPerformanceHeight ();\n    let sliderRight = width - 40;\n    this.setState ({\n      width: width,\n      height: width / 2,\n      performanceWidth: performanceWidth,\n      performanceHeight: performanceHeight,\n\n      sliderRange: [10, sliderRight],\n    });\n    d3.select ('.compareChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n    d3.select ('.comparePerformance svg').remove ();\n    this.drawPerformanceChart = this.drawPerformanceChart.bind (this);\n    this.drawPerformanceChart ();\n  }\n\n  getWholePerformance () {\n    if (\n      this.props.performanceData != null &&\n      this.props.groupOneData != null &&\n      this.props.groupTwoData != null\n    ) {\n      const performance = this.getPerformanceForThreshold ();\n      const groupOnePerf = performance.groupOne;\n      const groupTwoPerf = performance.groupTwo;\n      const allPerf = getPerformance (performance.all);\n\n      this.setState ({\n        wholePerformance: allPerf,\n        groupOnePerformance: groupOnePerf,\n        groupTwoPerformance: groupTwoPerf,\n      });\n    }\n  }\n  drawPerformanceChart () {\n    const margin = this.getMargin ();\n    let width = this.state.performanceWidth - margin.left - margin.right;\n    let height = this.state.performanceHeight - margin.top - margin.bottom;\n    let svg = d3\n      .select ('.comparePerformance')\n      .append ('svg')\n      .attr ('width', width + margin.left + margin.right)\n      .attr ('height', height + margin.top + margin.bottom);\n\n    let blockHeight = height / 3;\n    let vizHeight = blockHeight / 4;\n    // TP, TN, FP, FN\n    if (\n      this.state.groupOnePerformance != null &&\n      this.state.groupTwoPerformance != null\n    ) {\n      let groupOnePerformance = getPerformance (this.state.groupOnePerformance);\n      let groupTwoPerformance = getPerformance (this.state.groupTwoPerformance);\n      let wholePerformance = this.state.wholePerformance;\n      const x = d3\n        .scaleLinear ()\n        .domain ([0, 1])\n        .nice ()\n        .range ([margin.left, margin.left + width]);\n\n      function drawPerformance (\n        height,\n        defaultPerformance,\n        currentPerformance,\n        color\n      ) {\n        const markHeight = 5;\n        const markWidth = 6;\n        svg\n          .append ('line')\n          .attr ('x1', margin.left)\n          .attr ('y1', height)\n          .attr ('x2', margin.left + width)\n          .attr ('y2', height)\n          .attr ('stroke-width', 2)\n          .attr ('stroke', 'grey');\n        svg\n          .append ('line')\n          .attr ('x1', x (currentPerformance))\n          .attr ('y1', height - markHeight)\n          .attr ('x2', x (currentPerformance))\n          .attr ('y2', height + markHeight)\n          .attr ('stroke-width', markWidth)\n          .attr ('stroke', color);\n\n        svg\n          .append ('line')\n          .attr ('x1', x (defaultPerformance))\n          .attr ('y1', height)\n          .attr ('x2', x (currentPerformance))\n          .attr ('y2', height)\n          .attr ('stroke-width', 3)\n          .attr ('stroke', color);\n      }\n\n      ['Accuracy', 'FPR', 'FNR'].forEach ((item, index) => {\n        const groupOneHeight = blockHeight * index + vizHeight * 3;\n        const groupTwoHeight = margin.top + blockHeight * index + vizHeight * 4;\n\n        drawPerformance (\n          groupOneHeight,\n          wholePerformance[index],\n          groupOnePerformance[index],\n          d3.color (this.state.group1Color)\n        );\n        drawPerformance (\n          groupTwoHeight,\n          wholePerformance[index],\n          groupTwoPerformance[index],\n          d3.color (this.state.group2Color)\n        );\n        // svg\n        //   .append ('line')\n        //   .attr ('x1', margin.left + width / 4)\n        //   .attr ('y1', groupOneHeight)\n        //   .attr ('x2', margin.left + width)\n        //   .attr ('y2', groupOneHeight)\n        //   .attr ('stroke-width', 2)\n        //   .attr ('stroke', 'black');\n        // svg\n        //   .append ('line')\n        //   .attr ('x1', x (groupOnePerformance[index]))\n        //   .attr ('y1', groupOneHeight - markHeight)\n        //   .attr ('x2', x (groupOnePerformance[index]))\n        //   .attr ('y2', groupOneHeight + markHeight)\n        //   .attr ('stroke-width', markWidth)\n        //   .attr ('stroke', 'red');\n\n        // svg\n        //   .append ('line')\n        //   .attr ('x1', margin.left + width / 4)\n        //   .attr ('y1', groupTwoHeight)\n        //   .attr ('x2', margin.left + width)\n        //   .attr ('y2', groupTwoHeight)\n        //   .attr ('stroke-width', 2)\n        //   .attr ('stroke', 'black');\n\n        // svg\n        //   .append ('line')\n        //   .attr ('x1', x (groupTwoPerformance[index]))\n        //   .attr ('y1', groupTwoHeight - markHeight)\n        //   .attr ('x2', x (groupTwoPerformance[index]))\n        //   .attr ('y2', groupTwoHeight + markHeight)\n        //   .attr ('stroke-width', markWidth)\n        //   .attr ('stroke', 'red');\n      });\n    }\n  }\n\n  drawChart () {\n    const margin = {top: 20, right: 40, bottom: 0, left: 0};\n    let width = this.state.width - margin.left - margin.right;\n    let height = width / 2;\n    // append the svg object to the body of the page\n    let svg = d3\n      .select ('.compareChart')\n      .append ('svg')\n      .attr ('width', width + margin.left + margin.right)\n      .attr ('height', height);\n\n    var customCross = {\n      draw: function (context, size) {\n        let s = Math.sqrt (size * 2) / 2;\n        let w = Math.sqrt (size) / 6;\n        context.moveTo (-s, w);\n        context.lineTo (s, w);\n        context.lineTo (s, -w);\n        context.lineTo (-s, -w);\n        context.closePath ();\n        context.moveTo (w, s);\n        context.lineTo (w, -s);\n        context.lineTo (-w, -s);\n        context.lineTo (-w, s);\n        context.closePath ();\n      },\n    };\n\n    const groupSize = width / 2.2;\n\n    const pack = data =>\n      d3.pack ().size ([groupSize - 2, groupSize - 2]).padding (3) (\n        d3\n          .hierarchy (data)\n          .sum (d => d.value)\n          .sort ((a, b) => b.value - a.value)\n      );\n\n    const threshold = this.state.threshold * 0.01;\n\n    const app = this;\n\n    if (\n      this.props.groupOneData != null &&\n      this.props.groupTwoData != null &&\n      this.state.groupOnePerformance != null &&\n      this.state.groupTwoPerformance != null\n    ) {\n      const groupOnePerf = this.state.groupOnePerformance;\n      const groupTwoPerf = this.state.groupTwoPerformance;\n      const groupOneTP = groupOnePerf[0],\n        groupOneTN = groupOnePerf[1],\n        groupOneFP = groupOnePerf[2],\n        groupOneFN = groupOnePerf[3];\n      const groupTwoTP = groupTwoPerf[0],\n        groupTwoTN = groupTwoPerf[1],\n        groupTwoFP = groupTwoPerf[2],\n        groupTwoFN = groupTwoPerf[3];\n\n      const dots = pack (dotData).children\n        .slice (0, this.props.sliceNumber)\n        .map (d => ({\n          x: d.x,\n          y: d.y,\n          r: d.r,\n          category: 'cross',\n        }))\n        .sort (function (a, b) {\n          const centerX = margin.left + height;\n          const centerY = height / 2 + margin.top;\n          const distA = Math.sqrt (\n            Math.pow (a.x - centerX, 2) + Math.pow (a.y - centerY, 2)\n          );\n          const distB = Math.sqrt (\n            Math.pow (b.x - centerX, 2) + Math.pow (b.y - centerY, 2)\n          );\n          return distA - distB;\n        });\n\n      const dotRadius = dots[0].r;\n\n      function getSymbolColor (color, fp, tp, fn, tn) {\n        let dd = [];\n        const cp = [fp, fp + tp, fp + tp + fn];\n        dots.forEach (function (dot, index) {\n          if (index < cp[0]) {\n            dd.push ({\n              //false positive\n              x: dot.x,\n              y: dot.y,\n              category: 0,\n              color: color,\n            });\n          } else if (index >= cp[0] && index < cp[1]) {\n            dd.push ({\n              //true positive\n              x: dot.x,\n              y: dot.y,\n              category: 1,\n              color: color,\n            });\n          } else if (index >= cp[1] && index < cp[2]) {\n            dd.push ({\n              //false negative\n              x: dot.x,\n              y: dot.y,\n              category: 0,\n              color: d3.color ('#909090'),\n            });\n          } else {\n            dd.push ({\n              //false positive\n              x: dot.x,\n              y: dot.y,\n              category: 1,\n              color: d3.color ('#909090'),\n            });\n          }\n        });\n\n        return dd;\n      }\n      let groupOneDots = getSymbolColor (\n        d3.color (this.state.group1Color),\n        groupOneFP,\n        groupOneTP,\n        groupOneFN,\n        groupOneTN\n      );\n      let groupTwoDots = getSymbolColor (\n        d3.color (this.state.group2Color),\n        groupTwoFP,\n        groupTwoTP,\n        groupTwoFN,\n        groupTwoTN\n      );\n\n      svg\n        .append ('g')\n        .selectAll ('path')\n        .data (groupOneDots)\n        .join ('path')\n        .attr (\n          'transform',\n          d => `translate(${margin.left + d.x},${d.y}),rotate(45)`\n        )\n        .attr ('fill', d => d.color)\n        .attr (\n          'd',\n          d3\n            .symbol ()\n            .type (function (d) {\n              if (d.category === 0) {\n                return customCross;\n              } else {\n                return d3.symbolCircle;\n              }\n            })\n            .size (dotRadius * dotRadius * 1.5)\n        );\n\n      svg\n        .append ('g')\n        .selectAll ('path')\n        .data (groupTwoDots)\n        .join ('path')\n        .attr (\n          'transform',\n          d => `translate(${margin.left + width / 2 + d.x},${d.y}),rotate(45)`\n        )\n        .attr ('fill', d => d.color)\n        .attr (\n          'd',\n          d3\n            .symbol ()\n            .type (function (d) {\n              if (d.category === 0) {\n                return customCross;\n              } else {\n                return d3.symbolCircle;\n              }\n            })\n            .size (dotRadius * dotRadius * 1.5)\n        );\n    }\n  }\n\n  render () {\n    return (\n      <React.Fragment>\n        <div\n          ref={this.visualizationRef}\n          style={{\n            width: '55%',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        >\n\n          <div className=\"upperSettings\">\n\n            <Grid container spacing={0}>\n              <Grid item xs={9} className=\"modelOptions\">\n                <Typography component=\"div\" variant=\"subtitle2\">\n                  <Box>\n                    MODEL OPTIONS\n                  </Box>\n\n                </Typography>\n\n                <Grid container spacing={0} className=\"options\">\n                  <Grid item xs={6}>\n                    <Typography\n                      component=\"div\"\n                      style={{\n                        borderRight: '1px solid lightgrey',\n                        fontWeight: '500',\n                      }}\n                      variant=\"h6\"\n                      className=\"text\"\n                    >\n                      Damaging\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography\n                      style={{\n                        color: 'grey',\n                      }}\n                      component=\"div\"\n                      variant=\"h6\"\n                      className=\"text\"\n                    >\n                      GoodFaith\n                    </Typography>\n                  </Grid>\n\n                </Grid>\n              </Grid>\n              <Grid item xs={3} className=\"threshold\">\n                <div className=\"innerBox\">\n                  <Typography variant=\"subtitle2\">\n                    <Box>\n                      threshold\n                    </Box>\n\n                  </Typography>\n\n                  <Grid container spacing={2} className=\"options\">\n                    <Grid item xs={12}>\n                      <Typography component=\"div\" variant=\"h6\" className=\"text\">\n                        {this.state.threshold} %\n                      </Typography>\n                    </Grid>\n\n                  </Grid>\n                </div>\n\n              </Grid>\n            </Grid>\n          </div>\n\n          <div\n            style={{\n              marginLeft: `${this.state.sliderRange[0]}px`,\n              width: `${this.state.sliderRange[1] - this.state.sliderRange[0]}px`,\n            }}\n          >\n            <Typography variant=\"subtitle2\">Fairness in Groups</Typography>\n            <ThresholdSlider\n              defaultValue={60}\n              onChangeCommitted={this.onSliderChange}\n            />\n\n          </div>\n          <div className=\"compareChart\" ref={this.compareChartRef} />\n          <div\n            style={{\n              marginLeft: `${this.state.sliderRange[0]}px`,\n              width: `${this.state.sliderRange[1] - this.state.sliderRange[0]}px`,\n              transform: 'translate(0px,-20px)',\n            }}\n            ref={this.visualizationRef}\n          >\n            <div\n              style={{\n                width: '50%',\n                display: 'inline-block',\n                // transform: 'translate(0,0px)',\n              }}\n            >\n              <Typography\n                variant=\"h6\"\n                component=\"div\"\n                style={{\n                  textAlign: 'center',\n                  color: `${this.state.group1Color}`,\n                }}\n              >\n                Newcomer Edits\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                component=\"div\"\n                style={{textAlign: 'center'}}\n              >\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <Box width=\"80%\">\n                    Model performance on edits made by groupOneymous IP users\n                  </Box>\n                </div>\n              </Typography>\n\n            </div>\n            <div\n              style={{\n                width: '50%',\n                display: 'inline-block',\n                // transform: 'translate(0,-10px)',\n              }}\n            >\n              <Typography\n                variant=\"h6\"\n                component=\"div\"\n                style={{\n                  textAlign: 'center',\n                  color: `${this.state.group2Color}`,\n                }}\n              >\n                Experienced Edits\n              </Typography>\n\n              <Typography\n                variant=\"body2\"\n                component=\"div\"\n                style={{textAlign: 'center'}}\n              >\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <Box width=\"80%\">\n                    Model performance on edits made by groupTwo-in editors\n                  </Box>\n                </div>\n              </Typography>\n\n            </div>\n          </div>\n        </div>\n\n        <div className=\"sidePanel\" id=\"comparePerformanceSidePanel\">\n          <div\n            className=\"overallPerformance\"\n            ref={this.wholePerformanceRef}\n            style={{borderBottom: '1px solid lightgrey'}}\n          >\n            <Typography component=\"div\" variant=\"subtitle2\">\n              PERFORMANCE\n            </Typography>\n            <Grid\n              container\n              className=\"performanceBlock\"\n              spacing={0}\n              style={{marginTop: '5px', textAlign: 'left', marginLeft: '0px'}}\n            >\n              <Grid item xs={4}>\n                <Typography component=\"div\" className=\"title\">\n                  ACC\n                </Typography>\n                <Typography component=\"div\">\n                  <Box className=\"data\">\n                    {(this.state.wholePerformance[0] * 100).toFixed (1)}%\n                  </Box>\n\n                </Typography>\n\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"div\" className=\"title\">\n                  FPR\n                </Typography>\n                <Typography component=\"div\">\n                  <Box className=\"data\">\n                    {(this.state.wholePerformance[1] * 100).toFixed (1)}%\n                  </Box>\n\n                </Typography>\n\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"div\" className=\"title\">\n                  FNR\n                </Typography>\n                <Typography component=\"div\">\n                  <Box className=\"data\">\n                    {(this.state.wholePerformance[2] * 100).toFixed (1)}%\n                  </Box>\n                </Typography>\n              </Grid>\n            </Grid>\n          </div>\n          <div style={{display: 'flex'}}>\n            <div\n              style={{\n                width: '35%',\n                display: 'inline-block',\n              }}\n              className=\"groupPerformance\"\n            >\n\n              {['Accuracy', 'FPR', 'FNR'].map ((value, index) => {\n                return (\n                  <div\n                    style={{\n                      height: `${this.getMargin ().blockHeight}px`,\n                      fontSize: '12px',\n                      transform: `translate(0px,7px)`,\n                    }}\n                  >\n                    <div\n                      style={{\n                        height: `${this.getMargin ().chartHeight}px`,\n                      }}\n                    />\n                    <div\n                      style={{\n                        height: `${this.getMargin ().chartHeight}px`,\n                        display: 'flex',\n                        flexDirection: 'column-reverse',\n                      }}\n                    >\n\n                      <Typography variant=\"body2\" className=\"classTitle\">\n                        {value}\n                      </Typography>\n\n                    </div>\n\n                    <div\n                      style={{\n                        height: `${this.getMargin ().chartHeight}px`,\n                        display: 'flex',\n                        flexDirection: 'column-reverse',\n                      }}\n                    >\n                      <div>\n                        <div className=\"title\">\n                          newcomer edits\n                        </div>\n                        <div\n                          className=\"data\"\n                          style={{color: this.state.group1Color}}\n                        >\n                          {this.state.groupOnePerformance === null\n                            ? '...'\n                            : (getPerformance (this.state.groupOnePerformance)[\n                                index\n                              ] * 100).toFixed (1) + '%'}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div\n                      style={{\n                        height: `${this.getMargin ().chartHeight}px`,\n                        display: 'flex',\n                        flexDirection: 'column-reverse',\n                      }}\n                    >\n                      <div>\n                        <div className=\"title\">\n                          experienced edits\n                        </div>\n                        <div\n                          className=\"data\"\n                          style={{color: this.state.group2Color}}\n                        >\n                          {this.state.groupTwoPerformance === null\n                            ? '...'\n                            : (getPerformance (this.state.groupTwoPerformance)[\n                                index\n                              ] * 100).toFixed (1) + '%'}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n            <div style={{width: '65%', display: 'inline-block'}}>\n              <div\n                className=\"comparePerformance\"\n                ref={this.comparePerformanceRef}\n              />\n            </div>\n          </div>\n\n        </div>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GroupCompareVisualizer;\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport data_balanced from '../../data/data_not-balanced.csv';\nimport GroupCompareVisualizer from './compare_visualizer';\n\nconst groupSliceNumber = 100;\nclass GroupCompareChart extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      anonData: null,\n      loggedData: null,\n      newcomerData: null,\n      experiencedData: null,\n      change: 0,\n    };\n  }\n\n  componentDidMount () {\n    d3\n      .csv (data_balanced, d => {\n        return {\n          anonymous: d.anonymous == 'True' ? true : false,\n          newcomer: d.edit_years <= 8 ? true : false,\n          confidence_faith: +d.confidence_faith,\n          faith_label: d.goodfaith == 'True' ? true : false,\n          confidence_damage: +d.confidence_damage,\n          damaging_label: d.damaging == 'True' ? true : false,\n        };\n      })\n      .then (data => {\n        const anonData = data\n          .filter (d => {\n            return d.anonymous;\n          })\n          .slice (0, groupSliceNumber);\n        const loggedData = data\n          .filter (d => {\n            return !d.anonymous;\n          })\n          .slice (0, groupSliceNumber);\n\n        const newcomerData = data\n          .filter (d => {\n            return d.newcomer;\n          })\n          .slice (0, groupSliceNumber);\n\n        const experiencedData = data\n          .filter (d => {\n            return !d.newcomer;\n          })\n          .slice (0, groupSliceNumber);\n        this.setState ({\n          anonData: anonData,\n          loggedData: loggedData,\n          newcomerData: newcomerData,\n          experiencedData: experiencedData,\n        });\n        this.setState ({change: 2});\n      });\n  }\n\n  //   shouldComponentUpdate (nextProps, nextState) {\n  //     return true;\n  //   }\n\n  render () {\n    console.log ('hi');\n    console.log (this.props);\n    return (\n      <div style={{display: 'flex'}}>\n        {/* <Test data={this.state.data} key={this.state.change} /> */}\n        <GroupCompareVisualizer\n          groupOneData={this.state.newcomerData}\n          groupTwoData={this.state.experiencedData}\n          key={this.state.change}\n          performanceData={this.props.performanceData}\n          sliceNumber={groupSliceNumber}\n        />\n      </div>\n    );\n  }\n}\n\nexport default GroupCompareChart;\n","import React, {Component} from 'react';\nimport Chart from './threshold_explorer/threshold_explorer_section';\nimport GroupCompareChart from './group_compare/section';\nimport Typography from '@material-ui/core/Typography';\nimport data_performance from '../data/performance.csv';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\nimport {curveNatural} from 'd3';\n\nconst SectionHeader = styled.div`\n  padding-left: 10px;\n  padding-top: 5px;\n  padding-bottom: 30px;\n  border-bottom: 1px solid lightgrey;\n`;\n\nconst Section = styled.div`\n  display: block;\n  margin-bottom: 15vh;\n`;\n\nclass MainContent extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      performance_data: null,\n      change: 0,\n    };\n  }\n\n  componentDidMount () {\n    d3\n      .csv (data_performance, d => {\n        return {\n          threshold: +d.threshold,\n          damaging_accuracy: +d.damaging_accuracy,\n          damaging_fpr: +d.damaging_fpr,\n          damaging_fnr: +d.damaging_fnr,\n          faith_accuracy: +d.faith_accuracy,\n          faith_fpr: +d.faith_fpr,\n          faith_fnr: +d.faith_fnr,\n        };\n      })\n      .then (data => {\n        this.setState ({performance_data: data});\n        this.setState ({change: 1});\n      });\n  }\n\n  state = {};\n  render () {\n    return (\n      <React.Fragment>\n        {' '} <Section>\n\n          <SectionHeader>\n            <Typography variant=\"subtitle1\" style={{textAlign: 'left'}}>\n              Threshold Explorer\n            </Typography>\n            <div\n              style={{\n                width: '50%',\n                marginTop: '10px',\n              }}\n            >\n              <Typography variant=\"body2\" style={{color: 'grey'}}>\n                Threshold Explorer helps you visualize model performance under specific thresholds with an example dataset. To start, select a model below, then pick a threshold.\n                {' '}\n              </Typography>\n            </div>\n\n          </SectionHeader>\n\n          <Chart\n            performanceData={this.state.performance_data}\n            key={this.state.change}\n          />\n        </Section>\n        <Section>\n          <SectionHeader>\n            <Typography variant=\"subtitle1\" style={{textAlign: 'left'}}>\n              Disparity\n            </Typography>\n            <div\n              style={{\n                width: '50%',\n                marginTop: '10px',\n              }}\n            >\n              <Typography variant=\"body2\" style={{color: 'grey'}}>\n                Threshold Explorer helps you visualize model performance under specific thresholds with an example dataset. To start, select a model below, then pick a threshold.\n                {' '}\n              </Typography>\n            </div>\n          </SectionHeader>\n          <GroupCompareChart\n            performanceData={this.state.performance_data}\n            key={this.state.change}\n          />\n        </Section>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MainContent;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport * as d3 from 'd3';\nimport Box from '@material-ui/core/Box';\nimport Chart from './components/threshold_explorer/threshold_explorer_section';\nimport Paper from '@material-ui/core/Paper';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {createMuiTheme} from '@material-ui/core/styles';\nimport {ThemeProvider} from '@material-ui/styles';\nimport styled from 'styled-components';\nimport GroupCompareChart from './components/group_compare/section';\nimport MainContent from './components/content';\n\nconst SectionHeader = styled.div`\n  padding-left: 10px;\n  padding-top: 5px;\n  padding-bottom: 30px;\n  border-bottom: 1px solid lightgrey;\n`;\n\n// const PerformanceTitle = styled.h1`\n//   font-size: 1.1em;\n//   text-align: left;\n//   margin-bottom: 0px;\n//   font-weight: 800;\n// `;\n\nconst Section = styled.div`\n  display: block;\n  margin-bottom: 15vh;\n`;\n\nconst drawerWidth = 240;\n\nconst theme = createMuiTheme ({\n  typography: {\n    root: {\n      component: 'div',\n    },\n    fontFamily: 'Noto Sans KR',\n    subtitle1: {\n      fontFamily: 'Noto Serif',\n      fontSize: '24px',\n    },\n    subtitle2: {\n      fontSize: '12px',\n      marginTop: '10px',\n      color: '#B0B0B0',\n      fontWeight: 'bold',\n      textTransform: 'uppercase',\n      textAlign: 'left',\n    },\n    h6: {\n      fontWeight: 'bold',\n      fontSize: '16px',\n      textAlign: 'left',\n    },\n    body1: {\n      // textAlign: 'left',\n      fontSize: '14px',\n    },\n    body2: {\n      textAlign: 'left',\n      fontSize: '14px',\n    },\n    button: {\n      fontStyle: 'italic',\n    },\n  },\n});\n\nconst useStyles = makeStyles (theme => ({\n  root: {\n    display: 'flex',\n    // fontFamily: 'Noto Sans, sans-serif',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    textAlign: 'center',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    color: 'red',\n  },\n  paper: {\n    textAlign: 'left',\n    padding: '20px 20px',\n  },\n  list: {\n    fontSize: '19px',\n    color: 'black',\n    textAlign: 'center',\n  },\n  // necessary for content to be below app bar\n  toolbar: {\n    padding: theme.spacing (2),\n  },\n  content: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing (2),\n  },\n}));\n\nfunction App () {\n  const classes = useStyles ();\n  return (\n    <ThemeProvider theme={theme}>\n\n      <div className=\"App\">\n        <body>\n          <div className={classes.root}>\n\n            <Drawer\n              className={classes.drawer}\n              variant=\"permanent\"\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              anchor=\"left\"\n            >\n              <Paper className={classes.paper} elevation=\"0\">\n                <div style={{textAlign: 'center'}}>\n                  <Typography variant=\"subtitle1\">\n                    WIKIPEDIA\n                  </Typography>\n                  <Typography style={{textAlign: 'center'}}>\n                    ORES Explorer\n                  </Typography>\n                </div>\n\n              </Paper>\n              <List style={{marginTop: '100px'}}>\n                {[\n                  'About ORES',\n                  'Threshold Explorer',\n                  'Threshold Calculator',\n                  'Group Comparison',\n                ].map ((text, index) => (\n                  <ListItem className={classes.list} button key={text}>\n                    {/* <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <InboxIcon />}\n                </ListItemIcon> */}\n                    <ListItemText primary={text} />\n                  </ListItem>\n                ))}\n              </List>\n\n            </Drawer>\n            <main className={classes.content}>\n              <MainContent />\n\n            </main>\n          </div>\n        </body>\n\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render (\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById ('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister ();\n","module.exports = __webpack_public_path__ + \"static/media/data_not-balanced.2c5d8911.csv\";","module.exports = __webpack_public_path__ + \"static/media/performance.760a321c.csv\";"],"sourceRoot":""}