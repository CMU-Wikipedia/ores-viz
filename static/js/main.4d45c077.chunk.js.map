{"version":3,"sources":["logo.svg","partials/slider.jsx","components/threshold_explorer/threshold_performance.jsx","partials/shape.jsx","components/threshold_explorer/threshold_explorer.jsx","components/threshold_explorer/threshold_explorer_section.js","components/group_compare/compare_visualizer.jsx","components/group_compare/section.jsx","components/content.jsx","partials/drawerList.jsx","App.js","serviceWorker.js","index.js","data/performance.csv","data/data_not-balanced.csv","data/data_balanced_1.csv"],"names":["module","exports","ThresholdeSlider","props","getText","value","state","bind","style","position","marginTop","width","top","display","textAlign","Typography","fontWeight","this","color","OrangeSlider","valueLabelDisplay","valueLabelFormat","aria-label","defaultValue","onChangeCommitted","BlackSlider","Component","makeStyles","theme","root","spacing","margin","height","withStyles","paddingTop","paddingBottom","thumb","backgroundColor","border","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","opacity","Slider","ThresholdPerformance","chartPerformanceRef","React","createRef","getBoxHeight","getWidthHeightRatio","getMargin","getWidth","drawChart","redrawChart","threshold","current","parentElement","offsetWidth","right","bottom","inBetween","resizedFn","setState","window","addEventListener","clearTimeout","setTimeout","d3","remove","performance_data","dataCollection","Object","assign","map","d","Math","round","damaging_accuracy","y","x","damaging_fpr","damaging_fnr","eachHeight","svg","append","attr","getPerformanceColor","type","perform","getStrokeColor","preValue","currentValue","forEach","data","index","currentThreshold","domain","nice","range","getY","xAxis","markText","g","call","tickSize","select","clone","text","getXAxis","line","defined","isNaN","area","x1","x2","number","y0","y1","datum","filter","getAreaColor","verticalAlign","className","ref","padding","flexDirection","justifyContent","marginBottom","variant","Circle","size","cx","cy","r","fill","Cross","y2","stroke","strokeWidth","ThresholdExplorer","onSliderChange","event","chartRef","widthHeightRatio","graph1Scale","dotWidth","sliderRange","sliderRight","diameter","dd","circles","xvalue","parseFloat","confidence_damage","toFixed","ceil","correct","damaging_label","damaging_predict","sort","a","b","ca","prev","cnt","abs","category","dodge","customCross","draw","context","s","sqrt","w","moveTo","lineTo","closePath","thresholdText","selectAll","join","Fragment","Grid","container","item","xs","component","Box","borderRight","id","key","Chart","change","data_balanced","confidence_faith","faith_label","goodfaith","damaging","then","slice","nextProps","nextState","performanceData","getPerformance","TP","TN","FP","FN","GroupCompareVisualizer","getWholePerformance","drawPerformanceChart","compareChartRef","comparePerformanceRef","wholePerformanceRef","getPerformanceWidth","getPerformanceForThreshold","performanceWidth","group1Color","group2Color","wholePerformance","defaultPerformance","groupOnePerformance","groupTwoPerformance","performanceHeight","blockHeight","chartHeight","offsetHeight","groupOneData","groupTwoData","groupOneFP","length","groupOneTP","groupOneFN","groupOneTN","groupTwoFP","groupTwoTP","groupTwoFN","groupTwoTN","groupOne","groupTwo","all","getPerformanceHeight","acc","fpr","fnr","performance","groupOnePerf","groupTwoPerf","allPerf","vizHeight","drawPerformance","currentPerformance","larger","groupNumber","largerPerformance","actualx","tooltipHalfWidth","tooltipx","tooltipy","groupOneHeight","groupTwoHeight","groupOneCurrentPerformance","groupTwoCurrentPerformance","min","max","largerPercentage","groupSize","getSymbolColor","fp","tp","fn","tn","cp","dots","dot","push","dotData","sum","children","sliceNumber","centerX","centerY","pow","dotRadius","groupOneDots","groupTwoDots","visualizationRef","transform","borderBottom","fontSize","GroupCompareChart","anonData","loggedData","newcomerData","experiencedData","anonymous","newcomer","edit_years","console","log","SectionHeader","styled","div","Section","MainContent","data_performance","faith_accuracy","faith_fpr","faith_fnr","DrawerList","selected","clickSection","List","ListItem","klass","button","onClick","createMuiTheme","typography","fontFamily","subtitle1","subtitle2","textTransform","h6","body1","body2","fontStyle","responsiveFontSizes","useStyles","appBar","drawer","flexShrink","drawerPaper","paper","list","toolbar","content","flexGrow","palette","background","default","App","classes","ThemeProvider","Drawer","anchor","Paper","elevation","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4d45c077.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles, makeStyles} from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nclass ThresholdeSlider extends Component {\n  constructor (props) {\n    super (props);\n    this.getText = this.getText.bind (this);\n  }\n\n  getText = value => {\n    return `${value}%`;\n  };\n\n  state = {};\n  render () {\n    // const classes = useStyles ();\n\n    return (\n      <div style={{position: 'relative', marginTop: '5px'}}>\n        <div style={{position: 'absolute', width: '100%', top: '10px'}}>\n          <div>\n            <div\n              style={{width: '50%', display: 'inline-block', textAlign: 'left'}}\n            >\n              <Typography style={{fontWeight: 'bold'}}>\n                {[<span>&#9664;</span>, ' Identify More']}\n              </Typography>\n            </div>\n            <div\n              style={{\n                width: '50%',\n                display: 'inline-block',\n                textAlign: 'right',\n              }}\n            >\n              <Typography style={{fontWeight: 'bold'}}>\n                {['Identify Less ', <span>&#9654;</span>]}\n              </Typography>\n            </div>\n          </div>\n\n        </div>\n        <div>\n          {this.props.color === 'orange'\n            ? <OrangeSlider\n                valueLabelDisplay=\"auto\"\n                valueLabelFormat={this.getText}\n                aria-label=\"pretto slider\"\n                defaultValue={this.props.defaultValue}\n                onChangeCommitted={this.props.onChangeCommitted}\n              />\n            : <BlackSlider\n                valueLabelDisplay=\"auto\"\n                valueLabelFormat={this.getText}\n                aria-label=\"pretto slider\"\n                defaultValue={this.props.defaultValue}\n                onChangeCommitted={this.props.onChangeCommitted}\n              />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ThresholdeSlider;\n\nconst useStyles = makeStyles (theme => ({\n  root: {\n    width: 300 + theme.spacing (3) * 2,\n  },\n  margin: {\n    height: theme.spacing (3),\n  },\n}));\n\nconst OrangeSlider = withStyles ({\n  root: {\n    color: '#C57619',\n    height: 10,\n    paddingTop: '50px',\n    paddingBottom: '0px',\n  },\n  thumb: {\n    height: 18,\n    width: 18,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -9,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50%+12px)',\n    fontWeight: 'bold',\n  },\n  track: {\n    height: 4,\n    borderRadius: 4,\n    color: '#909090',\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4,\n    color: '#C57619',\n    opacity: '100%',\n  },\n}) (Slider);\n\nconst BlackSlider = withStyles ({\n  root: {\n    color: '#000000',\n    height: 10,\n    paddingTop: '50px',\n    paddingBottom: '0px',\n  },\n  thumb: {\n    height: 18,\n    width: 18,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -9,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50%+12px)',\n    fontWeight: 'bold',\n  },\n  track: {\n    height: 4,\n    borderRadius: 4,\n    color: '#909090',\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4,\n    color: '#000000',\n    opacity: '100%',\n  },\n}) (Slider);\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport styled from 'styled-components';\n\nclass ThresholdPerformance extends Component {\n  constructor (props) {\n    super (props);\n    this.chartPerformanceRef = React.createRef ();\n    this.getBoxHeight = this.getBoxHeight.bind (this);\n    this.getWidthHeightRatio = this.getWidthHeightRatio.bind (this);\n    this.getMargin = this.getMargin.bind (this);\n    this.getWidth = this.getWidth.bind (this);\n    this.drawChart = this.drawChart.bind (this);\n    this.redrawChart = this.redrawChart.bind (this);\n    this.state = {\n      threshold: 80,\n      width: 1000,\n      height: 1000,\n    };\n  }\n\n  getWidthHeightRatio () {\n    return 2.4;\n  }\n\n  getWidth () {\n    if (this.chartPerformanceRef.current == null) {\n      return this.state.width;\n    } else {\n      return this.chartPerformanceRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  getMargin () {\n    return {\n      top: 30,\n      right: 20,\n      bottom: 20,\n      left: 30,\n      inBetween: this.state.width * 0.2,\n    };\n  }\n  componentDidMount () {\n    let width = this.getWidth ();\n    let height = width * this.getWidthHeightRatio ();\n\n    this.setState (\n      {\n        width: width,\n        height: height,\n      },\n      () => {\n        this.drawChart ();\n      }\n    );\n\n    let resizedFn;\n    window.addEventListener ('resize', () => {\n      clearTimeout (resizedFn);\n      resizedFn = setTimeout (() => {\n        this.redrawChart ();\n      }, 200);\n    });\n  }\n\n  redrawChart () {\n    let width = this.getWidth ();\n    this.setState ({width: width, height: width * this.getWidthHeightRatio ()});\n    d3.select ('.performanceChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n  }\n\n  drawChart () {\n    if (this.props.performance_data != null) {\n      const dataAccuracy = Object.assign (\n        this.props.performance_data.map (d => ({\n          threshold: d.threshold,\n          value: Math.round (d.damaging_accuracy * 100),\n        })),\n        {y: 'ACC'},\n        {x: 'THRES'}\n      );\n\n      const dataFPR = Object.assign (\n        this.props.performance_data.map (d => ({\n          threshold: d.threshold,\n          value: Math.round (d.damaging_fpr * 100),\n        })),\n        {y: 'FPR'},\n        {x: 'THRES'}\n      );\n\n      const dataFNR = Object.assign (\n        this.props.performance_data.map (d => ({\n          threshold: d.threshold,\n          value: Math.round (d.damaging_fnr * 100),\n        })),\n        {y: 'FNR'},\n        {x: 'THRES'}\n      );\n\n      const dataCollection = [dataAccuracy, dataFPR, dataFNR];\n\n      const margin = this.getMargin ();\n      let width = this.state.width - margin.left - margin.right;\n      let height = this.state.height - margin.top - margin.bottom;\n      let eachHeight = (height - margin.inBetween * 2) / 3;\n\n      const betweenThreshold = (x1, x2, number) => {\n        return (number >= x1 && number <= x2) || (number <= x1 && number >= x2);\n      };\n\n      //   const xAxis = g =>\n      //     g\n      //       .attr ('transform', `translate(0,${height / 2})`)\n      //       .call (d3.axisBottom (x).ticks (width / 80).tickSizeOuter (0));\n\n      const getXAxis = (markText, x, type) => {\n        switch (type) {\n          case 0:\n            return function (g) {\n              g\n                .attr ('transform', `translate(0,${eachHeight + margin.top})`)\n                .attr ('class', 'axisGreyY')\n                .call (d3.axisBottom (x).tickSize (0))\n                .call (g =>\n                  g\n                    .select ('.tick:last-of-type text')\n                    .clone ()\n                    .attr ('class', 'axisMark')\n                    .attr ('y', 0)\n                    .attr ('text-anchor', 'start')\n                    .attr ('font-weight', 'bold')\n                    .text (markText)\n                    .attr ('transform', `translate(5,-5)`)\n                );\n            };\n            break;\n          case 1:\n            return function (g) {\n              g\n                .attr (\n                  'transform',\n                  `translate(0,${eachHeight * 2 + margin.inBetween + margin.top})`\n                )\n                .attr ('class', 'axisGreyY')\n                .call (d3.axisBottom (x).tickSize (0))\n                .call (g =>\n                  g\n                    .select ('.tick:last-of-type text')\n                    .clone ()\n                    .attr ('class', 'axisMark')\n                    .attr ('y', 0)\n                    .attr ('text-anchor', 'start')\n                    .attr ('font-weight', 'bold')\n                    .text (markText)\n                    .attr ('transform', `translate(5,-5)`)\n                );\n            };\n            break;\n          default:\n            return function (g) {\n              g\n                .attr ('transform', `translate(0,${height + margin.top})`)\n                .attr ('class', 'axisGreyY')\n                .call (d3.axisBottom (x).tickSize (0))\n                .call (g =>\n                  g\n                    .select ('.tick:last-of-type text')\n                    .clone ()\n                    .attr ('class', 'axisMark')\n                    .attr ('y', 0)\n                    .attr ('text-anchor', 'start')\n                    .attr ('font-weight', 'bold')\n                    .text (markText)\n                    .attr ('transform', `translate(5,-5)`)\n                );\n            };\n        }\n      };\n\n      //   const y = d3\n      //     .scaleLinear ()\n      //     .domain ([0, d3.max (data, d => d.value)])\n      //     .nice ()\n      //     .range ([height / 2, margin.top]);\n\n      const getY = type => {\n        switch (type) {\n          case 0:\n            return d3\n              .scaleLinear ()\n              .domain ([0, d3.max (dataCollection[0], d => d.value)])\n              .nice ()\n              .range ([eachHeight + margin.top, margin.top]);\n            break;\n          case 1:\n            return d3\n              .scaleLinear ()\n              .domain ([0, d3.max (dataCollection[1], d => d.value)])\n              .nice ()\n              .range ([\n                eachHeight * 2 + margin.inBetween + margin.top,\n                eachHeight + margin.inBetween + margin.top,\n              ]);\n            break;\n          default:\n            return d3\n              .scaleLinear ()\n              .domain ([0, d3.max (dataCollection[2], d => d.value)])\n              .nice ()\n              .range ([\n                height + margin.top,\n                eachHeight * 2 + margin.inBetween * 2 + margin.top,\n              ]);\n        }\n      };\n\n      let svg = d3\n        .select ('.performanceChart')\n        .append ('svg')\n        .attr ('width', width + margin.left + margin.right)\n        .attr ('height', height + margin.top + margin.bottom);\n\n      const getPerformanceColor = (type, perform) => {\n        if (type == 'stroke') {\n          //color for stroke\n          if (perform == 1) {\n            return d3.color ('#159256');\n          } else if (perform == 0) {\n            return d3.color ('#878787');\n          } else {\n            return d3.color ('#921515');\n          }\n        } else {\n          //color for area\n          if (perform == 1) {\n            return d3.color ('#F0F7F4');\n          } else if (perform == 0) {\n            return d3.color ('#E8E8E8');\n          } else {\n            return d3.color ('#F7F0F0');\n          }\n        }\n      };\n\n      const getAreaColor = (type, preValue, currentValue) => {\n        if (type == 0) {\n          //accuracy -> the higher the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor ('area', 1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor ('area', -1);\n          } else {\n            return getPerformanceColor ('area', 0);\n          }\n        } else {\n          //FPR, FNR -> the lower the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor ('area', -1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor ('area', 1);\n          } else {\n            return getPerformanceColor ('area', 0);\n          }\n        }\n      };\n\n      const getStrokeColor = (type, preValue, currentValue) => {\n        if (type == 0) {\n          //accuracy -> the higher the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor ('stroke', 1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor ('stroke', -1);\n          } else {\n            return getPerformanceColor ('stroke', 0);\n          }\n        } else {\n          //FPR, FNR -> the lower the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor ('stroke', -1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor ('stroke', 1);\n          } else {\n            return getPerformanceColor ('stroke', 0);\n          }\n        }\n      };\n\n      dataCollection.forEach ((data, index) => {\n        const defaultValue = data[50].value;\n        const currentValue = data[this.props.threshold].value;\n        const currentThreshold = this.props.threshold;\n        const x = d3\n          .scaleLinear ()\n          .domain ([0, d3.max (data, d => d.threshold)])\n          .nice ()\n          .range ([margin.left, width - margin.right]);\n\n        const y = getY (index);\n        const xAxis = getXAxis (data.x, x, index);\n\n        const yAxis = g =>\n          g\n            .attr ('transform', `translate(${margin.left},0)`)\n            .attr ('class', 'axisGreyY')\n            .call (d3.axisLeft (y).tickSize (0))\n            .call (g =>\n              g\n                .select ('.tick:last-of-type text')\n                .clone ()\n                .attr ('class', 'axisMark')\n                .attr ('x', 0)\n                .attr ('text-anchor', 'middle')\n                .attr ('font-weight', 'bold')\n                .text (data.y)\n                .attr ('transform', `translate(0,-10)`)\n            );\n\n        const line = d3\n          .line ()\n          .defined (d => !isNaN (d.value))\n          .x (d => x (d.threshold))\n          .y (d => y (d.value));\n\n        const area = d3\n          .area ()\n          .defined (d =>\n            betweenThreshold (0.5, currentThreshold * 0.01, d.threshold)\n          )\n          .x (d => x (d.threshold))\n          .y0 (y (0))\n          .y1 (d => y (d.value));\n\n        svg\n          .append ('path')\n          .datum (data.filter (area.defined ()))\n          .attr ('fill', getAreaColor (index, defaultValue, currentValue))\n          .attr ('d', area);\n\n        svg\n          .append ('path')\n          .datum (data)\n          .attr ('fill', 'none')\n          .attr ('stroke', 'grey')\n          .attr ('stroke-width', 1.5)\n          .attr ('stroke-linejoin', 'round')\n          .attr ('stroke-linecap', 'round')\n          .attr ('d', line);\n\n        svg\n          .append ('line')\n          .attr ('x1', x (currentThreshold * 0.01))\n          .attr ('y1', y (currentValue))\n          .attr ('x2', x (currentThreshold * 0.01))\n          .attr (\n            'y2',\n            margin.top + index * margin.inBetween + (index + 1) * eachHeight\n          )\n          .attr ('stroke-width', 2)\n          .attr ('stroke', getStrokeColor (index, defaultValue, currentValue))\n          .style ('stroke-dasharray', '5,5');\n\n        svg\n          .append ('line')\n          .attr ('x1', x (50 * 0.01))\n          .attr ('y1', y (defaultValue))\n          .attr ('x2', x (50 * 0.01))\n          .attr (\n            'y2',\n            margin.top + index * margin.inBetween + (index + 1) * eachHeight\n          )\n          .attr ('stroke-width', 2)\n          .attr ('stroke', d3.color ('#D2D2D2'));\n\n        svg\n          .append ('text')\n          .attr ('x', x (currentThreshold * 0.01))\n          .attr ('y', y (currentValue + 8))\n          .attr ('text-anchor', 'middle')\n          .text (`${currentValue}%`)\n          .attr ('font-family', 'sans-serif')\n          .attr ('font-size', '20px')\n          .attr ('fill', getStrokeColor (index, defaultValue, currentValue));\n\n        svg.append ('g').call (xAxis);\n\n        svg.append ('g').call (yAxis);\n      });\n    }\n  }\n\n  getBoxHeight () {\n    const margin = this.getMargin ();\n    return (\n      (this.state.height - margin.top - margin.bottom - margin.inBetween * 2) /\n      3\n    );\n  }\n\n  render () {\n    return (\n      <div style={{marginTop: '20px'}}>\n        <div\n          style={{\n            width: '55%',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        >\n          <div\n            style={{marginTop: '20px'}}\n            className=\"performanceChart\"\n            ref={this.chartPerformanceRef}\n          />\n        </div>\n        <div\n          style={{\n            width: '45%',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        >\n          <div\n            style={{\n              height: `${this.getBoxHeight ()}px`,\n              padding: '0% 5%',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              marginTop: `${this.getMargin ().top + 20}px`,\n              marginBottom: `${this.getMargin ().inBetween}px`,\n            }}\n          >\n            <div>\n              <Typography variant=\"h6\" textAlign=\"center\">\n                Accuracy{' '}\n              </Typography>\n              <Typography className=\"performanceText\" variant=\"body2\">\n                Correctly predicted edits out of all edits{' '}\n              </Typography>\n            </div>\n\n          </div>\n\n          <div\n            style={{\n              height: `${this.getBoxHeight ()}px`,\n              padding: '0% 5%',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              marginBottom: `${this.getMargin ().inBetween}px`,\n            }}\n          >\n            <div>\n              <Typography variant=\"h6\" textAlign=\"center\">\n                False Positive Rate\n              </Typography>\n              <Typography variant=\"body2\" className=\"performanceText\">\n                Percentage of good edits that are falsely identified as damaing\n                {' '}\n              </Typography>\n            </div>\n          </div>\n\n          <div\n            style={{\n              height: `${this.getBoxHeight ()}px`,\n              padding: '0% 5%',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n            }}\n          >\n            <div>\n              <Typography variant=\"h6\" textAlign=\"center\">\n                False Negative Rate\n              </Typography>\n              <Typography variant=\"body2\" className=\"performanceText\">\n                Percentage of damaing edits that won’t be identified {' '}\n              </Typography>\n            </div>\n\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ThresholdPerformance;\n","import React, {Component} from 'react';\nclass Circle extends Component {\n  constructor (props) {\n    super (props);\n  }\n  state = {};\n  render () {\n    const size = this.props.size / 2;\n    return (\n      <svg height={size * 2} width={size * 2}>\n        <circle cx={size} cy={size} r={size} fill={this.props.color} />\n      </svg>\n    );\n  }\n}\n\nexport class Cross extends Component {\n  constructor (props) {\n    super (props);\n  }\n  state = {};\n  render () {\n    const size = this.props.size;\n    return (\n      <svg height={size} width={size}>\n        <line\n          x1=\"0\"\n          y1=\"0\"\n          x2={size}\n          y2={size}\n          stroke={this.props.color}\n          strokeWidth={2}\n        />\n        <line\n          x1=\"0\"\n          y1={size}\n          x2={size}\n          y2=\"0\"\n          stroke={this.props.color}\n          strokeWidth={2}\n        />\n      </svg>\n    );\n  }\n}\n\nexport default Circle;\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport ThresholdSlider from '../../partials/slider';\nimport ThresholdPerformance from './threshold_performance';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Circle, {Cross} from '../../partials/shape';\n\nclass ThresholdExplorer extends Component {\n  constructor (props) {\n    super (props);\n    this.chartRef = React.createRef ();\n    this.getWidth = this.getWidth.bind (this);\n    this.drawChart = this.drawChart.bind (this);\n    this.redrawChart = this.redrawChart.bind (this);\n    this.state = {\n      threshold: 60,\n      width: 1000,\n      height: 1000,\n      widthHeightRatio: 0.8,\n      graph1Scale: 1,\n      dotWidth: 0,\n      sliderRange: [20, 1000],\n    };\n  }\n\n  getWidth () {\n    if (this.chartRef.current == null) {\n      return this.state.width;\n    } else {\n      return this.chartRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  onSliderChange = (event, threshold) => {\n    this.setState ({\n      threshold: threshold,\n    });\n    d3.select ('.rowChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n  };\n\n  componentDidMount () {\n    let width = this.getWidth ();\n    let height = width * 0.8;\n    let sliderRight = width - 30;\n\n    this.setState (\n      {\n        width: width,\n        height: height,\n        sliderRange: [10, sliderRight],\n      },\n      () => {\n        this.drawChart ();\n      }\n    );\n\n    let resizedFn;\n    window.addEventListener ('resize', () => {\n      clearTimeout (resizedFn);\n      resizedFn = setTimeout (() => {\n        this.redrawChart ();\n      }, 200);\n    });\n  }\n\n  redrawChart () {\n    let width = this.getWidth ();\n    let sliderRight = width - 30;\n    this.setState ({\n      width: width,\n      height: width * 0.8,\n      sliderRange: [10, sliderRight],\n    });\n    d3.select ('.rowChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n  }\n\n  drawChart () {\n    const margin = {top: 0, right: 30, bottom: 30, left: 10};\n    let width = this.state.width - margin.left - margin.right;\n    let height = this.state.height - margin.top - margin.bottom;\n    // append the svg object to the body of the page\n    let svg = d3\n      .select ('.rowChart')\n      .append ('svg')\n      .attr ('width', width + margin.left + margin.right)\n      .attr ('height', height + margin.top + margin.bottom);\n\n    const threshold = this.state.threshold / 100;\n    const graph1Scale = 1;\n\n    const diameter = width * graph1Scale / 50;\n    const dotWidth = diameter * 0.5;\n    if (this.props.data != null) {\n      const dd = dodge (threshold, this.props.data, diameter);\n\n      const xAxis = g =>\n        g\n          .attr ('transform', `translate(0,${margin.top})`)\n          .call (d3.axisTop (x).ticks (0));\n\n      const x = d3\n        .scaleLinear ()\n        .domain ([0, 1])\n        .nice ()\n        .range ([margin.left, width + margin.left]);\n\n      // const shape = d3.scaleOrdinal (\n      //   dd.map (d => d.category),\n      //   d3.symbols.map (s =>\n      //     d3.symbol ().size (diameter * diameter * 0.4).type (s) ()\n      //   )\n      // );\n\n      function dodge (threshold, data, diameter) {\n        const circles = data\n          .map (d => ({\n            xvalue: parseFloat (d.confidence_damage).toFixed (2),\n            x: 0.02 *\n              Math.ceil (parseFloat (d.confidence_damage).toFixed (2) * 50),\n\n            correct: parseFloat (d.confidence_damage).toFixed (2) >=\n              threshold ==\n              d.damaging_label,\n            damaging_predict: parseFloat (d.confidence_damage).toFixed (2) >=\n              threshold,\n            damaging_label: d.damaging_label,\n          }))\n          .sort (function (a, b) {\n            if (a.x == b.x) {\n              let ca = a.correct ? 1 : 0;\n              let cb = b.correct ? 1 : 0;\n              return cb - ca;\n            } else {\n              return b.x - a.x;\n            }\n          });\n        const epsilon = 1e-4;\n\n        let prev = 100;\n        let cnt = 1;\n\n        for (const b of circles) {\n          //determine the position of the dot\n          if (Math.abs (prev - b.x) < epsilon) {\n            // belongs to the same col\n            cnt += 1;\n            b.y = diameter * cnt;\n          } else {\n            prev = b.x;\n            cnt = 1;\n            b.y = diameter;\n          }\n\n          if (b.correct) {\n            b.category = 1;\n          } else {\n            b.category = 0;\n          }\n\n          if (b.damaging_predict) {\n            b.color = d3.color ('#C57619');\n          } else {\n            b.color = d3.color ('#909090');\n          }\n        }\n\n        return circles;\n      }\n\n      var customCross = {\n        draw: function (context, size) {\n          let s = Math.sqrt (size * 2) / 2;\n          let w = Math.sqrt (size) / 6;\n          context.moveTo (-s, w);\n          context.lineTo (s, w);\n          context.lineTo (s, -w);\n          context.lineTo (-s, -w);\n          context.closePath ();\n          context.moveTo (w, s);\n          context.lineTo (w, -s);\n          context.lineTo (-w, -s);\n          context.lineTo (-w, s);\n          context.closePath ();\n        },\n      };\n\n      // svg.append ('g').call (xAxis);\n\n      svg\n        .append ('line')\n        .attr ('x1', width + margin.left - dotWidth * 100 * (1 - threshold))\n        .attr ('y1', margin.top)\n        .attr ('x2', width + margin.left - dotWidth * 100 * (1 - threshold))\n        .attr ('y2', height - 30)\n        .attr ('stroke-width', 2)\n        .attr ('stroke', 'black')\n        .style ('stroke-dasharray', '5,5');\n\n      const thresholdText = threshold * 100 + '%';\n      svg\n        .append ('text')\n        .attr ('x', width + margin.left - dotWidth * 100 * (1 - threshold))\n        .attr ('y', height - 15)\n        .attr ('text-anchor', 'middle')\n        .text (thresholdText)\n        .attr ('font-family', 'sans-serif')\n        .attr ('font-size', '15px');\n\n      svg\n        .append ('g')\n        .selectAll ('path')\n        .data (dd)\n        .join ('path')\n        .attr (\n          'transform',\n          d => `translate(${x (d.x)},${d.y + margin.top}), rotate(45)`\n        )\n        .attr ('fill', d => d.color)\n        .attr (\n          'd',\n          d3\n            .symbol ()\n            .type (function (d) {\n              if (d.category === 0) {\n                return customCross;\n              } else {\n                return d3.symbolCircle;\n              }\n            })\n            .size (diameter * diameter * 0.4)\n        );\n    }\n  }\n\n  // shouldComponentUpdate (nextProps, nextState) {\n  //   return (\n  //     this.props.performance_data !== nextProps.performance_data ||\n  //     this.state != nextState\n  //   );\n  // }\n\n  render () {\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            width: '55%',\n            display: 'inline-block',\n            verticalAlign: 'top',\n            position: 'relative',\n          }}\n        >\n\n          <div className=\"upperSettings\">\n\n            <Grid container spacing={0}>\n              <Grid item xs={9} className=\"modelOptions\">\n                <Typography component=\"div\" variant=\"subtitle2\">\n                  <Box>\n                    MODEL OPTIONS\n                  </Box>\n\n                </Typography>\n\n                <Grid container spacing={0} className=\"options\">\n                  <Grid item xs={6}>\n                    <Typography\n                      component=\"div\"\n                      style={{\n                        borderRight: '1px solid lightgrey',\n                        fontWeight: '500',\n                      }}\n                      variant=\"h6\"\n                      className=\"text\"\n                    >\n                      Damaging Model\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography\n                      style={{\n                        color: 'grey',\n                      }}\n                      component=\"div\"\n                      variant=\"h6\"\n                      className=\"text\"\n                    >\n                      GoodFaith Model\n                    </Typography>\n                  </Grid>\n\n                </Grid>\n              </Grid>\n              <Grid item xs={3} className=\"threshold\">\n                <div className=\"innerBox\">\n                  <Typography variant=\"subtitle2\">\n                    <Box>\n                      threshold\n                    </Box>\n\n                  </Typography>\n\n                  <Grid container spacing={2} className=\"options\">\n                    <Grid item xs={12}>\n                      <Typography component=\"div\" variant=\"h6\" className=\"text\">\n                        {this.state.threshold} %\n                      </Typography>\n                    </Grid>\n\n                  </Grid>\n                </div>\n\n              </Grid>\n            </Grid>\n          </div>\n\n          <div\n            style={{\n              marginLeft: `${this.state.sliderRange[0]}px`,\n              width: `${this.state.sliderRange[1] - this.state.sliderRange[0]}px`,\n            }}\n          >\n            <Typography variant=\"subtitle2\">VISUALIZATION</Typography>\n            <ThresholdSlider\n              defaultValue={60}\n              onChangeCommitted={this.onSliderChange}\n              color={'orange'}\n            />\n\n          </div>\n          <div className=\"rowChart\" ref={this.chartRef} />\n          <div className=\"legendCard\" id=\"explorerLegend\">\n            <Typography component=\"div\" variant=\"subtitle2\">\n              legend\n            </Typography>\n            <Grid container spacing={0} style={{marginTop: '10px'}}>\n              <Grid item xs={12}>\n                <div className=\"legendMark\">\n                  <Circle size={12} color=\"#909090\" />\n                  {' '}\n                  <Typography component=\"span\" variant=\"body2\">\n                    Correctly classified good edits (TN)\n                  </Typography>\n                </div>\n\n              </Grid>\n              <Grid item xs={12}>\n                <div className=\"legendMark\">\n                  <Cross size={12} color=\"#909090\" />\n                  {' '}\n                  <Typography component=\"span\" variant=\"body2\">\n                    Uncaught damaging edits (FN){' '}\n                  </Typography>\n                </div>\n              </Grid>\n              <Grid item xs={12}>\n                <div className=\"legendMark\">\n                  <Circle size={12} color=\"#C57619\" />\n                  {' '}\n                  <Typography component=\"span\" variant=\"body2\">\n                    Correctly classified damaging edits (TP)\n                  </Typography>\n                </div>\n\n              </Grid>\n              <Grid item xs={12}>\n                <div className=\"legendMark\">\n                  <Cross size={12} color=\"#C57619\" />\n                  {' '}\n                  <Typography component=\"span\" variant=\"body2\">\n                    Mis-classified good edits (FP){' '}\n                  </Typography>\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n\n        <div className=\"sidePanel\" id=\"thresholdExplorerSidePanel\">\n          <Typography variant=\"subtitle2\">PERFORMANCE</Typography>\n          <ThresholdPerformance\n            performance_data={this.props.performance_data}\n            threshold={this.state.threshold}\n            key={this.state.threshold}\n          />\n        </div>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ThresholdExplorer;\n","import React, {Component} from 'react';\nimport ThresholdExplorer from './threshold_explorer';\nimport * as d3 from 'd3';\nimport data_balanced from '../../data/data_not-balanced.csv';\nimport data_performance from '../../data/performance.csv';\n\nclass Chart extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      data: null,\n      change: 0,\n    };\n  }\n\n  componentDidMount () {\n    d3\n      .csv (data_balanced, d => {\n        return {\n          confidence_faith: d.confidence_faith,\n          faith_label: d.goodfaith == 'True' ? true : false,\n          confidence_damage: +d.confidence_damage,\n          damaging_label: d.damaging == 'True' ? true : false,\n        };\n      })\n      .then (data => {\n        this.setState ({data: data.slice (0, 2000)});\n        this.setState ({change: 2});\n      });\n  }\n\n  shouldComponentUpdate (nextProps, nextState) {\n    return true;\n  }\n\n  render () {\n    return (\n      <div style={{display: 'flex'}}>\n        {/* <Test data={this.state.data} key={this.state.change} /> */}\n        <ThresholdExplorer\n          data={this.state.data}\n          performance_data={this.props.performanceData}\n          key={this.state.change}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport dotData from '../../data/new.json';\nimport ThresholdSlider from '../../partials/slider';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Circle, {Cross} from '../../partials/shape';\n\nconst getColor = (accuracy, defaultValue, currentValue) => {\n  let perform = 1;\n  if (accuracy) {\n    if (defaultValue > currentValue) {\n      perform = -1;\n    } else if (defaultValue === currentValue) {\n      perform = 0;\n    } else {\n      perform = 1;\n    }\n  } else {\n    if (defaultValue > currentValue) {\n      perform = 1;\n    } else if (defaultValue === currentValue) {\n      perform = 0;\n    } else {\n      perform = -1;\n    }\n  }\n  //color for stroke\n  if (perform === 1) {\n    return d3.color ('#159256');\n  } else if (perform === 0) {\n    return d3.color ('#878787');\n  } else {\n    return d3.color ('#921515');\n  }\n};\n\nconst getPerformance = data => {\n  const TP = data[0], TN = data[1], FP = data[2], FN = data[3];\n  //accuracy:\n  const acc = (TP + TN) / (TP + TN + FP + FN);\n  const fpr = FP / (FP + TN);\n  const fnr = FN / (FN + TP);\n  return [acc, fpr, fnr];\n};\n\nclass GroupCompareVisualizer extends Component {\n  constructor (props) {\n    super (props);\n    this.compareChartRef = React.createRef ();\n    this.comparePerformanceRef = React.createRef ();\n    this.wholePerformanceRef = React.createRef ();\n    this.getMargin = this.getMargin.bind (this);\n    this.getWidth = this.getWidth.bind (this);\n    this.drawChart = this.drawChart.bind (this);\n    this.redrawChart = this.redrawChart.bind (this);\n    this.getWholePerformance = this.getWholePerformance.bind (this);\n    this.getPerformanceWidth = this.getPerformanceWidth.bind (this);\n    this.getPerformanceForThreshold = this.getPerformanceForThreshold.bind (\n      this\n    );\n    this.state = {\n      threshold: 60,\n      width: 1000,\n      height: 1000,\n      performanceWidth: 1000,\n      group1Color: '#C57619',\n      group2Color: '#3777A5',\n      sliderRange: [20, 1000],\n      wholePerformance: [0, 0, 0],\n      defaultPerformance: [0, 0, 0],\n      groupOnePerformance: null,\n      groupTwoPerformance: null,\n    };\n  }\n\n  getMargin () {\n    const performanceHeight = this.state.performanceHeight;\n    const bottom = 50;\n    return {\n      top: 0,\n      right: 40,\n      bottom: bottom,\n      left: 20,\n      blockHeight: (performanceHeight - bottom) / 3,\n      chartHeight: (performanceHeight - bottom) / 12,\n    };\n  }\n\n  getWidth () {\n    if (this.compareChartRef.current === null) {\n      return this.state.width;\n    } else {\n      return this.compareChartRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  getPerformanceWidth () {\n    if (this.comparePerformanceRef.current === null) {\n      return this.state.performanceWidth;\n    } else {\n      return this.comparePerformanceRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  getPerformanceHeight () {\n    if (\n      this.wholePerformanceRef.current === null ||\n      this.compareChartRef.current === null\n    ) {\n      return this.state.performanceHeight;\n    } else {\n      return (\n        (this.compareChartRef.current.parentElement.offsetWidth - 60) * 0.5 +\n        300 -\n        this.wholePerformanceRef.current.offsetHeight\n      );\n    }\n  }\n\n  getPerformanceForThreshold () {\n    const threshold = this.state.threshold * 0.01;\n    if (this.props.groupOneData != null && this.props.groupTwoData != null) {\n      const groupOneFP = this.props.groupOneData.filter (function (d) {\n        return d.confidence_damage >= threshold && !d.damaging_label;\n      }).length;\n\n      const groupOneTP = this.props.groupOneData.filter (function (d) {\n        return d.confidence_damage >= threshold && d.damaging_label;\n      }).length;\n\n      const groupOneFN = this.props.groupOneData.filter (function (d) {\n        return d.confidence_damage < threshold && d.damaging_label;\n      }).length;\n\n      const groupOneTN = this.props.groupOneData.filter (function (d) {\n        return d.confidence_damage < threshold && !d.damaging_label;\n      }).length;\n\n      const groupTwoFP = this.props.groupTwoData.filter (function (d) {\n        return d.confidence_damage >= threshold && !d.damaging_label;\n      }).length;\n\n      const groupTwoTP = this.props.groupTwoData.filter (function (d) {\n        return d.confidence_damage >= threshold && d.damaging_label;\n      }).length;\n\n      const groupTwoFN = this.props.groupTwoData.filter (function (d) {\n        return d.confidence_damage < threshold && d.damaging_label;\n      }).length;\n\n      const groupTwoTN = this.props.groupTwoData.filter (function (d) {\n        return d.confidence_damage < threshold && !d.damaging_label;\n      }).length;\n\n      return {\n        groupOne: [groupOneTP, groupOneTN, groupOneFP, groupOneFN],\n        groupTwo: [groupTwoTP, groupTwoTN, groupTwoFP, groupTwoFN],\n        all: [\n          groupOneTP + groupTwoTP,\n          groupOneTN + groupTwoTN,\n          groupOneFP + groupTwoFP,\n          groupOneFN + groupTwoFN,\n        ],\n      };\n    } else {\n      return {\n        groupOne: this.state.groupOnePerformance,\n        groupTwo: this.state.groupTwoPerformance,\n        all: this.state.wholePerformance,\n      };\n    }\n  }\n\n  onSliderChange = (event, threshold) => {\n    this.setState ({\n      threshold: threshold,\n    });\n\n    this.getWholePerformance ();\n\n    d3.select ('.compareChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n    d3.select ('.comparePerformance svg').remove ();\n    this.drawPerformanceChart = this.drawPerformanceChart.bind (this);\n    this.drawPerformanceChart ();\n  };\n\n  componentDidMount () {\n    let width = this.getWidth ();\n    let height = width / 2.4;\n    let performanceWidth = this.getPerformanceWidth ();\n    let performanceHeight = this.getPerformanceHeight ();\n    let sliderRight = width - 40;\n    this.getWholePerformance ();\n    let acc = 0;\n    let fpr = 0;\n    let fnr = 0;\n    if (this.props.performanceData != null) {\n      const data = this.props.performanceData;\n      acc = data[50].damaging_accuracy * 100;\n      fpr = 100 * data[50].damaging_fpr;\n      fnr = 100 * data[50].damaging_fnr;\n    }\n\n    this.setState (\n      {\n        width: width,\n        height: height,\n        sliderRange: [10, sliderRight],\n        performanceWidth: performanceWidth,\n        performanceHeight: performanceHeight,\n        defaultPerformance: [acc.toFixed (1), fpr.toFixed (1), fnr.toFixed (1)],\n      },\n      () => {\n        this.drawChart ();\n        this.drawPerformanceChart ();\n      }\n    );\n\n    let resizedFn;\n    window.addEventListener ('resize', () => {\n      clearTimeout (resizedFn);\n      resizedFn = setTimeout (() => {\n        this.redrawChart ();\n      }, 200);\n    });\n  }\n\n  redrawChart () {\n    let width = this.getWidth ();\n    let performanceWidth = this.getPerformanceWidth ();\n    let performanceHeight = this.getPerformanceHeight ();\n    let sliderRight = width - 40;\n    this.setState ({\n      width: width,\n      height: width / 2,\n      performanceWidth: performanceWidth,\n      performanceHeight: performanceHeight,\n\n      sliderRange: [10, sliderRight],\n    });\n    d3.select ('.compareChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n    d3.select ('.comparePerformance svg').remove ();\n    this.drawPerformanceChart = this.drawPerformanceChart.bind (this);\n    this.drawPerformanceChart ();\n  }\n\n  getWholePerformance () {\n    if (\n      this.props.performanceData != null &&\n      this.props.groupOneData != null &&\n      this.props.groupTwoData != null\n    ) {\n      const performance = this.getPerformanceForThreshold ();\n      const groupOnePerf = performance.groupOne;\n      const groupTwoPerf = performance.groupTwo;\n      const allPerf = getPerformance (performance.all);\n\n      this.setState ({\n        wholePerformance: allPerf,\n        groupOnePerformance: groupOnePerf,\n        groupTwoPerformance: groupTwoPerf,\n      });\n    }\n  }\n  drawPerformanceChart () {\n    const margin = this.getMargin ();\n    let width = this.state.performanceWidth - margin.left - margin.right;\n    let height = this.state.performanceHeight - margin.top - margin.bottom;\n    let svg = d3\n      .select ('.comparePerformance')\n      .append ('svg')\n      .attr ('width', width + margin.left + margin.right)\n      .attr ('height', height + margin.top + margin.bottom);\n\n    let blockHeight = height / 3;\n    let vizHeight = blockHeight / 4;\n    // TP, TN, FP, FN\n    if (\n      this.state.groupOnePerformance != null &&\n      this.state.groupTwoPerformance != null\n    ) {\n      let groupOnePerformance = getPerformance (this.state.groupOnePerformance);\n      let groupTwoPerformance = getPerformance (this.state.groupTwoPerformance);\n\n      let wholePerformance = this.state.wholePerformance;\n      const x = d3\n        .scaleLinear ()\n        .domain ([0, 1])\n        .nice ()\n        .range ([margin.left, margin.left + width]);\n\n      function drawPerformance (\n        height,\n        defaultPerformance,\n        currentPerformance,\n        color,\n        larger,\n        groupNumber,\n        largerPerformance\n      ) {\n        const markHeight = 5;\n        const markWidth = 6;\n        const actualx = x (currentPerformance);\n\n        svg\n          .append ('line')\n          .attr ('x1', margin.left)\n          .attr ('y1', height)\n          .attr ('x2', margin.left + width)\n          .attr ('y2', height)\n          .attr ('stroke-width', 2)\n          .attr ('stroke', 'grey');\n        svg\n          .append ('line')\n          .attr ('x1', actualx)\n          .attr ('y1', height - markHeight)\n          .attr ('x2', actualx)\n          .attr ('y2', height + markHeight)\n          .attr ('stroke-width', markWidth)\n          .attr ('stroke', color);\n\n        svg\n          .append ('line')\n          .attr ('x1', x (defaultPerformance))\n          .attr ('y1', height)\n          .attr ('x2', actualx)\n          .attr ('y2', height)\n          .attr ('stroke-width', 3)\n          .attr ('stroke', color);\n        let tooltipHalfWidth = 40;\n        if (largerPerformance === 'Significantly Higher') {\n          tooltipHalfWidth = 65;\n        }\n\n        let tooltipx = actualx - tooltipHalfWidth;\n\n        if (tooltipx < margin.left) {\n          tooltipx = margin.left;\n        } else if (tooltipx > width + margin.left + margin.right) {\n          tooltipx = width + margin.left + margin.right - tooltipHalfWidth;\n        }\n        let tooltipy = height + 10;\n        if (larger) {\n          if (groupNumber == 1) {\n            tooltipy = height - 35;\n          }\n\n          svg\n            .append ('rect')\n            .attr ('x', tooltipx)\n            .attr ('y', tooltipy)\n            .attr ('width', tooltipHalfWidth * 2)\n            .attr ('height', 24)\n            .attr ('rx', 4)\n            .attr ('ry', 4)\n            .attr ('fill', color);\n\n          svg\n            .append ('text')\n            .attr ('x', tooltipx + tooltipHalfWidth)\n            .attr ('y', tooltipy + 13)\n            .attr ('text-anchor', 'middle')\n            .attr ('alignment-baseline', 'middle')\n            .text (largerPerformance)\n            .attr ('font-family', 'sans-serif')\n            .attr ('fill', 'white')\n            .attr ('font-size', '14px');\n        }\n      }\n\n      ['Accuracy', 'FPR', 'FNR'].forEach ((item, index) => {\n        const groupOneHeight = blockHeight * index + vizHeight * 3;\n        const groupTwoHeight = margin.top + blockHeight * index + vizHeight * 4;\n\n        const groupOneCurrentPerformance = groupOnePerformance[index];\n        const groupTwoCurrentPerformance = groupTwoPerformance[index];\n\n        let min = groupOneCurrentPerformance;\n        let max = groupTwoCurrentPerformance;\n        let larger = 2;\n        if (groupOneCurrentPerformance > groupTwoCurrentPerformance) {\n          min = groupTwoCurrentPerformance;\n          max = groupOneCurrentPerformance;\n          larger = 1;\n        } else if (groupOneCurrentPerformance > groupTwoCurrentPerformance) {\n          larger = 0;\n        }\n\n        let largerPercentage = 0;\n        if (min === 0) {\n          largerPercentage = 'Significantly Higher';\n        } else {\n          largerPercentage = Math.round ((max - min) * 100 / max) + '% more';\n        }\n\n        drawPerformance (\n          groupOneHeight,\n          wholePerformance[index],\n          groupOnePerformance[index],\n          d3.color (this.state.group1Color),\n          larger === 1,\n          1,\n          largerPercentage\n        );\n        drawPerformance (\n          groupTwoHeight,\n          wholePerformance[index],\n          groupTwoPerformance[index],\n          d3.color (this.state.group2Color),\n          larger === 2,\n          2,\n          largerPercentage\n        );\n        // svg\n        //   .append ('line')\n        //   .attr ('x1', margin.left + width / 4)\n        //   .attr ('y1', groupOneHeight)\n        //   .attr ('x2', margin.left + width)\n        //   .attr ('y2', groupOneHeight)\n        //   .attr ('stroke-width', 2)\n        //   .attr ('stroke', 'black');\n        // svg\n        //   .append ('line')\n        //   .attr ('x1', x (groupOnePerformance[index]))\n        //   .attr ('y1', groupOneHeight - markHeight)\n        //   .attr ('x2', x (groupOnePerformance[index]))\n        //   .attr ('y2', groupOneHeight + markHeight)\n        //   .attr ('stroke-width', markWidth)\n        //   .attr ('stroke', 'red');\n\n        // svg\n        //   .append ('line')\n        //   .attr ('x1', margin.left + width / 4)\n        //   .attr ('y1', groupTwoHeight)\n        //   .attr ('x2', margin.left + width)\n        //   .attr ('y2', groupTwoHeight)\n        //   .attr ('stroke-width', 2)\n        //   .attr ('stroke', 'black');\n\n        // svg\n        //   .append ('line')\n        //   .attr ('x1', x (groupTwoPerformance[index]))\n        //   .attr ('y1', groupTwoHeight - markHeight)\n        //   .attr ('x2', x (groupTwoPerformance[index]))\n        //   .attr ('y2', groupTwoHeight + markHeight)\n        //   .attr ('stroke-width', markWidth)\n        //   .attr ('stroke', 'red');\n      });\n    }\n  }\n\n  drawChart () {\n    const margin = {top: 20, right: 40, bottom: 0, left: 0};\n    let width = this.state.width - margin.left - margin.right;\n    let height = width / 2.5;\n    // append the svg object to the body of the page\n    let svg = d3\n      .select ('.compareChart')\n      .append ('svg')\n      .attr ('width', width + margin.left + margin.right)\n      .attr ('height', height);\n\n    var customCross = {\n      draw: function (context, size) {\n        let s = Math.sqrt (size * 2) / 2;\n        let w = Math.sqrt (size) / 6;\n        context.moveTo (-s, w);\n        context.lineTo (s, w);\n        context.lineTo (s, -w);\n        context.lineTo (-s, -w);\n        context.closePath ();\n        context.moveTo (w, s);\n        context.lineTo (w, -s);\n        context.lineTo (-w, -s);\n        context.lineTo (-w, s);\n        context.closePath ();\n      },\n    };\n\n    const groupSize = width / 2.4;\n\n    const pack = data =>\n      d3.pack ().size ([groupSize - 2, groupSize - 2]).padding (3) (\n        d3\n          .hierarchy (data)\n          .sum (d => d.value)\n          .sort ((a, b) => b.value - a.value)\n      );\n\n    const threshold = this.state.threshold * 0.01;\n\n    const app = this;\n\n    if (\n      this.props.groupOneData != null &&\n      this.props.groupTwoData != null &&\n      this.state.groupOnePerformance != null &&\n      this.state.groupTwoPerformance != null\n    ) {\n      const groupOnePerf = this.state.groupOnePerformance;\n      const groupTwoPerf = this.state.groupTwoPerformance;\n      const groupOneTP = groupOnePerf[0],\n        groupOneTN = groupOnePerf[1],\n        groupOneFP = groupOnePerf[2],\n        groupOneFN = groupOnePerf[3];\n      const groupTwoTP = groupTwoPerf[0],\n        groupTwoTN = groupTwoPerf[1],\n        groupTwoFP = groupTwoPerf[2],\n        groupTwoFN = groupTwoPerf[3];\n\n      const dots = pack (dotData).children\n        .slice (0, this.props.sliceNumber)\n        .map (d => ({\n          x: d.x,\n          y: d.y,\n          r: d.r,\n          category: 'cross',\n        }))\n        .sort (function (a, b) {\n          const centerX = margin.left + height;\n          const centerY = height / 2 + margin.top;\n          const distA = Math.sqrt (\n            Math.pow (a.x - centerX, 2) + Math.pow (a.y - centerY, 2)\n          );\n          const distB = Math.sqrt (\n            Math.pow (b.x - centerX, 2) + Math.pow (b.y - centerY, 2)\n          );\n          return distA - distB;\n        });\n\n      const dotRadius = dots[0].r;\n\n      function getSymbolColor (color, fp, tp, fn, tn) {\n        let dd = [];\n        const cp = [fp, fp + tp, fp + tp + fn];\n        dots.forEach (function (dot, index) {\n          if (index < cp[0]) {\n            dd.push ({\n              //false positive\n              x: dot.x,\n              y: dot.y,\n              category: 0,\n              color: color,\n            });\n          } else if (index >= cp[0] && index < cp[1]) {\n            dd.push ({\n              //true positive\n              x: dot.x,\n              y: dot.y,\n              category: 1,\n              color: color,\n            });\n          } else if (index >= cp[1] && index < cp[2]) {\n            dd.push ({\n              //false negative\n              x: dot.x,\n              y: dot.y,\n              category: 0,\n              color: d3.color ('#909090'),\n            });\n          } else {\n            dd.push ({\n              //false positive\n              x: dot.x,\n              y: dot.y,\n              category: 1,\n              color: d3.color ('#909090'),\n            });\n          }\n        });\n\n        return dd;\n      }\n      let groupOneDots = getSymbolColor (\n        d3.color (this.state.group1Color),\n        groupOneFP,\n        groupOneTP,\n        groupOneFN,\n        groupOneTN\n      );\n      let groupTwoDots = getSymbolColor (\n        d3.color (this.state.group2Color),\n        groupTwoFP,\n        groupTwoTP,\n        groupTwoFN,\n        groupTwoTN\n      );\n\n      svg\n        .append ('g')\n        .selectAll ('path')\n        .data (groupOneDots)\n        .join ('path')\n        .attr (\n          'transform',\n          d =>\n            `translate(${margin.left + width * 0.05 + d.x},${d.y}),rotate(45)`\n        )\n        .attr ('fill', d => d.color)\n        .attr (\n          'd',\n          d3\n            .symbol ()\n            .type (function (d) {\n              if (d.category === 0) {\n                return customCross;\n              } else {\n                return d3.symbolCircle;\n              }\n            })\n            .size (dotRadius * dotRadius * 1.5)\n        );\n\n      svg\n        .append ('g')\n        .selectAll ('path')\n        .data (groupTwoDots)\n        .join ('path')\n        .attr (\n          'transform',\n          d =>\n            `translate(${margin.left + width * 0.55 + d.x},${d.y}),rotate(45)`\n        )\n        .attr ('fill', d => d.color)\n        .attr (\n          'd',\n          d3\n            .symbol ()\n            .type (function (d) {\n              if (d.category === 0) {\n                return customCross;\n              } else {\n                return d3.symbolCircle;\n              }\n            })\n            .size (dotRadius * dotRadius * 1.5)\n        );\n    }\n  }\n\n  render () {\n    return (\n      <React.Fragment>\n        <div\n          ref={this.visualizationRef}\n          style={{\n            width: '55%',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        >\n\n          <div className=\"upperSettings\">\n\n            <Grid container spacing={0}>\n              <Grid item xs={9} className=\"modelOptions\">\n                <Typography component=\"div\" variant=\"subtitle2\">\n                  <Box>\n                    MODEL OPTIONS\n                  </Box>\n\n                </Typography>\n\n                <Grid container spacing={0} className=\"options\">\n                  <Grid item xs={6}>\n                    <Typography\n                      component=\"div\"\n                      style={{\n                        borderRight: '1px solid lightgrey',\n                        fontWeight: '500',\n                      }}\n                      variant=\"h6\"\n                      className=\"text\"\n                    >\n                      Damaging Model\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography\n                      style={{\n                        color: 'grey',\n                      }}\n                      component=\"div\"\n                      variant=\"h6\"\n                      className=\"text\"\n                    >\n                      GoodFaith Model\n                    </Typography>\n                  </Grid>\n\n                </Grid>\n              </Grid>\n              <Grid item xs={3} className=\"threshold\">\n                <div className=\"innerBox\">\n                  <Typography variant=\"subtitle2\">\n                    <Box>\n                      threshold\n                    </Box>\n\n                  </Typography>\n\n                  <Grid container spacing={2} className=\"options\">\n                    <Grid item xs={12}>\n                      <Typography component=\"div\" variant=\"h6\" className=\"text\">\n                        {this.state.threshold} %\n                      </Typography>\n                    </Grid>\n\n                  </Grid>\n                </div>\n\n              </Grid>\n            </Grid>\n          </div>\n\n          <div\n            style={{\n              marginLeft: `${this.state.sliderRange[0]}px`,\n              width: `${this.state.sliderRange[1] - this.state.sliderRange[0]}px`,\n            }}\n          >\n            <Typography variant=\"subtitle2\">Fairness in Groups</Typography>\n            <ThresholdSlider\n              defaultValue={60}\n              onChangeCommitted={this.onSliderChange}\n            />\n\n          </div>\n          <div className=\"compareChart\" ref={this.compareChartRef} />\n          <div\n            style={{\n              marginLeft: `${this.state.sliderRange[0]}px`,\n              width: `${this.state.sliderRange[1] - this.state.sliderRange[0]}px`,\n              transform: 'translate(0px,-20px)',\n            }}\n          >\n            <div\n              style={{\n                width: '50%',\n                display: 'inline-block',\n              }}\n            >\n              <Typography\n                variant=\"h6\"\n                component=\"div\"\n                style={{\n                  textAlign: 'center',\n                  color: `${this.state.group1Color}`,\n                }}\n              >\n                Newcomers' Edits\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                component=\"div\"\n                style={{textAlign: 'center'}}\n              >\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <Box width=\"80%\">\n                    Model performance on edits made by newcomer editors\n                  </Box>\n                </div>\n              </Typography>\n\n            </div>\n            <div\n              style={{\n                width: '50%',\n                display: 'inline-block',\n                // transform: 'translate(0,-10px)',\n              }}\n            >\n              <Typography\n                variant=\"h6\"\n                component=\"div\"\n                style={{\n                  textAlign: 'center',\n                  color: `${this.state.group2Color}`,\n                }}\n              >\n                Experienced Editors' Edits\n              </Typography>\n\n              <Typography\n                variant=\"body2\"\n                component=\"div\"\n                style={{textAlign: 'center'}}\n              >\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <Box width=\"80%\">\n                    Model performance on edits made by experienced editors\n                  </Box>\n                </div>\n              </Typography>\n\n            </div>\n            <div className=\"legendCard\">\n              <Typography component=\"div\" variant=\"subtitle2\">\n                legend\n              </Typography>\n              <Grid container spacing={0} style={{marginTop: '10px'}}>\n                <Grid item xs={6}>\n                  <div className=\"legendMark\">\n                    <Circle size={12} color=\"#909090\" />\n                    {' '}\n                    <Typography component=\"span\" variant=\"body2\">\n                      Correctly classified good edits\n                    </Typography>\n                  </div>\n\n                </Grid><Grid item xs={6}>\n                  <div className=\"legendMark\">\n                    <Circle size={12} color={this.state.group1Color} />\n                    <span style={{width: '2px'}} />\n                    <Circle size={12} color={this.state.group2Color} />\n                    {' '}\n                    <Typography component=\"span\" variant=\"body2\">\n                      Correctly classified damaging edits\n                    </Typography>\n                  </div>\n                </Grid>\n                <Grid item xs={6}>\n                  <div className=\"legendMark\">\n                    <Cross size={12} color=\"#909090\" />\n                    {' '}\n                    <Typography component=\"span\" variant=\"body2\">\n                      Uncaught damaging edits{' '}\n                    </Typography>\n                  </div>\n                </Grid><Grid item xs={6}>\n                  <div className=\"legendMark\">\n                    <Cross size={12} color={this.state.group1Color} />\n                    <span style={{width: '2px'}} />\n                    <Cross size={12} color={this.state.group2Color} />\n                    {' '}\n                    <Typography component=\"span\" variant=\"body2\">\n                      Misclassified good edits{' '}\n                    </Typography>\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"sidePanel\" id=\"comparePerformanceSidePanel\">\n          <div\n            className=\"overallPerformance\"\n            ref={this.wholePerformanceRef}\n            style={{borderBottom: '1px solid lightgrey'}}\n          >\n            <Typography component=\"div\" variant=\"subtitle2\">\n              PERFORMANCE\n            </Typography>\n            <Grid\n              container\n              className=\"performanceBlock\"\n              spacing={0}\n              style={{marginTop: '5px', textAlign: 'left', marginLeft: '0px'}}\n            >\n              <Grid item xs={4}>\n                <Typography component=\"div\" className=\"title\">\n                  ACC\n                </Typography>\n                <Typography component=\"div\">\n                  <Box className=\"data\">\n                    {(this.state.wholePerformance[0] * 100).toFixed (1)}%\n                  </Box>\n\n                </Typography>\n\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"div\" className=\"title\">\n                  FPR\n                </Typography>\n                <Typography component=\"div\">\n                  <Box className=\"data\">\n                    {(this.state.wholePerformance[1] * 100).toFixed (1)}%\n                  </Box>\n\n                </Typography>\n\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"div\" className=\"title\">\n                  FNR\n                </Typography>\n                <Typography component=\"div\">\n                  <Box className=\"data\">\n                    {(this.state.wholePerformance[2] * 100).toFixed (1)}%\n                  </Box>\n                </Typography>\n              </Grid>\n            </Grid>\n          </div>\n          <div style={{display: 'flex'}}>\n            <div\n              style={{\n                width: '40%',\n                display: 'inline-block',\n              }}\n              className=\"groupPerformance\"\n            >\n\n              {['Accuracy', 'FPR', 'FNR'].map ((value, index) => {\n                return (\n                  <div\n                    style={{\n                      height: `${this.getMargin ().blockHeight}px`,\n                      fontSize: '12px',\n                      transform: `translate(0px,7px)`,\n                    }}\n                  >\n                    <div\n                      style={{\n                        height: `${this.getMargin ().chartHeight}px`,\n                      }}\n                    />\n                    <div\n                      style={{\n                        height: `${this.getMargin ().chartHeight}px`,\n                        display: 'flex',\n                        flexDirection: 'column-reverse',\n                      }}\n                    >\n\n                      <Typography variant=\"body2\" className=\"classTitle\">\n                        {value}\n                      </Typography>\n\n                    </div>\n\n                    <div\n                      style={{\n                        height: `${this.getMargin ().chartHeight}px`,\n                        display: 'flex',\n                        flexDirection: 'column-reverse',\n                      }}\n                    >\n                      <div>\n                        <div className=\"title\">\n                          newcomer edits\n                        </div>\n                        <div\n                          className=\"data\"\n                          style={{color: this.state.group1Color}}\n                        >\n                          {this.state.groupOnePerformance === null\n                            ? '...'\n                            : (getPerformance (this.state.groupOnePerformance)[\n                                index\n                              ] * 100).toFixed (1) + '%'}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div\n                      style={{\n                        height: `${this.getMargin ().chartHeight}px`,\n                        display: 'flex',\n                        flexDirection: 'column-reverse',\n                      }}\n                    >\n                      <div>\n                        <div className=\"title\">\n                          experienced edits\n                        </div>\n                        <div\n                          className=\"data\"\n                          style={{color: this.state.group2Color}}\n                        >\n                          {this.state.groupTwoPerformance === null\n                            ? '...'\n                            : (getPerformance (this.state.groupTwoPerformance)[\n                                index\n                              ] * 100).toFixed (1) + '%'}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n            <div style={{width: '60%', display: 'inline-block'}}>\n              <div\n                className=\"comparePerformance\"\n                ref={this.comparePerformanceRef}\n              />\n            </div>\n          </div>\n\n        </div>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GroupCompareVisualizer;\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport data_balanced from '../../data/data_balanced_1.csv';\nimport GroupCompareVisualizer from './compare_visualizer';\n\nconst groupSliceNumber = 100;\nclass GroupCompareChart extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      anonData: null,\n      loggedData: null,\n      newcomerData: null,\n      experiencedData: null,\n      change: 0,\n    };\n  }\n\n  componentDidMount () {\n    d3\n      .csv (data_balanced, d => {\n        return {\n          anonymous: d.anonymous == 'TRUE' ? true : false,\n          newcomer: d.edit_years <= 8 ? true : false,\n          confidence_faith: +d.confidence_faith,\n          faith_label: d.goodfaith == 'TRUE' ? true : false,\n          confidence_damage: +d.confidence_damage,\n          damaging_label: d.damaging == 'TRUE' ? true : false,\n        };\n      })\n      .then (data => {\n        const anonData = data\n          .filter (d => {\n            return d.anonymous;\n          })\n          .slice (0, groupSliceNumber);\n        const loggedData = data\n          .filter (d => {\n            return !d.anonymous;\n          })\n          .slice (0, groupSliceNumber);\n\n        const newcomerData = data\n          .filter (d => {\n            return d.newcomer;\n          })\n          .slice (0, groupSliceNumber);\n\n        const experiencedData = data\n          .filter (d => {\n            return !d.newcomer;\n          })\n          .slice (0, groupSliceNumber);\n        this.setState ({\n          anonData: anonData,\n          loggedData: loggedData,\n          newcomerData: newcomerData,\n          experiencedData: experiencedData,\n        });\n\n        console.log (newcomerData);\n        console.log (experiencedData);\n        this.setState ({change: 2});\n      });\n  }\n\n  //   shouldComponentUpdate (nextProps, nextState) {\n  //     return true;\n  //   }\n\n  render () {\n    console.log ('hi');\n    console.log (this.props);\n    return (\n      <div style={{display: 'flex'}}>\n        {/* <Test data={this.state.data} key={this.state.change} /> */}\n        <GroupCompareVisualizer\n          groupOneData={this.state.newcomerData}\n          groupTwoData={this.state.experiencedData}\n          key={this.state.change}\n          performanceData={this.props.performanceData}\n          sliceNumber={groupSliceNumber}\n        />\n      </div>\n    );\n  }\n}\n\nexport default GroupCompareChart;\n","import React, {Component} from 'react';\nimport Chart from './threshold_explorer/threshold_explorer_section';\nimport GroupCompareChart from './group_compare/section';\nimport Typography from '@material-ui/core/Typography';\nimport data_performance from '../data/performance.csv';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\nimport {curveNatural} from 'd3';\n\nconst SectionHeader = styled.div`\n  padding-left: 10px;\n  margin-top: 55px;\n  padding-bottom: 30px;\n  border-bottom: 1px solid lightgrey;\n`;\n\nconst Section = styled.div`\n  display: block;\n  margin-bottom: 15vh;\n`;\n\nclass MainContent extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      performance_data: null,\n      change: 0,\n    };\n  }\n\n  componentDidMount () {\n    d3\n      .csv (data_performance, d => {\n        return {\n          threshold: +d.threshold,\n          damaging_accuracy: +d.damaging_accuracy,\n          damaging_fpr: +d.damaging_fpr,\n          damaging_fnr: +d.damaging_fnr,\n          faith_accuracy: +d.faith_accuracy,\n          faith_fpr: +d.faith_fpr,\n          faith_fnr: +d.faith_fnr,\n        };\n      })\n      .then (data => {\n        this.setState ({performance_data: data});\n        this.setState ({change: 1});\n      });\n  }\n\n  state = {};\n  render () {\n    return (\n      <React.Fragment>\n        {' '} <Section>\n\n          <SectionHeader>\n            <Typography variant=\"subtitle1\" style={{textAlign: 'left'}}>\n              Threshold Explorer\n            </Typography>\n            <div\n              style={{\n                width: '50%',\n                marginTop: '10px',\n              }}\n            >\n              <Typography variant=\"body2\" style={{color: 'grey'}}>\n                Threshold Explorer helps you visualize model performance under specific thresholds with an example dataset. To start, select a model below, then pick a threshold.\n                {' '}\n              </Typography>\n            </div>\n\n          </SectionHeader>\n\n          <Chart\n            performanceData={this.state.performance_data}\n            key={this.state.change}\n          />\n        </Section>\n        <Section>\n          <SectionHeader>\n            <Typography variant=\"subtitle1\" style={{textAlign: 'left'}}>\n              Disparity\n            </Typography>\n            <div\n              style={{\n                width: '50%',\n                marginTop: '10px',\n              }}\n            >\n              <Typography variant=\"body2\" style={{color: 'grey'}}>\n                Threshold Explorer helps you visualize model performance under specific thresholds with an example dataset. To start, select a model below, then pick a threshold.\n                {' '}\n              </Typography>\n            </div>\n          </SectionHeader>\n          <GroupCompareChart\n            performanceData={this.state.performance_data}\n            key={this.state.change}\n          />\n        </Section>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MainContent;\n","import React, {Component} from 'react';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport Box from '@material-ui/core/Box';\n\nclass DrawerList extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {selected: -1};\n    this.clickSection = this.clickSection.bind (this);\n  }\n\n  clickSection (index) {\n    this.setState ({selected: index});\n    console.log ('ha');\n    console.log (this.state.index);\n  }\n\n  render () {\n    return (\n      <List style={{marginTop: '10vh'}}>\n        {[\n          'About ORES',\n          'Threshold Explorer',\n          'Threshold Calculator',\n          'Disparity Visualizer',\n          'Feature Injection',\n        ].map ((text, index) => (\n          <ListItem\n            className={this.props.klass}\n            button\n            key={text}\n            onClick={() => this.clickSection (index)}\n          >\n            <div style={{width: '15%'}} />\n            <div style={{width: '85%'}}>\n              <Typography component=\"div\">\n                <Box\n                  className={\n                    this.state.selected === index\n                      ? 'active-section'\n                      : 'inactive-section'\n                  }\n                >\n                  {text}\n                </Box>\n              </Typography>\n            </div>\n\n          </ListItem>\n        ))}\n      </List>\n    );\n  }\n}\n\nexport default DrawerList;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport * as d3 from 'd3';\nimport Box from '@material-ui/core/Box';\nimport Chart from './components/threshold_explorer/threshold_explorer_section';\nimport Paper from '@material-ui/core/Paper';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport {createMuiTheme, responsiveFontSizes} from '@material-ui/core/styles';\nimport {ThemeProvider} from '@material-ui/styles';\nimport styled from 'styled-components';\nimport MainContent from './components/content';\nimport DrawerList from './partials/drawerList';\n\nconst SectionHeader = styled.div`\n  padding-left: 10px;\n  padding-top: 5px;\n  padding-bottom: 30px;\n  border-bottom: 1px solid lightgrey;\n`;\n\n// const PerformanceTitle = styled.h1`\n//   font-size: 1.1em;\n//   text-align: left;\n//   margin-bottom: 0px;\n//   font-weight: 800;\n// `;\n\nconst Section = styled.div`\n  display: block;\n  margin-bottom: 15vh;\n`;\n\nconst drawerWidth = 240;\n\nlet theme = createMuiTheme ({\n  typography: {\n    root: {\n      component: 'div',\n    },\n    fontFamily: 'Noto Sans KR',\n    subtitle1: {\n      fontFamily: 'Noto Serif',\n      fontSize: '24px',\n    },\n    subtitle2: {\n      fontSize: '12px',\n      marginTop: '10px',\n      color: '#B0B0B0',\n      fontWeight: 'bold',\n      textTransform: 'uppercase',\n      textAlign: 'left',\n    },\n    h6: {\n      fontWeight: 'bold',\n      fontSize: '16px',\n      textAlign: 'left',\n    },\n    body1: {\n      // textAlign: 'left',\n      fontSize: '14px',\n    },\n    body2: {\n      textAlign: 'left',\n      fontSize: '14px',\n    },\n    button: {\n      fontStyle: 'italic',\n    },\n  },\n});\n\ntheme = responsiveFontSizes (theme);\n\nconst useStyles = makeStyles (theme => ({\n  root: {\n    display: 'flex',\n    // fontFamily: 'Noto Sans, sans-serif',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    textAlign: 'center',\n    position: 'relative',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  paper: {\n    textAlign: 'left',\n    padding: '20px 20px',\n    marginTop: '35px',\n  },\n  list: {\n    fontSize: '16px',\n  },\n  // necessary for content to be below app bar\n  toolbar: {\n    padding: theme.spacing (2),\n  },\n  content: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: '0px 20px 20px 20px',\n  },\n}));\n\nfunction App () {\n  const classes = useStyles ();\n  return (\n    <ThemeProvider theme={theme}>\n\n      <div className=\"App\">\n        <body>\n          <div className={classes.root}>\n\n            <Drawer\n              className={classes.drawer}\n              variant=\"permanent\"\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              anchor=\"left\"\n            >\n              <Paper className={classes.paper} elevation=\"0\">\n                <div style={{textAlign: 'center'}}>\n                  <Typography variant=\"subtitle1\">\n                    WIKIPEDIA\n                  </Typography>\n                  <Typography style={{textAlign: 'center'}}>\n                    ORES Explorer\n                  </Typography>\n                </div>\n\n              </Paper>\n              <DrawerList klass={classes.list} />\n              <List\n                style={{position: 'absolute', bottom: '50px', width: '100%'}}\n              >\n                {[\n                  'About ORES Explorer',\n                  'External Resources',\n                ].map ((text, index) => (\n                  <ListItem className={classes.list} button key={text}>\n                    <div style={{width: '15%'}} />\n                    <div style={{width: '85%'}}>\n                      <Typography component=\"div\">\n                        <Box color=\"#989898\">\n                          {text}\n                        </Box>\n                      </Typography>\n                    </div>\n\n                  </ListItem>\n                ))}\n              </List>\n\n            </Drawer>\n            <main className={classes.content}>\n              <MainContent />\n\n            </main>\n          </div>\n        </body>\n\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render (\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById ('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister ();\n","module.exports = __webpack_public_path__ + \"static/media/performance.760a321c.csv\";","module.exports = __webpack_public_path__ + \"static/media/data_not-balanced.2c5d8911.csv\";","module.exports = __webpack_public_path__ + \"static/media/data_balanced_1.04b3e4eb.csv\";"],"sourceRoot":""}