{"version":3,"sources":["logo.svg","partials/slider.jsx","components/threshold_explorer/threshold_performance.jsx","components/threshold_explorer/threshold_explorer.jsx","components/threshold_explorer/threshold_explorer_section.js","components/group_compare/compare_visualizer.jsx","components/group_compare/section.jsx","App.js","serviceWorker.js","index.js","data/data_not-balanced.csv","data/performance.csv","data/data_group.csv"],"names":["module","exports","ThresholdeSlider","props","getText","value","state","bind","this","color","OrangeSlider","valueLabelDisplay","valueLabelFormat","aria-label","defaultValue","onChangeCommitted","BlackSlider","Component","makeStyles","theme","root","width","spacing","margin","height","withStyles","paddingTop","paddingBottom","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","fontSize","track","borderRadius","rail","opacity","Slider","ThresholdPerformance","chartPerformanceRef","React","createRef","getBoxHeight","getWidthHeightRatio","getMargin","getWidth","drawChart","redrawChart","threshold","current","parentElement","offsetWidth","top","right","bottom","inBetween","resizedFn","setState","window","addEventListener","clearTimeout","setTimeout","d3","remove","performance_data","dataCollection","map","d","Math","round","damaging_accuracy","damaging_fpr","damaging_fnr","eachHeight","svg","append","attr","getPerformanceColor","type","perform","getStrokeColor","preValue","currentValue","forEach","data","index","currentThreshold","x","domain","nice","range","y","getY","xAxis","g","call","tickSize","getXAxis","line","defined","isNaN","area","x1","x2","number","y0","y1","datum","filter","getAreaColor","style","text","ticks","Fragment","display","verticalAlign","className","ref","padding","flexDirection","justifyContent","marginBottom","Typography","variant","textAlign","ThresholdExplorer","onSliderChange","event","chartRef","widthHeightRatio","graph1Scale","dotWidth","sliderRange","sliderRight","diameter","dd","circles","xvalue","parseFloat","confidence_damage","toFixed","ceil","correct","damaging_label","damaging_predict","sort","a","b","ca","prev","cnt","abs","category","dodge","shape","s","size","selectAll","join","borderBottom","paddingLeft","borderLeft","key","Chart","change","data_balanced","confidence_faith","faith_label","goodfaith","damaging","then","slice","data_performance","faith_accuracy","faith_fpr","faith_fnr","nextProps","nextState","GroupCompareVisualizer","compareChartRef","group1Color","group2Color","customCross","draw","context","sqrt","w","moveTo","lineTo","closePath","groupSize","anonData","loggedData","getSymbolColor","fp","tp","fn","tn","cp","dots","dot","push","anonFP","length","anonTP","anonFN","logFP","logTP","logFN","dotData","sum","children","sliceNumber","r","centerX","centerY","pow","dotRadius","anonDots","logDots","transform","Box","GroupCompareChart","anonymous","SectionHeader","styled","div","Section","createMuiTheme","typography","fontFamily","subtitle1","subtitle2","fontWeight","textTransform","h6","body1","body2","button","fontStyle","useStyles","appBar","drawer","flexShrink","drawerPaper","paper","list","toolbar","content","flexGrow","palette","background","default","App","classes","ThemeProvider","Drawer","anchor","Paper","elevation","List","ListItem","ListItemText","primary","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.79dbbc9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles, makeStyles} from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nclass ThresholdeSlider extends Component {\n  constructor (props) {\n    super (props);\n    this.getText = this.getText.bind (this);\n  }\n\n  getText = value => {\n    return `${value}%`;\n  };\n\n  state = {};\n  render () {\n    // const classes = useStyles ();\n\n    return (\n      <div>\n        {this.props.color === 'orange'\n          ? <OrangeSlider\n              valueLabelDisplay=\"auto\"\n              valueLabelFormat={this.getText}\n              aria-label=\"pretto slider\"\n              defaultValue={this.props.defaultValue}\n              onChangeCommitted={this.props.onChangeCommitted}\n            />\n          : <BlackSlider\n              valueLabelDisplay=\"auto\"\n              valueLabelFormat={this.getText}\n              aria-label=\"pretto slider\"\n              defaultValue={this.props.defaultValue}\n              onChangeCommitted={this.props.onChangeCommitted}\n            />}\n      </div>\n    );\n  }\n}\n\nexport default ThresholdeSlider;\n\nconst useStyles = makeStyles (theme => ({\n  root: {\n    width: 300 + theme.spacing (3) * 2,\n  },\n  margin: {\n    height: theme.spacing (3),\n  },\n}));\n\nconst OrangeSlider = withStyles ({\n  root: {\n    color: '#C57619',\n    height: 10,\n    paddingTop: '50px',\n    paddingBottom: '0px',\n  },\n  thumb: {\n    height: 18,\n    width: 18,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -9,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50%+12px)',\n    fontSize: '16px',\n  },\n  track: {\n    height: 4,\n    borderRadius: 4,\n    color: '#909090',\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4,\n    color: '#C57619',\n    opacity: '100%',\n  },\n}) (Slider);\n\nconst BlackSlider = withStyles ({\n  root: {\n    color: '#000000',\n    height: 10,\n    paddingTop: '50px',\n    paddingBottom: '0px',\n  },\n  thumb: {\n    height: 18,\n    width: 18,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -9,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50%+12px)',\n  },\n  track: {\n    height: 4,\n    borderRadius: 4,\n    color: '#909090',\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4,\n    color: '#000000',\n    opacity: '100%',\n  },\n}) (Slider);\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport styled from 'styled-components';\n\n// const PerformanceTitle = styled.h1`\n//   font-size: 1.1em;\n//   text-align: left;\n//   margin-bottom: 0px;\n//   font-weight: 800;\n// `;\n\n// const PerformanceText = styled.p`\n//   font-size: 1em;\n//   text-align: left;\n//   margin-top: 5px;\n//   color: black;\n// `;\n\nclass ThresholdPerformance extends Component {\n  constructor (props) {\n    super (props);\n    this.chartPerformanceRef = React.createRef ();\n    this.getBoxHeight = this.getBoxHeight.bind (this);\n    this.getWidthHeightRatio = this.getWidthHeightRatio.bind (this);\n    this.getMargin = this.getMargin.bind (this);\n    this.getWidth = this.getWidth.bind (this);\n    this.drawChart = this.drawChart.bind (this);\n    this.redrawChart = this.redrawChart.bind (this);\n    this.state = {\n      threshold: 80,\n      width: 1000,\n      height: 1000,\n    };\n  }\n\n  getWidthHeightRatio () {\n    return 2;\n  }\n\n  getWidth () {\n    if (this.chartPerformanceRef.current == null) {\n      return this.state.width;\n    } else {\n      return this.chartPerformanceRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  getMargin () {\n    return {\n      top: 20,\n      right: 5,\n      bottom: 20,\n      left: 30,\n      inBetween: this.state.width * 0.2,\n    };\n  }\n  componentDidMount () {\n    let width = this.getWidth ();\n    let height = width * this.getWidthHeightRatio ();\n\n    this.setState (\n      {\n        width: width,\n        height: height,\n      },\n      () => {\n        this.drawChart ();\n      }\n    );\n\n    let resizedFn;\n    window.addEventListener ('resize', () => {\n      clearTimeout (resizedFn);\n      resizedFn = setTimeout (() => {\n        this.redrawChart ();\n      }, 200);\n    });\n  }\n\n  redrawChart () {\n    let width = this.getWidth ();\n    this.setState ({width: width, height: width * this.getWidthHeightRatio ()});\n    d3.select ('.performanceChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n  }\n\n  drawChart () {\n    if (this.props.performance_data != null) {\n      const dataAccuracy = this.props.performance_data.map (d => ({\n        threshold: d.threshold,\n        value: Math.round (d.damaging_accuracy * 100),\n      }));\n\n      const dataFPR = this.props.performance_data.map (d => ({\n        threshold: d.threshold,\n        value: Math.round (d.damaging_fpr * 100),\n      }));\n\n      const dataFNR = this.props.performance_data.map (d => ({\n        threshold: d.threshold,\n        value: Math.round (d.damaging_fnr * 100),\n      }));\n\n      const dataCollection = [dataAccuracy, dataFPR, dataFNR];\n\n      const margin = this.getMargin ();\n      let width = this.state.width - margin.left - margin.right;\n      let height = this.state.height - margin.top - margin.bottom;\n      let eachHeight = (height - margin.inBetween * 2) / 3;\n\n      const betweenThreshold = (x1, x2, number) => {\n        return (number >= x1 && number <= x2) || (number <= x1 && number >= x2);\n      };\n\n      //   const xAxis = g =>\n      //     g\n      //       .attr ('transform', `translate(0,${height / 2})`)\n      //       .call (d3.axisBottom (x).ticks (width / 80).tickSizeOuter (0));\n\n      const getXAxis = (x, type) => {\n        switch (type) {\n          case 0:\n            return function (g) {\n              g\n                .attr ('transform', `translate(0,${eachHeight + margin.top})`)\n                .attr ('class', 'axisGreyY')\n                .call (d3.axisBottom (x).tickSize (0));\n            };\n            break;\n          case 1:\n            return function (g) {\n              g\n                .attr (\n                  'transform',\n                  `translate(0,${eachHeight * 2 + margin.inBetween + margin.top})`\n                )\n                .attr ('class', 'axisGreyY')\n                .call (d3.axisBottom (x).tickSize (0));\n            };\n            break;\n          default:\n            return function (g) {\n              g\n                .attr ('transform', `translate(0,${height + margin.top})`)\n                .attr ('class', 'axisGreyY')\n                .call (d3.axisBottom (x).tickSize (0));\n            };\n        }\n      };\n\n      //   const y = d3\n      //     .scaleLinear ()\n      //     .domain ([0, d3.max (data, d => d.value)])\n      //     .nice ()\n      //     .range ([height / 2, margin.top]);\n\n      const getY = type => {\n        switch (type) {\n          case 0:\n            return d3\n              .scaleLinear ()\n              .domain ([0, d3.max (dataCollection[0], d => d.value)])\n              .nice ()\n              .range ([eachHeight + margin.top, margin.top]);\n            break;\n          case 1:\n            return d3\n              .scaleLinear ()\n              .domain ([0, d3.max (dataCollection[1], d => d.value)])\n              .nice ()\n              .range ([\n                eachHeight * 2 + margin.inBetween + margin.top,\n                eachHeight + margin.inBetween + margin.top,\n              ]);\n            break;\n          default:\n            return d3\n              .scaleLinear ()\n              .domain ([0, d3.max (dataCollection[2], d => d.value)])\n              .nice ()\n              .range ([\n                height + margin.top,\n                eachHeight * 2 + margin.inBetween * 2 + margin.top,\n              ]);\n        }\n      };\n\n      let svg = d3\n        .select ('.performanceChart')\n        .append ('svg')\n        .attr ('width', width + margin.left + margin.right)\n        .attr ('height', height + margin.top + margin.bottom);\n\n      const getPerformanceColor = (type, perform) => {\n        if (type == 'stroke') {\n          //color for stroke\n          if (perform == 1) {\n            return d3.color ('#159256');\n          } else if (perform == 0) {\n            return d3.color ('#878787');\n          } else {\n            return d3.color ('#921515');\n          }\n        } else {\n          //color for area\n          if (perform == 1) {\n            return d3.color ('#F0F7F4');\n          } else if (perform == 0) {\n            return d3.color ('#E8E8E8');\n          } else {\n            return d3.color ('#F7F0F0');\n          }\n        }\n      };\n\n      const getAreaColor = (type, preValue, currentValue) => {\n        if (type == 0) {\n          //accuracy -> the higher the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor ('area', 1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor ('area', -1);\n          } else {\n            return getPerformanceColor ('area', 0);\n          }\n        } else {\n          //FPR, FNR -> the lower the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor ('area', -1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor ('area', 1);\n          } else {\n            return getPerformanceColor ('area', 0);\n          }\n        }\n      };\n\n      const getStrokeColor = (type, preValue, currentValue) => {\n        if (type == 0) {\n          //accuracy -> the higher the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor ('stroke', 1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor ('stroke', -1);\n          } else {\n            return getPerformanceColor ('stroke', 0);\n          }\n        } else {\n          //FPR, FNR -> the lower the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor ('stroke', -1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor ('stroke', 1);\n          } else {\n            return getPerformanceColor ('stroke', 0);\n          }\n        }\n      };\n\n      dataCollection.forEach ((data, index) => {\n        const defaultValue = data[50].value;\n        const currentValue = data[this.props.threshold].value;\n        const currentThreshold = this.props.threshold;\n        const x = d3\n          .scaleLinear ()\n          .domain ([0, d3.max (data, d => d.threshold)])\n          .nice ()\n          .range ([margin.left, width - margin.right]);\n\n        const y = getY (index);\n        const xAxis = getXAxis (x, index);\n\n        const yAxis = g =>\n          g\n            .attr ('transform', `translate(${margin.left},0)`)\n            .attr ('class', 'axisGrey')\n            .call (d3.axisLeft (y).ticks (2));\n\n        const line = d3\n          .line ()\n          .defined (d => !isNaN (d.value))\n          .x (d => x (d.threshold))\n          .y (d => y (d.value));\n\n        const area = d3\n          .area ()\n          .defined (d =>\n            betweenThreshold (0.5, currentThreshold * 0.01, d.threshold)\n          )\n          .x (d => x (d.threshold))\n          .y0 (y (0))\n          .y1 (d => y (d.value));\n\n        svg\n          .append ('path')\n          .datum (data.filter (area.defined ()))\n          .attr ('fill', getAreaColor (index, defaultValue, currentValue))\n          .attr ('d', area);\n\n        svg\n          .append ('path')\n          .datum (data)\n          .attr ('fill', 'none')\n          .attr ('stroke', 'grey')\n          .attr ('stroke-width', 1.5)\n          .attr ('stroke-linejoin', 'round')\n          .attr ('stroke-linecap', 'round')\n          .attr ('d', line);\n\n        svg\n          .append ('line')\n          .attr ('x1', x (currentThreshold * 0.01))\n          .attr ('y1', y (currentValue))\n          .attr ('x2', x (currentThreshold * 0.01))\n          .attr (\n            'y2',\n            margin.top + index * margin.inBetween + (index + 1) * eachHeight\n          )\n          .attr ('stroke-width', 2)\n          .attr ('stroke', getStrokeColor (index, defaultValue, currentValue))\n          .style ('stroke-dasharray', '5,5');\n\n        svg\n          .append ('text')\n          .attr ('x', x (currentThreshold * 0.01))\n          .attr ('y', y (currentValue + 8))\n          .attr ('text-anchor', 'middle')\n          .text (`${currentValue}%`)\n          .attr ('font-family', 'sans-serif')\n          .attr ('font-size', '16px')\n          .attr ('fill', getStrokeColor (index, defaultValue, currentValue));\n\n        svg.append ('g').call (xAxis);\n\n        svg.append ('g').call (yAxis);\n      });\n    }\n  }\n\n  getBoxHeight () {\n    const margin = this.getMargin ();\n    return (\n      (this.state.height - margin.top - margin.bottom - margin.inBetween * 2) /\n      3\n    );\n  }\n\n  render () {\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            width: '50%',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        >\n          <div\n            style={{marginTop: '20px'}}\n            className=\"performanceChart\"\n            ref={this.chartPerformanceRef}\n          />\n        </div>\n        <div\n          style={{\n            width: '40%',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        >\n          <div\n            style={{\n              height: `${this.getBoxHeight ()}px`,\n              padding: '0% 5%',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              marginTop: `${this.getMargin ().top + 20}px`,\n              marginBottom: `${this.getMargin ().inBetween}px`,\n            }}\n          >\n            <div>\n              <Typography variant=\"h6\" textAlign=\"center\">\n                Accuracy{' '}\n              </Typography>\n              <Typography variant=\"body2\">\n                Correctly predicted edits out of all edits{' '}\n              </Typography>\n            </div>\n\n          </div>\n\n          <div\n            style={{\n              height: `${this.getBoxHeight ()}px`,\n              padding: '0% 5%',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              marginBottom: `${this.getMargin ().inBetween}px`,\n            }}\n          >\n            <div>\n              <Typography variant=\"h6\" textAlign=\"center\">\n                False Positive Rate\n              </Typography>\n              <Typography variant=\"body2\">\n                Percentage of good edits that are falsely identified as damaing\n                {' '}\n              </Typography>\n            </div>\n          </div>\n\n          <div\n            style={{\n              height: `${this.getBoxHeight ()}px`,\n              padding: '0% 5%',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n            }}\n          >\n            <div>\n              <Typography variant=\"h6\" textAlign=\"center\">\n                False Negative Rate\n              </Typography>\n              <Typography variant=\"body2\">\n                Percentage of damaing edits that won’t be identified {' '}\n              </Typography>\n            </div>\n\n          </div>\n\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ThresholdPerformance;\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport ThresholdSlider from '../../partials/slider';\nimport ThresholdPerformance from './threshold_performance';\nimport Typography from '@material-ui/core/Typography';\n\nclass ThresholdExplorer extends Component {\n  constructor (props) {\n    super (props);\n    this.chartRef = React.createRef ();\n    this.getWidth = this.getWidth.bind (this);\n    this.drawChart = this.drawChart.bind (this);\n    this.redrawChart = this.redrawChart.bind (this);\n    this.state = {\n      threshold: 60,\n      width: 1000,\n      height: 1000,\n      widthHeightRatio: 0.8,\n      graph1Scale: 1,\n      dotWidth: 0,\n      sliderRange: [20, 1000],\n    };\n  }\n\n  getWidth () {\n    if (this.chartRef.current == null) {\n      return this.state.width;\n    } else {\n      return this.chartRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  onSliderChange = (event, threshold) => {\n    this.setState ({\n      threshold: threshold,\n    });\n    d3.select ('.rowChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n  };\n\n  componentDidMount () {\n    let width = this.getWidth ();\n    let height = width * 0.8;\n    let sliderRight = width - 30;\n\n    this.setState (\n      {\n        width: width,\n        height: height,\n        sliderRange: [10, sliderRight],\n      },\n      () => {\n        this.drawChart ();\n      }\n    );\n\n    let resizedFn;\n    window.addEventListener ('resize', () => {\n      clearTimeout (resizedFn);\n      resizedFn = setTimeout (() => {\n        this.redrawChart ();\n      }, 200);\n    });\n  }\n\n  redrawChart () {\n    let width = this.getWidth ();\n    let sliderRight = width - 30;\n    this.setState ({\n      width: width,\n      height: width * 0.8,\n      sliderRange: [10, sliderRight],\n    });\n    d3.select ('.rowChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n  }\n\n  drawChart () {\n    const margin = {top: 0, right: 30, bottom: 30, left: 10};\n    let width = this.state.width - margin.left - margin.right;\n    let height = this.state.height - margin.top - margin.bottom;\n    // append the svg object to the body of the page\n    let svg = d3\n      .select ('.rowChart')\n      .append ('svg')\n      .attr ('width', width + margin.left + margin.right)\n      .attr ('height', height + margin.top + margin.bottom);\n\n    const threshold = this.state.threshold / 100;\n    const graph1Scale = 1;\n\n    const diameter = width * graph1Scale / 50;\n    const dotWidth = diameter * 0.5;\n    if (this.props.data != null) {\n      const dd = dodge (threshold, this.props.data, diameter);\n\n      const xAxis = g =>\n        g\n          .attr ('transform', `translate(0,${margin.top})`)\n          .call (d3.axisTop (x).ticks (0));\n\n      const x = d3\n        .scaleLinear ()\n        .domain ([0, 1])\n        .nice ()\n        .range ([margin.left, width + margin.left]);\n\n      const shape = d3.scaleOrdinal (\n        dd.map (d => d.category),\n        d3.symbols.map (s =>\n          d3.symbol ().size (diameter * diameter * 0.4).type (s) ()\n        )\n      );\n\n      function dodge (threshold, data, diameter) {\n        const circles = data\n          .map (d => ({\n            xvalue: parseFloat (d.confidence_damage).toFixed (2),\n            x: 0.02 *\n              Math.ceil (parseFloat (d.confidence_damage).toFixed (2) * 50),\n\n            correct: parseFloat (d.confidence_damage).toFixed (2) >=\n              threshold ==\n              d.damaging_label,\n            damaging_predict: parseFloat (d.confidence_damage).toFixed (2) >=\n              threshold,\n            damaging_label: d.damaging_label,\n          }))\n          .sort (function (a, b) {\n            if (a.x == b.x) {\n              let ca = a.correct ? 1 : 0;\n              let cb = b.correct ? 1 : 0;\n              return cb - ca;\n            } else {\n              return b.x - a.x;\n            }\n          });\n        const epsilon = 1e-4;\n\n        let prev = 100;\n        let cnt = 1;\n\n        for (const b of circles) {\n          //determine the position of the dot\n          if (Math.abs (prev - b.x) < epsilon) {\n            // belongs to the same col\n            cnt += 1;\n            b.y = diameter * cnt;\n          } else {\n            prev = b.x;\n            cnt = 1;\n            b.y = diameter;\n          }\n\n          if (b.correct) {\n            b.category = 'circle';\n          } else {\n            b.category = 'cross';\n          }\n\n          if (b.damaging_predict) {\n            b.color = d3.color ('#C57619');\n          } else {\n            b.color = d3.color ('#909090');\n          }\n        }\n\n        return circles;\n      }\n\n      // svg.append ('g').call (xAxis);\n\n      svg\n        .append ('line')\n        .attr ('x1', width + margin.left - dotWidth * 100 * (1 - threshold))\n        .attr ('y1', margin.top)\n        .attr ('x2', width + margin.left - dotWidth * 100 * (1 - threshold))\n        .attr ('y2', height - 30)\n        .attr ('stroke-width', 2)\n        .attr ('stroke', 'black')\n        .style ('stroke-dasharray', '5,5');\n\n      svg\n        .append ('text')\n        .attr ('x', width + margin.left - dotWidth * 100 * (1 - threshold))\n        .attr ('y', height - 15)\n        .attr ('text-anchor', 'middle')\n        .text (threshold)\n        .attr ('font-family', 'sans-serif')\n        .attr ('font-size', '15px');\n\n      svg\n        .append ('g')\n        .selectAll ('path')\n        .data (dd)\n        .join ('path')\n        .attr (\n          'transform',\n          d => `translate(${x (d.x)},${d.y + margin.top}), rotate(45)`\n        )\n        .attr ('fill', function (d) {\n          return d.color;\n        })\n        .attr ('d', d => shape (d.category));\n    }\n  }\n\n  // shouldComponentUpdate (nextProps, nextState) {\n  //   return (\n  //     this.props.performance_data !== nextProps.performance_data ||\n  //     this.state != nextState\n  //   );\n  // }\n\n  render () {\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            width: '52%',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        >\n          <div\n            style={{\n              borderBottom: '1px solid lightgrey',\n              height: '50px',\n              paddingLeft: '10px',\n            }}\n          >\n            <Typography variant=\"subtitle2\">MODEL OPTIONS</Typography>\n          </div>\n          <div\n            style={{\n              marginLeft: `${this.state.sliderRange[0]}px`,\n              width: `${this.state.sliderRange[1] - this.state.sliderRange[0]}px`,\n            }}\n          >\n            <ThresholdSlider\n              defaultValue={60}\n              onChangeCommitted={this.onSliderChange}\n              color={'orange'}\n            />\n\n          </div>\n          <div className=\"rowChart\" ref={this.chartRef} />\n        </div>\n\n        <div\n          style={{\n            width: '43%',\n            paddingLeft: '2%',\n\n            borderLeft: '1px solid lightgrey',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        >\n          <ThresholdPerformance\n            performance_data={this.props.performance_data}\n            threshold={this.state.threshold}\n            key={this.state.threshold}\n          />\n        </div>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ThresholdExplorer;\n","import React, {Component} from 'react';\nimport ThresholdExplorer from './threshold_explorer';\nimport * as d3 from 'd3';\nimport data_balanced from '../../data/data_not-balanced.csv';\nimport data_performance from '../../data/performance.csv';\n\nclass Chart extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      data: null,\n      change: 0,\n    };\n  }\n\n  componentDidMount () {\n    d3\n      .csv (data_balanced, d => {\n        return {\n          confidence_faith: d.confidence_faith,\n          faith_label: d.goodfaith == 'True' ? true : false,\n          confidence_damage: +d.confidence_damage,\n          damaging_label: d.damaging == 'True' ? true : false,\n        };\n      })\n      .then (data => {\n        this.setState ({data: data.slice (0, 2000)});\n        this.setState ({change: 2});\n        d3\n          .csv (data_performance, d => {\n            return {\n              threshold: +d.threshold,\n              damaging_accuracy: +d.damaging_accuracy,\n              damaging_fpr: +d.damaging_fpr,\n              damaging_fnr: +d.damaging_fnr,\n              faith_accuracy: +d.faith_accuracy,\n              faith_fpr: +d.faith_fpr,\n              faith_fnr: +d.faith_fnr,\n            };\n          })\n          .then (data => {\n            this.setState ({performance_data: data});\n            this.setState ({change: 3});\n          });\n      });\n  }\n\n  shouldComponentUpdate (nextProps, nextState) {\n    return true;\n  }\n\n  render () {\n    return (\n      <div style={{display: 'flex'}}>\n        {/* <Test data={this.state.data} key={this.state.change} /> */}\n        <ThresholdExplorer\n          data={this.state.data}\n          performance_data={this.state.performance_data}\n          key={this.state.change}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport dotData from '../../data/new.json';\nimport ThresholdSlider from '../../partials/slider';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nclass GroupCompareVisualizer extends Component {\n  constructor (props) {\n    super (props);\n\n    this.compareChartRef = React.createRef ();\n    this.getWidth = this.getWidth.bind (this);\n    this.drawChart = this.drawChart.bind (this);\n    this.redrawChart = this.redrawChart.bind (this);\n    this.state = {\n      threshold: 60,\n      width: 1000,\n      height: 1000,\n      group1Color: '#C57619',\n      group2Color: '#3777A5',\n      sliderRange: [20, 1000],\n    };\n  }\n\n  getWidth () {\n    if (this.compareChartRef.current === null) {\n      return this.state.width;\n    } else {\n      return this.compareChartRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  onSliderChange = (event, threshold) => {\n    this.setState ({\n      threshold: threshold,\n    });\n    this.redrawChart ();\n  };\n\n  componentDidMount () {\n    let width = this.getWidth ();\n    let height = (width - 60) * 0.5;\n    let sliderRight = width - 30;\n\n    this.setState (\n      {\n        width: width,\n        height: height,\n        sliderRange: [10, sliderRight],\n      },\n      () => {\n        this.drawChart ();\n      }\n    );\n\n    let resizedFn;\n    window.addEventListener ('resize', () => {\n      clearTimeout (resizedFn);\n      resizedFn = setTimeout (() => {\n        this.redrawChart ();\n      }, 200);\n    });\n  }\n\n  redrawChart () {\n    let width = this.getWidth ();\n    let sliderRight = width - 30;\n    this.setState ({\n      width: width,\n      height: (width - 60) * 0.5,\n      sliderRange: [10, sliderRight],\n    });\n    d3.select ('.compareChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n  }\n\n  drawChart () {\n    const margin = {top: 0, right: 20, bottom: 0, left: 0};\n    let width = this.state.width - margin.left - margin.right;\n    let height = width / 2;\n    // append the svg object to the body of the page\n    let svg = d3\n      .select ('.compareChart')\n      .append ('svg')\n      .attr ('width', width + margin.left + margin.right)\n      .attr ('height', height);\n\n    var customCross = {\n      draw: function (context, size) {\n        let s = Math.sqrt (size * 2) / 2;\n        let w = Math.sqrt (size) / 6;\n        context.moveTo (-s, w);\n        context.lineTo (s, w);\n        context.lineTo (s, -w);\n        context.lineTo (-s, -w);\n        context.closePath ();\n        context.moveTo (w, s);\n        context.lineTo (w, -s);\n        context.lineTo (-w, -s);\n        context.lineTo (-w, s);\n        context.closePath ();\n      },\n    };\n\n    const groupSize = width / 2;\n\n    const pack = data =>\n      d3.pack ().size ([groupSize - 2, groupSize - 2]).padding (3) (\n        d3\n          .hierarchy (data)\n          .sum (d => d.value)\n          .sort ((a, b) => b.value - a.value)\n      );\n\n    const threshold = this.state.threshold * 0.01;\n\n    const app = this;\n\n    if (this.props.anonData != null && this.props.loggedData != null) {\n      const anonFP = this.props.anonData.filter (function (d) {\n        return d.confidence_damage >= threshold && !d.damaging_label;\n      }).length;\n\n      const anonTP = this.props.anonData.filter (function (d) {\n        return d.confidence_damage >= threshold && d.damaging_label;\n      }).length;\n\n      const anonFN = this.props.anonData.filter (function (d) {\n        return d.confidence_damage < threshold && d.damaging_label;\n      }).length;\n\n      const anonTN = this.props.anonData.filter (function (d) {\n        return d.confidence_damage < threshold && !d.damaging_label;\n      }).length;\n\n      const logFP = this.props.loggedData.filter (function (d) {\n        return d.confidence_damage >= threshold && !d.damaging_label;\n      }).length;\n\n      const logTP = this.props.loggedData.filter (function (d) {\n        return d.confidence_damage >= threshold && d.damaging_label;\n      }).length;\n\n      const logFN = this.props.loggedData.filter (function (d) {\n        return d.confidence_damage < threshold && d.damaging_label;\n      }).length;\n\n      const logTN = this.props.loggedData.filter (function (d) {\n        return d.confidence_damage < threshold && !d.damaging_label;\n      }).length;\n\n      const dots = pack (dotData).children\n        .slice (0, this.props.sliceNumber)\n        .map (d => ({\n          x: d.x,\n          y: d.y,\n          r: d.r,\n          category: 'cross',\n        }))\n        .sort (function (a, b) {\n          const centerX = margin.left + height;\n          const centerY = height / 2 + margin.top;\n          const distA = Math.sqrt (\n            Math.pow (a.x - centerX, 2) + Math.pow (a.y - centerY, 2)\n          );\n          const distB = Math.sqrt (\n            Math.pow (b.x - centerX, 2) + Math.pow (b.y - centerY, 2)\n          );\n          return distA - distB;\n        });\n\n      const dotRadius = dots[0].r;\n\n      function getSymbolColor (color, fp, tp, fn, tn) {\n        let dd = [];\n        const cp = [fp, fp + tp, fp + tp + fn];\n        dots.forEach (function (dot, index) {\n          if (index < cp[0]) {\n            dd.push ({\n              //false positive\n              x: dot.x,\n              y: dot.y,\n              category: 0,\n              color: color,\n            });\n          } else if (index >= cp[0] && index < cp[1]) {\n            dd.push ({\n              //true positive\n              x: dot.x,\n              y: dot.y,\n              category: 1,\n              color: color,\n            });\n          } else if (index >= cp[1] && index < cp[2]) {\n            dd.push ({\n              //false negative\n              x: dot.x,\n              y: dot.y,\n              category: 0,\n              color: d3.color ('#909090'),\n            });\n          } else {\n            dd.push ({\n              //false positive\n              x: dot.x,\n              y: dot.y,\n              category: 1,\n              color: d3.color ('#909090'),\n            });\n          }\n        });\n\n        return dd;\n      }\n      let anonDots = getSymbolColor (\n        d3.color (this.state.group1Color),\n        anonFP,\n        anonTP,\n        anonFN,\n        anonTN\n      );\n      let logDots = getSymbolColor (\n        d3.color (this.state.group2Color),\n        logFP,\n        logTP,\n        logFN,\n        logTN\n      );\n\n      svg\n        .append ('g')\n        .selectAll ('path')\n        .data (anonDots)\n        .join ('path')\n        .attr (\n          'transform',\n          d => `translate(${margin.left + d.x},${d.y}),rotate(45)`\n        )\n        .attr ('fill', d => d.color)\n        .attr (\n          'd',\n          d3\n            .symbol ()\n            .type (function (d) {\n              if (d.category == 0) {\n                return customCross;\n              } else {\n                return d3.symbolCircle;\n              }\n            })\n            .size (dotRadius * dotRadius * 1.5)\n        );\n      // var symbol = d3.symbol ();\n\n      // var dotD = svg\n      //   .selectAll ('.shapes')\n      //   .data (anonDots)\n      //   .enter ()\n      //   .append ('path');\n\n      // dotD\n      //   .attr ('d', d => getSymbol (d.category))\n      //   .attr ('fill', d => d.color)\n      //   .attr ('transform', d => `translate(${d.x},${d.y}),rotate(45)`);\n      svg\n        .append ('g')\n        .selectAll ('path')\n        .data (logDots)\n        .join ('path')\n        .attr (\n          'transform',\n          d => `translate(${margin.left + width / 2 + d.x},${d.y}),rotate(45)`\n        )\n        .attr ('fill', d => d.color)\n        .attr (\n          'd',\n          d3\n            .symbol ()\n            .type (function (d) {\n              if (d.category == 0) {\n                return customCross;\n              } else {\n                return d3.symbolCircle;\n              }\n            })\n            .size (dotRadius * dotRadius * 1.5)\n        );\n      // svg\n      //   .append ('g')\n      //   .selectAll ('path')\n      //   .data (dots)\n      //   .join ('path')\n      //   .attr (\n      //     'transform',\n      //     d => `translate(${width / 2 + d.x},${d.y}),rotate(45)`\n      //   )\n      //   .attr ('fill', 'blue')\n      //   .attr ('d', d => shape ('cross'));\n    }\n  }\n\n  // shouldComponentUpdate (nextProps, nextState) {\n  //   return (\n  //     this.props.performance_data !=== nextProps.performance_data ||\n  //     this.state != nextState\n  //   );\n  // }\n\n  render () {\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            width: '52%',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        >\n          <div\n            style={{\n              borderBottom: '1px solid lightgrey',\n              height: '50px',\n              paddingLeft: '10px',\n            }}\n          >\n            <Typography variant=\"subtitle2\">MODEL OPTIONS</Typography>\n          </div>\n          <div\n            style={{\n              marginLeft: `${this.state.sliderRange[0]}px`,\n              width: `${this.state.sliderRange[1] - this.state.sliderRange[0]}px`,\n            }}\n          >\n            <ThresholdSlider\n              defaultValue={60}\n              onChangeCommitted={this.onSliderChange}\n            />\n\n          </div>\n          <div className=\"compareChart\" ref={this.compareChartRef} />\n          <div\n            style={{\n              marginLeft: `${this.state.sliderRange[0]}px`,\n              width: `${this.state.sliderRange[1] - this.state.sliderRange[0]}px`,\n              transform: 'translate(0px,-20px)',\n            }}\n          >\n            <div\n              style={{\n                width: '50%',\n                display: 'inline-block',\n                transform: 'translate(0,-10px)',\n              }}\n            >\n              <Typography\n                variant=\"h6\"\n                style={{\n                  textAlign: 'center',\n                  color: `${this.state.group1Color}`,\n                }}\n              >\n                Anonymous Edits\n              </Typography>\n              <Typography variant=\"body2\" style={{textAlign: 'center'}}>\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <Box width=\"80%\">\n                    Model performance on edits made by anonymous IP users\n                  </Box>\n                </div>\n              </Typography>\n\n            </div>\n            <div\n              style={{\n                width: '50%',\n                display: 'inline-block',\n                transform: 'translate(0,-10px)',\n              }}\n            >\n              <Typography\n                variant=\"h6\"\n                style={{\n                  textAlign: 'center',\n                  color: `${this.state.group2Color}`,\n                }}\n              >\n                Logged-in Edits\n              </Typography>\n\n              <Typography variant=\"body2\" style={{textAlign: 'center'}}>\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <Box width=\"80%\">\n                    Model performance on edits made by logged-in editors\n                  </Box>\n                </div>\n              </Typography>\n\n            </div>\n          </div>\n        </div>\n\n        <div\n          style={{\n            width: '43%',\n            paddingLeft: '2%',\n\n            borderLeft: '1px solid lightgrey',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        />\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GroupCompareVisualizer;\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport data_balanced from '../../data/data_group.csv';\nimport GroupCompareVisualizer from './compare_visualizer';\n\nconst groupSliceNumber = 100;\nclass GroupCompareChart extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      anonData: null,\n      loggedData: null,\n      change: 0,\n    };\n  }\n\n  componentDidMount () {\n    d3\n      .csv (data_balanced, d => {\n        return {\n          anonymous: d.anonymous == 'True' ? true : false,\n          confidence_faith: +d.confidence_faith,\n          faith_label: d.goodfaith == 'True' ? true : false,\n          confidence_damage: +d.confidence_damage,\n          damaging_label: d.damaging == 'True' ? true : false,\n        };\n      })\n      .then (data => {\n        const anonData = data\n          .filter (d => {\n            return d.anonymous;\n          })\n          .slice (0, groupSliceNumber);\n        const loggedData = data\n          .filter (d => {\n            return !d.anonymous;\n          })\n          .slice (0, groupSliceNumber);\n        this.setState ({anonData: anonData, loggedData: loggedData});\n        this.setState ({change: 2});\n      });\n  }\n\n  //   shouldComponentUpdate (nextProps, nextState) {\n  //     return true;\n  //   }\n\n  render () {\n    return (\n      <div style={{display: 'flex'}}>\n        {/* <Test data={this.state.data} key={this.state.change} /> */}\n        <GroupCompareVisualizer\n          anonData={this.state.anonData}\n          loggedData={this.state.loggedData}\n          key={this.state.change}\n          sliceNumber={groupSliceNumber}\n        />\n      </div>\n    );\n  }\n}\n\nexport default GroupCompareChart;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport * as d3 from 'd3';\nimport Box from '@material-ui/core/Box';\nimport Chart from './components/threshold_explorer/threshold_explorer_section';\nimport Paper from '@material-ui/core/Paper';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {createMuiTheme} from '@material-ui/core/styles';\nimport {ThemeProvider} from '@material-ui/styles';\nimport styled from 'styled-components';\nimport GroupCompareChart from './components/group_compare/section';\n\nconst SectionHeader = styled.div`\n  padding-left: 10px;\n  padding-top: 5px;\n  padding-bottom: 30px;\n  border-bottom: 1px solid lightgrey;\n`;\n\n// const PerformanceTitle = styled.h1`\n//   font-size: 1.1em;\n//   text-align: left;\n//   margin-bottom: 0px;\n//   font-weight: 800;\n// `;\n\nconst Section = styled.div`\n  display: block;\n`;\n\nconst drawerWidth = 240;\n\nconst theme = createMuiTheme ({\n  typography: {\n    fontFamily: 'Noto Sans',\n    subtitle1: {\n      fontFamily: 'Noto Serif',\n      fontSize: '24px',\n    },\n    subtitle2: {\n      fontSize: '12px',\n      color: '#B0B0B0',\n      fontWeight: 'bold',\n      textTransform: 'capitalize',\n      textAlign: 'left',\n    },\n    h6: {\n      fontWeight: 'bold',\n      fontSize: '16px',\n      textAlign: 'left',\n    },\n    body1: {\n      // textAlign: 'left',\n      fontSize: '14px',\n    },\n    body2: {\n      textAlign: 'left',\n      fontSize: '14px',\n    },\n    button: {\n      fontStyle: 'italic',\n    },\n  },\n});\n\nconst useStyles = makeStyles (theme => ({\n  root: {\n    display: 'flex',\n    // fontFamily: 'Noto Sans, sans-serif',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    textAlign: 'center',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    color: 'red',\n  },\n  paper: {\n    textAlign: 'left',\n    padding: '20px 20px',\n  },\n  list: {\n    fontSize: '19px',\n    color: 'black',\n    textAlign: 'center',\n  },\n  // necessary for content to be below app bar\n  toolbar: {\n    padding: theme.spacing (2),\n  },\n  content: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing (2),\n  },\n}));\n\nfunction App () {\n  const classes = useStyles ();\n  return (\n    <ThemeProvider theme={theme}>\n\n      <div className=\"App\">\n        <body>\n          <div className={classes.root}>\n\n            <Drawer\n              className={classes.drawer}\n              variant=\"permanent\"\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              anchor=\"left\"\n            >\n              <Paper className={classes.paper} elevation=\"0\">\n                <div style={{textAlign: 'center'}}>\n                  <Typography variant=\"subtitle1\">\n                    WIKIPEDIA\n                  </Typography>\n                  <Typography style={{textAlign: 'center'}}>\n                    ORES Explorer\n                  </Typography>\n                </div>\n\n              </Paper>\n              <List style={{marginTop: '100px'}}>\n                {[\n                  'About ORES',\n                  'Threshold Explorer',\n                  'Threshold Calculator',\n                  'Group Comparison',\n                ].map ((text, index) => (\n                  <ListItem className={classes.list} button key={text}>\n                    {/* <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <InboxIcon />}\n                </ListItemIcon> */}\n                    <ListItemText primary={text} />\n                  </ListItem>\n                ))}\n              </List>\n\n            </Drawer>\n            <main className={classes.content}>\n              <Section>\n\n                <SectionHeader>\n                  <Typography variant=\"subtitle1\" style={{textAlign: 'left'}}>\n                    Threshold Explorer\n                  </Typography>\n                  <div\n                    style={{\n                      width: '50%',\n                      marginTop: '10px',\n                    }}\n                  >\n                    <Typography variant=\"body2\" style={{color: 'grey'}}>\n                      Threshold Explorer helps you visualize model performance under specific thresholds with an example dataset. To start, select a model below, then pick a threshold.\n                      {' '}\n                    </Typography>\n                  </div>\n\n                </SectionHeader>\n\n                <Chart />\n              </Section>\n              <Section>\n                <SectionHeader>\n                  <Typography variant=\"subtitle1\" style={{textAlign: 'left'}}>\n                    Disparity\n                  </Typography>\n                  <div\n                    style={{\n                      width: '50%',\n                      marginTop: '10px',\n                    }}\n                  >\n                    <Typography variant=\"body2\" style={{color: 'grey'}}>\n                      Threshold Explorer helps you visualize model performance under specific thresholds with an example dataset. To start, select a model below, then pick a threshold.\n                      {' '}\n                    </Typography>\n                  </div>\n                </SectionHeader>\n                <GroupCompareChart />\n              </Section>\n\n            </main>\n          </div>\n        </body>\n\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render (\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById ('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister ();\n","module.exports = __webpack_public_path__ + \"static/media/data_not-balanced.2c5d8911.csv\";","module.exports = __webpack_public_path__ + \"static/media/performance.760a321c.csv\";","module.exports = __webpack_public_path__ + \"static/media/data_group.0792ad7e.csv\";"],"sourceRoot":""}