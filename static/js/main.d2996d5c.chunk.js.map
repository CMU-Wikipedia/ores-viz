{"version":3,"sources":["data/data_not-balanced.csv","data/data_balanced_1.csv","logo.svg","partials/slider.jsx","partials/thresholdInput.jsx","components/threshold_explorer/threshold_performance.jsx","partials/shape.jsx","partials/typeToggle.jsx","partials/diff.js","components/threshold_explorer/threshold_explorer.jsx","components/threshold_explorer/threshold_explorer_section.js","components/group_compare/compare_visualizer.jsx","components/group_compare/section.jsx","components/recommender.jsx","components/injection.jsx","components/about.jsx","components/content.jsx","partials/drawerList.jsx","App.js","serviceWorker.js","index.js","data/performance.csv"],"names":["module","exports","ThresholdeSlider","props","getText","value","state","bind","style","position","marginTop","width","top","display","justifyContent","Typography","textAlign","fontWeight","variant","color","this","middleText","OrangeSlider","valueLabelDisplay","valueLabelFormat","aria-label","defaultValue","onChange","onChangeCommitted","BlackSlider","Component","makeStyles","theme","root","spacing","margin","height","withStyles","paddingTop","paddingBottom","thumb","backgroundColor","border","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","opacity","Slider","ThresholdInput","component","className","Input","multiplier","toFixed","endAdornment","InputAdornment","inputProps","step","min","max","type","fontSize","ThresholdPerformance","chartPerformanceRef","React","createRef","getBoxHeight","getWidthHeightRatio","getMargin","getWidth","drawChart","redrawChart","threshold","current","parentElement","offsetWidth","right","bottom","inBetween","resizedFn","setState","window","addEventListener","clearTimeout","setTimeout","d3","remove","performance_data","currentDamaging","damaging","dataCollection","map","d","Math","round","damaging_accuracy","faith_accuracy","damaging_fpr","faith_fpr","damaging_fnr","faith_fnr","eachHeight","svg","append","attr","getPerformanceColor","perform","getStrokeColor","preValue","currentValue","forEach","data","index","currentThreshold","x","domain","nice","range","y","getY","xAxis","g","call","tickSize","getXAxis","line","defined","isNaN","area","x1","x2","number","y0","y1","datum","filter","getAreaColor","text","ticks","message","opposite","verticalAlign","ref","padding","flexDirection","marginBottom","Circle","size","cx","cy","r","fill","Cross","y2","stroke","strokeWidth","TypeToggle","Grid","item","xs","gridSize","Box","ToggleButtonGroup","exclusive","ToggleButton","id","ValidateIPaddress","a","ipaddress","test","cors","api","articleInfo","diffInfo","axios","get","then","res","page","query","pages","Object","keys","rev","revisions","time","Date","timestamp","title","user","toLocaleTimeString","toLocaleDateString","undefined","weekday","year","month","day","comment","err","compare","loadDiff","parent","console","log","div","trueStatement","falseStatement","head","rev_id","predict","correct","getDiff","html","topOffset","tooltipHegiht","Number","parseInt","ThresholdExplorer","onSliderChange","event","onTextChange","target","onTypeChange","chartRef","widthHeightRatio","graph1Scale","dotWidth","sliderRange","sliderRight","diameter","dd","circles","xvalue","parseFloat","confidence_damage","confidence_faith","ceil","damaging_label","faith_label","label","sort","b","ca","prev","cnt","abs","category","dodge","customCross","draw","context","s","sqrt","w","moveTo","lineTo","closePath","thresholdText","selectAll","join","on","diff","Fragment","container","key","clickTip","getClickTip","Chart","change","data_balanced","goodfaith","slice","nextProps","nextState","performanceData","getPerformance","TP","TN","FP","FN","GroupCompareVisualizer","acc","fpr","fnr","defaultPerformance","getWholePerformance","drawPerformanceChart","compareChartRef","comparePerformanceRef","wholePerformanceRef","getPerformanceWidth","getPerformanceForThreshold","performanceWidth","group1Color","group2Color","wholePerformance","groupOnePerformance","groupTwoPerformance","performanceHeight","blockHeight","chartHeight","offsetHeight","groupOneData","groupTwoData","groupOneFP","length","groupOneTP","groupOneFN","groupOneTN","groupTwoFP","groupTwoTP","groupTwoFN","groupTwoTN","groupOne","groupTwo","all","getPerformanceHeight","performance","groupOnePerf","groupTwoPerf","allPerf","vizHeight","drawPerformance","currentPerformance","larger","groupNumber","largerPerformance","actualx","tooltipx","tooltipy","tooltipHalfWidth","groupOneHeight","groupTwoHeight","groupOneCurrentPerformance","groupTwoCurrentPerformance","largerPercentage","groupSize","getSymbolColor","fp","tp","fn","tn","cp","dots","dot","push","dotData","sum","children","sliceNumber","centerX","centerY","pow","dotRadius","sortArr","getStatus","score","pred","groupOneDots","groupTwoDots","visualizationRef","transform","borderBottom","GroupCompareChart","anonData","loggedData","newcomerData","experiencedData","anonymous","newcomer","edit_years","Recommender","onThresChange","thres","diffs","getRec","minDiff","i","onRangeChange","getData","getObject","array","newArray","arrayIdx","elem","accuracy","f1","filter_rate","match_rate","precision","recall","damagingArray","enwiki","models","statistics","thresholds","true","goodfaithArray","damagingData","goodfaithData","recommendations","ranges","param","rec","Aggressive","Cautious","Balanced","j","prop","escape","getRecommendations","borderColor","paddingLeft","borderLeft","paddingRight","alignItems","orientation","subtitle","description","obj","marginRight","src","process","helperText","alignSelf","getProp","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","wordWrap","fontFamily","FeatureInjector","onDamagingChange","val","onGoodfaithChange","onHighlightChange","group","adjSeconds","anon","curID","oldData","newData","positive","prediction","pie","arc","innerRadius","outerRadius","name","pieChartColor","mainColor","theDefault","replace","chart","arcs","class","md","borderRight","borderTop","marks","renderPieChart","About","desc","icon","getMainContent","href","colspan","cellSpacing","cellPadding","getPredTableItem","SectionHeader","styled","Section","MainContent","data_performance","path","sectionHeader","DrawerList","selected","clickSection","List","to","ListItem","klass","button","onClick","createMuiTheme","typography","subtitle1","subtitle2","textTransform","h6","body1","body2","fontStyle","h5","responsiveFontSizes","useStyles","appBar","drawer","flexShrink","drawerPaper","paper","list","textDecoration","toolbar","content","flexGrow","palette","background","default","App","classes","basename","ThemeProvider","Drawer","anchor","Paper","elevation","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.d2996d5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/data_not-balanced.2c5d8911.csv\";","module.exports = __webpack_public_path__ + \"static/media/data_balanced_1.718935bd.csv\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\n\nclass ThresholdeSlider extends Component {\n  constructor(props) {\n    super(props);\n    this.getText = this.getText.bind(this);\n  }\n\n  getText = (value) => {\n    return `${value}%`;\n  };\n\n  state = {};\n  render() {\n    // const classes = useStyles ();\n\n    return (\n      <div style={{ position: \"relative\", marginTop: \"5px\" }}>\n        <div\n          style={{\n            position: \"absolute\",\n            width: \"100%\",\n            top: \"10px\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Typography\n            style={{\n              textAlign: \"left\",\n              fontWeight: \"bold\",\n            }}\n          >\n            {[<span>&#9664;</span>, \" Identify More\"]}\n          </Typography>\n\n          <Typography\n            variant=\"body2\"\n            style={{ color: \"gray\", textAlign: \"center\" }}\n          >\n            {this.props.middleText != null ? this.props.middleText() : null}\n          </Typography>\n\n          <Typography style={{ textAlign: \"right\", fontWeight: \"bold\" }}>\n            {[\"Identify Less \", <span>&#9654;</span>]}\n          </Typography>\n        </div>\n        <div>\n          {this.props.color === \"orange\" ? (\n            <OrangeSlider\n              value={this.props.value}\n              valueLabelDisplay=\"auto\"\n              valueLabelFormat={this.getText}\n              aria-label=\"pretto slider\"\n              defaultValue={this.props.defaultValue}\n              onChange={this.props.onChangeCommitted}\n            />\n          ) : (\n            <BlackSlider\n              value={this.props.value}\n              valueLabelDisplay=\"auto\"\n              valueLabelFormat={this.getText}\n              aria-label=\"pretto slider\"\n              defaultValue={this.props.defaultValue}\n              onChange={this.props.onChangeCommitted}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ThresholdeSlider;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 300 + theme.spacing(3) * 2,\n  },\n  margin: {\n    height: theme.spacing(3),\n  },\n}));\n\nconst OrangeSlider = withStyles({\n  root: {\n    color: \"#C57619\",\n    height: 10,\n    paddingTop: \"50px\",\n    paddingBottom: \"0px\",\n  },\n  thumb: {\n    height: 18,\n    width: 18,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -8,\n    marginLeft: -9,\n    \"&:focus, &:hover, &$active\": {\n      boxShadow: \"inherit\",\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: \"calc(-50%+12px)\",\n    fontWeight: \"bold\",\n  },\n  track: {\n    height: 4,\n    borderRadius: 4,\n    color: \"#909090\",\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4,\n    color: \"#C57619\",\n    opacity: \"100%\",\n  },\n})(Slider);\n\nconst BlackSlider = withStyles({\n  root: {\n    color: \"#000000\",\n    height: 10,\n    paddingTop: \"50px\",\n    paddingBottom: \"0px\",\n  },\n  thumb: {\n    height: 18,\n    width: 18,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -8,\n    marginLeft: -9,\n    \"&:focus, &:hover, &$active\": {\n      boxShadow: \"inherit\",\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: \"calc(-50%+12px)\",\n    fontWeight: \"bold\",\n  },\n  track: {\n    height: 4,\n    borderRadius: 4,\n    color: \"#909090\",\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4,\n    color: \"#000000\",\n    opacity: \"100%\",\n  },\n})(Slider);\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport InputBase from \"@material-ui/core/Input\";\n\nclass ThresholdInput extends Component {\n  render() {\n    return (\n      <Typography component=\"div\" variant=\"h6\" className=\"text\">\n        <InputBase\n          value={(this.props.value * this.props.multiplier).toFixed(0)}\n          onChange={this.props.onChange}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <Typography\n                variant=\"h6\"\n                className=\"text\"\n                style={{ fontWeight: 600 }}\n              >\n                %\n              </Typography>\n            </InputAdornment>\n          }\n          inputProps={{ step: 1, min: 0, max: 100, type: \"number\" }}\n          style={{\n            fontSize: 20,\n            width: 80,\n            fontWeight: 600,\n          }}\n        />\n      </Typography>\n    );\n  }\n}\n\nexport default ThresholdInput;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styled from \"styled-components\";\n\nclass ThresholdPerformance extends Component {\n  constructor(props) {\n    super(props);\n    this.chartPerformanceRef = React.createRef();\n    this.getBoxHeight = this.getBoxHeight.bind(this);\n    this.getWidthHeightRatio = this.getWidthHeightRatio.bind(this);\n    this.getMargin = this.getMargin.bind(this);\n    this.getWidth = this.getWidth.bind(this);\n    this.drawChart = this.drawChart.bind(this);\n    this.redrawChart = this.redrawChart.bind(this);\n    this.state = {\n      threshold: 80,\n      width: 1000,\n      height: 1000,\n    };\n  }\n\n  getWidthHeightRatio() {\n    return 2.4;\n  }\n\n  getWidth() {\n    if (this.chartPerformanceRef.current == null) {\n      return this.state.width;\n    } else {\n      return this.chartPerformanceRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  getMargin() {\n    return {\n      top: 30,\n      right: 5,\n      bottom: 20,\n      left: 30,\n      inBetween: this.state.width * 0.2,\n    };\n  }\n\n  componentDidMount() {\n    let width = this.getWidth();\n    let height = width * this.getWidthHeightRatio();\n\n    this.setState(\n      {\n        width: width,\n        height: height,\n      },\n      () => {\n        this.drawChart();\n      }\n    );\n\n    let resizedFn;\n    window.addEventListener(\"resize\", () => {\n      clearTimeout(resizedFn);\n      resizedFn = setTimeout(() => {\n        this.redrawChart();\n      }, 200);\n    });\n  }\n\n  redrawChart() {\n    let width = this.getWidth();\n    this.setState({ width: width, height: width * this.getWidthHeightRatio() });\n    d3.select(\".performanceChart svg\").remove();\n    this.drawChart = this.drawChart.bind(this);\n    this.drawChart();\n  }\n\n  drawChart() {\n    if (this.props.performance_data != null) {\n      const currentDamaging = this.props.damaging;\n      const dataAccuracy = this.props.performance_data.map((d) => ({\n        threshold: d.threshold,\n        value: Math.round(\n          (currentDamaging ? d.damaging_accuracy : d.faith_accuracy) * 100\n        ),\n      }));\n\n      const dataFPR = this.props.performance_data.map((d) => ({\n        threshold: d.threshold,\n        value: Math.round(\n          (currentDamaging ? d.damaging_fpr : d.faith_fpr) * 100\n        ),\n      }));\n\n      const dataFNR = this.props.performance_data.map((d) => ({\n        threshold: d.threshold,\n        value: Math.round(\n          (currentDamaging ? d.damaging_fnr : d.faith_fnr) * 100\n        ),\n      }));\n\n      const dataCollection = [dataAccuracy, dataFPR, dataFNR];\n\n      const margin = this.getMargin();\n      let width = this.state.width - margin.left - margin.right;\n      let height = this.state.height - margin.top - margin.bottom;\n      let eachHeight = (height - margin.inBetween * 2) / 3;\n\n      const betweenThreshold = (x1, x2, number) => {\n        return (number >= x1 && number <= x2) || (number <= x1 && number >= x2);\n      };\n\n      //   const xAxis = g =>\n      //     g\n      //       .attr ('transform', `translate(0,${height / 2})`)\n      //       .call (d3.axisBottom (x).ticks (width / 80).tickSizeOuter (0));\n\n      const getXAxis = (x, type) => {\n        switch (type) {\n          case 0:\n            return function (g) {\n              g.attr(\"transform\", `translate(0,${eachHeight + margin.top})`)\n                .attr(\"class\", \"axisGreyY\")\n                .call(d3.axisBottom(x).tickSize(0));\n            };\n            break;\n          case 1:\n            return function (g) {\n              g.attr(\n                \"transform\",\n                `translate(0,${eachHeight * 2 + margin.inBetween + margin.top})`\n              )\n                .attr(\"class\", \"axisGreyY\")\n                .call(d3.axisBottom(x).tickSize(0));\n            };\n            break;\n          default:\n            return function (g) {\n              g.attr(\"transform\", `translate(0,${height + margin.top})`)\n                .attr(\"class\", \"axisGreyY\")\n                .call(d3.axisBottom(x).tickSize(0));\n            };\n        }\n      };\n\n      //   const y = d3\n      //     .scaleLinear ()\n      //     .domain ([0, d3.max (data, d => d.value)])\n      //     .nice ()\n      //     .range ([height / 2, margin.top]);\n\n      const getY = (type) => {\n        switch (type) {\n          case 0:\n            return d3\n              .scaleLinear()\n              .domain([0, d3.max(dataCollection[0], (d) => d.value)])\n              .nice()\n              .range([eachHeight + margin.top, margin.top]);\n            break;\n          case 1:\n            return d3\n              .scaleLinear()\n              .domain([0, d3.max(dataCollection[1], (d) => d.value)])\n              .nice()\n              .range([\n                eachHeight * 2 + margin.inBetween + margin.top,\n                eachHeight + margin.inBetween + margin.top,\n              ]);\n            break;\n          default:\n            return d3\n              .scaleLinear()\n              .domain([0, d3.max(dataCollection[2], (d) => d.value)])\n              .nice()\n              .range([\n                height + margin.top,\n                eachHeight * 2 + margin.inBetween * 2 + margin.top,\n              ]);\n        }\n      };\n\n      let svg = d3\n        .select(\".performanceChart\")\n        .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom);\n\n      const getPerformanceColor = (type, perform) => {\n        if (type == \"stroke\") {\n          //color for stroke\n          if (perform == 1) {\n            return d3.color(\"#159256\");\n          } else if (perform == 0) {\n            return d3.color(\"#878787\");\n          } else {\n            return d3.color(\"#921515\");\n          }\n        } else {\n          //color for area\n          if (perform == 1) {\n            return d3.color(\"#F0F7F4\");\n          } else if (perform == 0) {\n            return d3.color(\"#E8E8E8\");\n          } else {\n            return d3.color(\"#F7F0F0\");\n          }\n        }\n      };\n\n      const getAreaColor = (type, preValue, currentValue) => {\n        if (type == 0) {\n          //accuracy -> the higher the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor(\"area\", 1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor(\"area\", -1);\n          } else {\n            return getPerformanceColor(\"area\", 0);\n          }\n        } else {\n          //FPR, FNR -> the lower the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor(\"area\", -1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor(\"area\", 1);\n          } else {\n            return getPerformanceColor(\"area\", 0);\n          }\n        }\n      };\n\n      const getStrokeColor = (type, preValue, currentValue) => {\n        if (type == 0) {\n          //accuracy -> the higher the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor(\"stroke\", 1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor(\"stroke\", -1);\n          } else {\n            return getPerformanceColor(\"stroke\", 0);\n          }\n        } else {\n          //FPR, FNR -> the lower the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor(\"stroke\", -1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor(\"stroke\", 1);\n          } else {\n            return getPerformanceColor(\"stroke\", 0);\n          }\n        }\n      };\n\n      dataCollection.forEach((data, index) => {\n        const defaultValue = data[50].value;\n        const currentValue = data[this.props.threshold].value;\n        const currentThreshold = this.props.threshold;\n        const x = d3\n          .scaleLinear()\n          .domain([0, d3.max(data, (d) => d.threshold)])\n          .nice()\n          .range([margin.left, width - margin.right]);\n\n        const y = getY(index);\n        const xAxis = getXAxis(x, index);\n\n        const yAxis = (g) =>\n          g\n            .attr(\"transform\", `translate(${margin.left},0)`)\n            .attr(\"class\", \"axisGrey\")\n            .call(d3.axisLeft(y).ticks(2));\n\n        const line = d3\n          .line()\n          .defined((d) => !isNaN(d.value))\n          .x((d) => x(d.threshold))\n          .y((d) => y(d.value));\n\n        const area = d3\n          .area()\n          .defined((d) =>\n            betweenThreshold(0.5, currentThreshold * 0.01, d.threshold)\n          )\n          .x((d) => x(d.threshold))\n          .y0(y(0))\n          .y1((d) => y(d.value));\n\n        svg\n          .append(\"path\")\n          .datum(data.filter(area.defined()))\n          .attr(\"fill\", getAreaColor(index, defaultValue, currentValue))\n          .attr(\"d\", area);\n\n        svg\n          .append(\"path\")\n          .datum(data)\n          .attr(\"fill\", \"none\")\n          .attr(\"stroke\", \"grey\")\n          .attr(\"stroke-width\", 1.5)\n          .attr(\"stroke-linejoin\", \"round\")\n          .attr(\"stroke-linecap\", \"round\")\n          .attr(\"d\", line);\n\n        svg\n          .append(\"line\")\n          .attr(\"x1\", x(currentThreshold * 0.01))\n          .attr(\"y1\", y(currentValue))\n          .attr(\"x2\", x(currentThreshold * 0.01))\n          .attr(\n            \"y2\",\n            margin.top + index * margin.inBetween + (index + 1) * eachHeight\n          )\n          .attr(\"stroke-width\", 2)\n          .attr(\"stroke\", getStrokeColor(index, defaultValue, currentValue))\n          .style(\"stroke-dasharray\", \"5,5\");\n\n        svg\n          .append(\"line\")\n          .attr(\"x1\", x(50 * 0.01))\n          .attr(\"y1\", y(defaultValue))\n          .attr(\"x2\", x(50 * 0.01))\n          .attr(\n            \"y2\",\n            margin.top + index * margin.inBetween + (index + 1) * eachHeight\n          )\n          .attr(\"stroke-width\", 2)\n          .attr(\"stroke\", d3.color(\"#D2D2D2\"));\n\n        svg\n          .append(\"text\")\n          .attr(\"x\", x(currentThreshold * 0.01))\n          .attr(\"y\", y(currentValue + 8))\n          .attr(\"text-anchor\", \"middle\")\n          .text(`${currentValue}%`)\n          .attr(\"font-family\", \"sans-serif\")\n          .attr(\"font-size\", \"20px\")\n          .attr(\"fill\", getStrokeColor(index, defaultValue, currentValue));\n\n        svg.append(\"g\").call(xAxis);\n\n        svg.append(\"g\").call(yAxis);\n      });\n    }\n  }\n\n  getBoxHeight() {\n    const margin = this.getMargin();\n    return (\n      (this.state.height - margin.top - margin.bottom - margin.inBetween * 2) /\n      3\n    );\n  }\n\n  render() {\n    const message = this.props.damaging ? \"damaging\" : \"good faith\";\n    const opposite = this.props.damaging ? \"good\" : \"bad faith\";\n    return (\n      <div style={{ marginTop: \"20px\" }}>\n        <div\n          style={{\n            width: \"50%\",\n            display: \"inline-block\",\n            verticalAlign: \"top\",\n          }}\n        >\n          <div\n            style={{ marginTop: \"20px\" }}\n            className=\"performanceChart\"\n            ref={this.chartPerformanceRef}\n          />\n        </div>\n        <div\n          style={{\n            width: \"50%\",\n            display: \"inline-block\",\n            verticalAlign: \"top\",\n          }}\n        >\n          <div\n            style={{\n              height: `${this.getBoxHeight()}px`,\n              padding: \"0% 5%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              marginTop: `${this.getMargin().top + 20}px`,\n              marginBottom: `${this.getMargin().inBetween}px`,\n            }}\n          >\n            <div>\n              <Typography variant=\"h6\" textAlign=\"center\">\n                Accuracy{\" \"}\n              </Typography>\n              <Typography variant=\"body2\">\n                Correctly predicted edits out of all edits{\" \"}\n              </Typography>\n            </div>\n          </div>\n\n          <div\n            style={{\n              height: `${this.getBoxHeight()}px`,\n              padding: \"0% 5%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              marginBottom: `${this.getMargin().inBetween}px`,\n            }}\n          >\n            <div>\n              <Typography variant=\"h6\" textAlign=\"center\">\n                False Positive Rate\n              </Typography>\n              <Typography variant=\"body2\">\n                Percentage of {opposite} edits that are falsely identified as{\" \"}\n                {message}{\" \"}\n              </Typography>\n            </div>\n          </div>\n\n          <div\n            style={{\n              height: `${this.getBoxHeight()}px`,\n              padding: \"0% 5%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n            }}\n          >\n            <div>\n              <Typography variant=\"h6\" textAlign=\"center\">\n                False Negative Rate\n              </Typography>\n              <Typography variant=\"body2\">\n                Percentage of {message} edits that won’t be identified{\" \"}\n              </Typography>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ThresholdPerformance;\n","import React, { Component } from \"react\";\nclass Circle extends Component {\n  constructor(props) {\n    super(props);\n  }\n  state = {};\n  render() {\n    const size = this.props.size / 2;\n    return (\n      <svg height={size * 2} width={size * 2}>\n        <circle cx={size} cy={size} r={size} fill={this.props.color} />\n      </svg>\n    );\n  }\n}\n\nexport class Cross extends Component {\n  constructor(props) {\n    super(props);\n  }\n  state = {};\n  render() {\n    const size = this.props.size;\n    return (\n      <svg height={size} width={size}>\n        <line\n          x1=\"0\"\n          y1=\"0\"\n          x2={size}\n          y2={size}\n          stroke={this.props.color}\n          strokeWidth={2}\n        />\n        <line\n          x1=\"0\"\n          y1={size}\n          x2={size}\n          y2=\"0\"\n          stroke={this.props.color}\n          strokeWidth={2}\n        />\n      </svg>\n    );\n  }\n}\n\nexport default Circle;\n","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ToggleButtonGroup, ToggleButton } from \"@material-ui/lab\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\n\nclass TypeToggle extends Component {\n  render() {\n    return (\n      <Grid item xs={this.props.gridSize} className=\"modelOptions\">\n        <Typography component=\"div\" variant=\"subtitle2\">\n          <Box>MODEL OPTIONS</Box>\n        </Typography>\n        <ToggleButtonGroup\n          exclusive\n          value={this.props.damaging}\n          onChange={this.props.onChange}\n          className=\"options\"\n        >\n          <Typography\n            component={ToggleButton}\n            value={true}\n            variant=\"h6\"\n            className=\"text\"\n          >\n            Damaging Model\n          </Typography>\n          <Typography\n            value={false}\n            component={ToggleButton}\n            variant=\"h6\"\n            className=\"text\"\n          >\n            GoodFaith Model\n          </Typography>\n        </ToggleButtonGroup>\n      </Grid>\n    );\n  }\n}\n\nexport default TypeToggle;\n","import * as d3 from \"d3\";\nimport axios from \"axios\";\n\nasync function getDiff(id) {\n  var cors = \"https://cors-anywhere.herokuapp.com/\";\n  var api = \"https://en.wikipedia.org/w/api.php\";\n  var articleInfo = \"\";\n  var diffInfo = \"\";\n\n  function ValidateIPaddress(ipaddress) {\n    return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(\n      ipaddress\n    );\n  }\n\n  await axios\n    .get(\n      cors + api + \"?format=json&action=query&revids=\" + id + \"&prop=revisions\"\n    )\n    .then(\n      (res) => {\n        const page = res.data.query.pages[Object.keys(res.data.query.pages)[0]];\n\n        const rev = page.revisions[0];\n        const time = new Date(rev.timestamp);\n\n        articleInfo =\n          \"<strong>Wiki Title: </strong>\" +\n          page.title +\n          \"<h5>Edited by \" +\n          (ValidateIPaddress(rev.user) ? \"Anonymous\" : rev.user) +\n          \" at \" +\n          time.toLocaleTimeString() +\n          \" on \" +\n          time.toLocaleDateString(undefined, {\n            weekday: \"long\",\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\",\n          }) +\n          \"</h5>\\n\";\n\n        if (rev.comment != \"\") {\n          articleInfo =\n            articleInfo +\n            \"<strong>Comment from editor: </strong><p>\" +\n            rev.comment +\n            \"</p>\";\n        }\n      },\n      (err) => {}\n    );\n\n  await axios\n    .get(\n      cors +\n        api +\n        \"?&action=compare&torelative=prev&prop=diff&fromrev=\" +\n        id +\n        \"&format=json\"\n    )\n    .then(\n      (res) => {\n        diffInfo =\n          \"<table>\" +\n          \"<tr class='header'><td class='before' colspan='2'>Before</td><td class='after' colspan='2'>After</td></tr>\" +\n          res.data.compare[\"*\"] +\n          \"</table>\";\n      },\n      (err) => {}\n    );\n\n  if (articleInfo != \"\" || diffInfo != \"\")\n    return \"<div class='apirow'>\" + articleInfo + diffInfo + \"</div>\";\n\n  return \"\";\n}\n\nexport function loadDiff(d, damaging, x, margin, height, parent) {\n  console.log(\"chart click\");\n  var div = d3.select(parent).append(\"div\").attr(\"class\", \"tooltip\");\n\n  const trueStatement = damaging ? \"damaging\" : \"in good faith\";\n  const falseStatement = damaging ? \"not damaging\" : \"in bad faith\";\n\n  var tempContent = \"<div class='apirow'>Loading...<progress/></div>\";\n  var head =\n    '<div class=\"main\"><strong>Rev. ID: </strong><a href=\"https://en.wikipedia.org/w/index.php?title=&diff=prev&oldid=' +\n    d.rev_id +\n    '\" target=\"_blank\">' +\n    d.rev_id +\n    \"</a><div class='row'>\" +\n    \"\\n<div><strong>Prediction: </strong>\" +\n    (d.predict ? trueStatement : falseStatement) +\n    \"</div>\\n<div><strong>Actual: </strong>\" +\n    (d.predict === d.correct ? trueStatement : falseStatement) +\n    \"</div></div></div>\\n\";\n\n  getDiff(d.rev_id).then((res) => div.html(head + res));\n\n  div\n    .html(head + tempContent)\n    .style(\"position\", \"absolute\")\n    .style(\"left\", x(d.x) + \"px\");\n\n  let topOffset = d.y + margin.top;\n  let tooltipHegiht = Number.parseInt(div.style(\"height\"));\n\n  if (topOffset + tooltipHegiht > height + 100)\n    topOffset = topOffset - tooltipHegiht;\n  div.style(\"top\", topOffset + \"px\");\n}\n\nexport default loadDiff;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport ThresholdSlider from \"../../partials/slider\";\nimport ThresholdInput from \"../../partials/thresholdInput\";\nimport ThresholdPerformance from \"./threshold_performance\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ToggleButtonGroup, ToggleButton } from \"@material-ui/lab\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Circle, { Cross } from \"../../partials/shape\";\nimport TypeToggle from \"../../partials/typeToggle\";\nimport diff from \"../../partials/diff\";\n\nclass ThresholdExplorer extends Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n    this.getWidth = this.getWidth.bind(this);\n    this.drawChart = this.drawChart.bind(this);\n    this.redrawChart = this.redrawChart.bind(this);\n    this.state = {\n      threshold: 60,\n      width: 1000,\n      height: 1000,\n      widthHeightRatio: 0.8,\n      graph1Scale: 1,\n      dotWidth: 0,\n      sliderRange: [20, 1000],\n      damaging: true,\n    };\n  }\n\n  getWidth() {\n    if (this.chartRef.current == null) {\n      return this.state.width;\n    } else {\n      return this.chartRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  onSliderChange = (event, threshold) => {\n    this.setState({ threshold: threshold });\n    d3.select(\".rowChart svg\").remove();\n    this.drawChart = this.drawChart.bind(this);\n    this.drawChart();\n  };\n\n  onTextChange = (event) => {\n    if (event.target.value != \"\") {\n      this.state.threshold = event.target.value;\n      this.setState({ threshold: event.target.value });\n      d3.select(\".rowChart svg\").remove();\n      this.drawChart = this.drawChart.bind(this);\n      this.drawChart();\n    }\n  };\n\n  onTypeChange = (event, type) => {\n    if (type != null) {\n      this.setState({ damaging: type });\n      this.state.damaging = type;\n      d3.select(\".rowChart svg\").remove();\n      this.drawChart = this.drawChart.bind(this);\n      this.drawChart();\n    }\n  };\n\n  componentDidMount() {\n    let width = this.getWidth();\n    let height = width * 0.8;\n    let sliderRight = width - 30;\n\n    this.setState(\n      {\n        width: width,\n        height: height,\n        sliderRange: [10, sliderRight],\n        damaging: true,\n      },\n      () => {\n        this.drawChart();\n      }\n    );\n\n    let resizedFn;\n    window.addEventListener(\"resize\", () => {\n      clearTimeout(resizedFn);\n      resizedFn = setTimeout(() => {\n        this.redrawChart();\n      }, 200);\n    });\n  }\n\n  redrawChart() {\n    let width = this.getWidth();\n    let sliderRight = width - 30;\n    this.setState({\n      width: width,\n      height: width * 0.8,\n      sliderRange: [10, sliderRight],\n      damaging: this.state.damaging,\n    });\n    d3.select(\".rowChart svg\").remove();\n    this.drawChart = this.drawChart.bind(this);\n    this.drawChart();\n  }\n\n  drawChart() {\n    const margin = { top: 0, right: 30, bottom: 30, left: 10 };\n    let width = this.state.width - margin.left - margin.right;\n    let height = this.state.height - margin.top - margin.bottom;\n    // append the svg object to the body of the page\n    let svg = d3\n      .select(\".rowChart\")\n      .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom);\n\n    const threshold = this.state.threshold / 100;\n    const damaging = this.state.damaging;\n    const graph1Scale = 1;\n\n    const diameter = (width * graph1Scale) / 50;\n    const dotWidth = diameter * 0.5;\n    if (this.props.data != null) {\n      const dd = dodge(\n        threshold,\n        this.props.data,\n        diameter,\n        this.state.damaging\n      );\n\n      const xAxis = (g) =>\n        g\n          .attr(\"transform\", `translate(0,${margin.top})`)\n          .call(d3.axisTop(x).ticks(0));\n\n      const x = d3\n        .scaleLinear()\n        .domain([0, 1])\n        .nice()\n        .range([margin.left, width + margin.left]);\n\n      // const shape = d3.scaleOrdinal (\n      //   dd.map (d => d.category),\n      //   d3.symbols.map (s =>\n      //     d3.symbol ().size (diameter * diameter * 0.4).type (s) ()\n      //   )\n      // );\n\n      function dodge(threshold, data, diameter, damaging) {\n        const circles = data\n          .map((d) => ({\n            rev_id: d.rev_id,\n            xvalue: parseFloat(\n              damaging ? d.confidence_damage : d.confidence_faith\n            ).toFixed(2),\n            x:\n              0.02 *\n              Math.ceil(\n                parseFloat(\n                  damaging ? d.confidence_damage : d.confidence_faith\n                ).toFixed(2) * 50\n              ),\n            correct:\n              parseFloat(\n                damaging ? d.confidence_damage : d.confidence_faith\n              ).toFixed(2) >=\n                threshold ==\n              damaging\n                ? d.damaging_label\n                : d.faith_label,\n            predict:\n              parseFloat(\n                damaging ? d.confidence_damage : d.confidence_faith\n              ).toFixed(2) >= threshold,\n            label: damaging ? d.damaging_label : d.faith_label,\n          }))\n          .sort(function (a, b) {\n            if (a.x == b.x) {\n              let ca = a.correct ? 1 : 0;\n              let cb = b.correct ? 1 : 0;\n              return cb - ca;\n            } else {\n              return b.x - a.x;\n            }\n          });\n        const epsilon = 1e-4;\n\n        let prev = 100;\n        let cnt = 1;\n\n        for (const b of circles) {\n          //determine the position of the dot\n          if (Math.abs(prev - b.x) < epsilon) {\n            // belongs to the same col\n            cnt += 1;\n            b.y = diameter * cnt;\n          } else {\n            prev = b.x;\n            cnt = 1;\n            b.y = diameter;\n          }\n\n          if (b.correct) {\n            b.category = 1;\n          } else {\n            b.category = 0;\n          }\n\n          if (b.predict) {\n            b.color = d3.color(\"#C57619\");\n          } else {\n            b.color = d3.color(\"#909090\");\n          }\n        }\n\n        return circles;\n      }\n\n      var customCross = {\n        draw: function (context, size) {\n          let s = Math.sqrt(size * 2) / 2;\n          let w = Math.sqrt(size) / 6;\n          context.moveTo(-s, w);\n          context.lineTo(s, w);\n          context.lineTo(s, -w);\n          context.lineTo(-s, -w);\n          context.closePath();\n          context.moveTo(w, s);\n          context.lineTo(w, -s);\n          context.lineTo(-w, -s);\n          context.lineTo(-w, s);\n          context.closePath();\n        },\n      };\n\n      svg\n        .append(\"line\")\n        .attr(\"x1\", width + margin.left - dotWidth * 100 * (1 - threshold))\n        .attr(\"y1\", margin.top)\n        .attr(\"x2\", width + margin.left - dotWidth * 100 * (1 - threshold))\n        .attr(\"y2\", height - 30)\n        .attr(\"stroke-width\", 2)\n        .attr(\"stroke\", \"black\")\n        .style(\"stroke-dasharray\", \"5,5\");\n\n      const thresholdText = threshold * 100 + \"%\";\n      svg\n        .append(\"text\")\n        .attr(\"x\", width + margin.left - dotWidth * 100 * (1 - threshold))\n        .attr(\"y\", height - 15)\n        .attr(\"text-anchor\", \"middle\")\n        .text(thresholdText)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"font-size\", \"15px\");\n\n      svg\n        .append(\"g\")\n        .selectAll(\"path\")\n        .data(dd)\n        .join(\"path\")\n        .attr(\n          \"transform\",\n          (d) => `translate(${x(d.x)},${d.y + margin.top}), rotate(45)`\n        )\n        .attr(\"fill\", (d) => d.color)\n        .style(\"cursor\", \"pointer\")\n        .attr(\n          \"d\",\n          d3\n            .symbol()\n            .type(function (d) {\n              if (d.category === 0) {\n                return customCross;\n              } else {\n                return d3.symbolCircle;\n              }\n            })\n            .size(diameter * diameter * 0.4)\n        )\n        .on(\"click\", (d) => diff(d, damaging, x, margin, height, \".rowChart\"))\n        .on(\"mouseover\", function (d) {\n          d3.select(\".rowChart div\").remove();\n        });\n    }\n  }\n\n  getClickTip() {\n    return (\n      <span>\n        <strong>TIP:</strong> Click on a revision (cross or circle) to view more\n        details.\n      </span>\n    );\n  }\n\n  render() {\n    const message = this.state.damaging ? \"damaging\" : \"good faith\";\n    const opposite = this.state.damaging ? \"good\" : \"bad faith\";\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            width: \"55%\",\n            display: \"inline-block\",\n            verticalAlign: \"top\",\n            position: \"relative\",\n          }}\n        >\n          <div className=\"upperSettings\">\n            <Grid container spacing={0}>\n              <TypeToggle\n                damaging={this.state.damaging}\n                onChange={this.onTypeChange}\n                gridSize={9}\n                key={this.state.damaging}\n              />\n              <Grid item xs={3} className=\"threshold\">\n                <div className=\"innerBox\">\n                  <Typography variant=\"subtitle2\">threshold</Typography>\n\n                  <Grid container spacing={2} className=\"options\">\n                    <Grid item xs={12} style={{ paddingTop: 0 }}>\n                      {/* <Typography component=\"div\" variant=\"h6\" className=\"text\">\n                        {this.state.threshold} %\n                      </Typography> */}\n                      <ThresholdInput\n                        value={this.state.threshold}\n                        multiplier={1}\n                        onChange={this.onTextChange}\n                      />\n                    </Grid>\n                  </Grid>\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n\n          <div\n            style={{\n              marginLeft: `${this.state.sliderRange[0]}px`,\n              width: `${\n                this.state.sliderRange[1] - this.state.sliderRange[0]\n              }px`,\n            }}\n          >\n            <Typography variant=\"subtitle2\">VISUALIZATION</Typography>\n            <ThresholdSlider\n              value={this.state.threshold}\n              clickTip={true}\n              middleText={this.getClickTip}\n              onChangeCommitted={this.onSliderChange}\n              color={\"orange\"}\n            />\n          </div>\n          <div\n            className=\"rowChart\"\n            ref={this.chartRef}\n            style={{ position: \"relative\" }}\n          />\n          <div className=\"legendCard\" id=\"explorerLegend\">\n            <Typography component=\"div\" variant=\"subtitle2\">\n              legend\n            </Typography>\n            <Grid container spacing={0} style={{ marginTop: \"10px\" }}>\n              <Grid item xs={12}>\n                <div className=\"legendMark\">\n                  <Circle size={12} color=\"#909090\" />{\" \"}\n                  <Typography component=\"span\" variant=\"body2\">\n                    Correctly classified {opposite} edits (TN)\n                  </Typography>\n                </div>\n              </Grid>\n              <Grid item xs={12}>\n                <div className=\"legendMark\">\n                  <Cross size={12} color=\"#909090\" />{\" \"}\n                  <Typography component=\"span\" variant=\"body2\">\n                    Uncaught {message} edits (FN){\" \"}\n                  </Typography>\n                </div>\n              </Grid>\n              <Grid item xs={12}>\n                <div className=\"legendMark\">\n                  <Circle size={12} color=\"#C57619\" />{\" \"}\n                  <Typography component=\"span\" variant=\"body2\">\n                    Correctly classified {message} edits (TP)\n                  </Typography>\n                </div>\n              </Grid>\n              <Grid item xs={12}>\n                <div className=\"legendMark\">\n                  <Cross size={12} color=\"#C57619\" />{\" \"}\n                  <Typography component=\"span\" variant=\"body2\">\n                    Mis-classified {opposite} edits (FP){\" \"}\n                  </Typography>\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n\n        <div className=\"sidePanel\">\n          <Typography variant=\"subtitle2\">PERFORMANCE</Typography>\n          <ThresholdPerformance\n            performance_data={this.props.performance_data}\n            threshold={this.state.threshold}\n            key={[this.state.damaging, this.state.threshold]}\n            damaging={this.state.damaging}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ThresholdExplorer;\n","import React, { Component } from \"react\";\nimport ThresholdExplorer from \"./threshold_explorer\";\nimport * as d3 from \"d3\";\nimport data_balanced from \"../../data/data_not-balanced.csv\";\nimport data_performance from \"../../data/performance.csv\";\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      change: 0,\n    };\n  }\n\n  componentDidMount() {\n    d3.csv(data_balanced, (d) => {\n      return {\n        confidence_faith: +d.confidence_faith,\n        faith_label: d.goodfaith == \"True\" ? true : false,\n        confidence_damage: +d.confidence_damage,\n        damaging_label: d.damaging == \"True\" ? true : false,\n        rev_id: +d.rev_id,\n      };\n    }).then((data) => {\n      this.setState({ data: data.slice(0, 2000) });\n      this.setState({ change: 2 });\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return true;\n  }\n\n  render() {\n    return (\n      <div style={{ display: \"flex\" }}>\n        {/* <Test data={this.state.data} key={this.state.change} /> */}\n        <ThresholdExplorer\n          data={this.state.data}\n          performance_data={this.props.performanceData}\n          key={this.state.change}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport dotData from \"../../data/new.json\";\nimport ThresholdSlider from \"../../partials/slider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Circle, { Cross } from \"../../partials/shape\";\nimport TypeToggle from \"../../partials/typeToggle\";\nimport ThresholdInput from \"../../partials/thresholdInput\";\n\nconst getColor = (accuracy, defaultValue, currentValue) => {\n  let perform = 1;\n  if (accuracy) {\n    if (defaultValue > currentValue) {\n      perform = -1;\n    } else if (defaultValue === currentValue) {\n      perform = 0;\n    } else {\n      perform = 1;\n    }\n  } else {\n    if (defaultValue > currentValue) {\n      perform = 1;\n    } else if (defaultValue === currentValue) {\n      perform = 0;\n    } else {\n      perform = -1;\n    }\n  }\n  //color for stroke\n  if (perform === 1) {\n    return d3.color(\"#159256\");\n  } else if (perform === 0) {\n    return d3.color(\"#878787\");\n  } else {\n    return d3.color(\"#921515\");\n  }\n};\n\nconst getPerformance = (data) => {\n  const TP = data[0],\n    TN = data[1],\n    FP = data[2],\n    FN = data[3];\n  //accuracy:\n  const acc = (TP + TN) / (TP + TN + FP + FN);\n  const fpr = FP / (FP + TN);\n  const fnr = FN / (FN + TP);\n  return [acc, fpr, fnr];\n};\n\nclass GroupCompareVisualizer extends Component {\n  constructor(props) {\n    super(props);\n    this.compareChartRef = React.createRef();\n    this.comparePerformanceRef = React.createRef();\n    this.wholePerformanceRef = React.createRef();\n    this.getMargin = this.getMargin.bind(this);\n    this.getWidth = this.getWidth.bind(this);\n    this.drawChart = this.drawChart.bind(this);\n    this.redrawChart = this.redrawChart.bind(this);\n    this.getWholePerformance = this.getWholePerformance.bind(this);\n    this.getPerformanceWidth = this.getPerformanceWidth.bind(this);\n    this.getPerformanceForThreshold = this.getPerformanceForThreshold.bind(\n      this\n    );\n    this.state = {\n      threshold: 60,\n      width: 1000,\n      height: 1000,\n      performanceWidth: 1000,\n      group1Color: \"#C57619\",\n      group2Color: \"#3777A5\",\n      sliderRange: [20, 1000],\n      wholePerformance: [0, 0, 0],\n      defaultPerformance: [0, 0, 0],\n      groupOnePerformance: null,\n      groupTwoPerformance: null,\n      damaging: true,\n    };\n  }\n\n  getMargin() {\n    const performanceHeight = this.state.performanceHeight;\n    const bottom = 50;\n    return {\n      top: 0,\n      right: 40,\n      bottom: bottom,\n      left: 20,\n      blockHeight: (performanceHeight - bottom) / 3,\n      chartHeight: (performanceHeight - bottom) / 12,\n    };\n  }\n\n  getWidth() {\n    if (this.compareChartRef.current === null) {\n      return this.state.width;\n    } else {\n      return this.compareChartRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  getPerformanceWidth() {\n    if (this.comparePerformanceRef.current === null) {\n      return this.state.performanceWidth;\n    } else {\n      return this.comparePerformanceRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  getPerformanceHeight() {\n    if (\n      this.wholePerformanceRef.current === null ||\n      this.compareChartRef.current === null\n    ) {\n      return this.state.performanceHeight;\n    } else {\n      return (\n        (this.compareChartRef.current.parentElement.offsetWidth - 60) * 0.5 +\n        300 -\n        this.wholePerformanceRef.current.offsetHeight\n      );\n    }\n  }\n\n  getPerformanceForThreshold() {\n    const threshold = this.state.threshold * 0.01;\n    const damaging = this.state.damaging;\n    if (this.props.groupOneData != null && this.props.groupTwoData != null) {\n      const groupOneFP = this.props.groupOneData.filter(function (d) {\n        return (\n          (damaging ? d.confidence_damage : d.confidence_faith) >= threshold &&\n          !(damaging ? d.damaging_label : d.faith_label)\n        );\n      }).length;\n\n      const groupOneTP = this.props.groupOneData.filter(function (d) {\n        return (\n          (damaging ? d.confidence_damage : d.confidence_faith) >= threshold &&\n          (damaging ? d.damaging_label : d.faith_label)\n        );\n      }).length;\n\n      const groupOneFN = this.props.groupOneData.filter(function (d) {\n        return (\n          (damaging ? d.confidence_damage : d.confidence_faith) < threshold &&\n          (damaging ? d.damaging_label : d.faith_label)\n        );\n      }).length;\n\n      const groupOneTN = this.props.groupOneData.filter(function (d) {\n        return (\n          (damaging ? d.confidence_damage : d.confidence_faith) < threshold &&\n          !(damaging ? d.damaging_label : d.faith_label)\n        );\n      }).length;\n\n      const groupTwoFP = this.props.groupTwoData.filter(function (d) {\n        return (\n          (damaging ? d.confidence_damage : d.confidence_faith) >= threshold &&\n          !(damaging ? d.damaging_label : d.faith_label)\n        );\n      }).length;\n\n      const groupTwoTP = this.props.groupTwoData.filter(function (d) {\n        return (\n          (damaging ? d.confidence_damage : d.confidence_faith) >= threshold &&\n          (damaging ? d.damaging_label : d.faith_label)\n        );\n      }).length;\n\n      const groupTwoFN = this.props.groupTwoData.filter(function (d) {\n        return (\n          (damaging ? d.confidence_damage : d.confidence_faith) < threshold &&\n          (damaging ? d.damaging_label : d.faith_label)\n        );\n      }).length;\n\n      const groupTwoTN = this.props.groupTwoData.filter(function (d) {\n        return (\n          (damaging ? d.confidence_damage : d.confidence_faith) < threshold &&\n          !(damaging ? d.damaging_label : d.faith_label)\n        );\n      }).length;\n\n      return {\n        groupOne: [groupOneTP, groupOneTN, groupOneFP, groupOneFN],\n        groupTwo: [groupTwoTP, groupTwoTN, groupTwoFP, groupTwoFN],\n        all: [\n          groupOneTP + groupTwoTP,\n          groupOneTN + groupTwoTN,\n          groupOneFP + groupTwoFP,\n          groupOneFN + groupTwoFN,\n        ],\n      };\n    } else {\n      return {\n        groupOne: this.state.groupOnePerformance,\n        groupTwo: this.state.groupTwoPerformance,\n        all: this.state.wholePerformance,\n      };\n    }\n  }\n\n  onTypeChange = (event, type) => {\n    if (type != null) {\n      let acc = 0;\n      let fpr = 0;\n      let fnr = 0;\n\n      if (this.props.performanceData != null) {\n        const data = this.props.performanceData;\n        acc =\n          100 * (type ? data[50].damaging_accuracy : data[50].faith_accuracy);\n        fpr = 100 * (type ? data[50].damaging_fpr : data[50].faith_fpr);\n        fnr = 100 * (type ? data[50].damaging_fnr : data[50].faith_fnr);\n      }\n\n      this.setState({\n        damaging: type,\n        defaultPerformance: [acc.toFixed(1), fpr.toFixed(1), fnr.toFixed(1)],\n      });\n\n      this.state.damaging = type;\n      this.state.defaultPerformance = [\n        acc.toFixed(1),\n        fpr.toFixed(1),\n        fnr.toFixed(1),\n      ];\n\n      this.getWholePerformance();\n      d3.select(\".compareChart svg\").remove();\n      this.drawChart = this.drawChart.bind(this);\n      this.drawChart();\n\n      d3.select(\".comparePerformance svg\").remove();\n      this.drawPerformanceChart = this.drawPerformanceChart.bind(this);\n      this.drawPerformanceChart();\n    }\n  };\n\n  onSliderChange = (event, threshold) => {\n    this.setState({\n      threshold: threshold,\n    });\n\n    this.getWholePerformance();\n\n    d3.select(\".compareChart svg\").remove();\n    this.drawChart = this.drawChart.bind(this);\n    this.drawChart();\n    d3.select(\".comparePerformance svg\").remove();\n    this.drawPerformanceChart = this.drawPerformanceChart.bind(this);\n    this.drawPerformanceChart();\n  };\n\n  onTextChange = (event) => {\n    if (event.target.value != \"\") {\n      this.onSliderChange(null, event.target.value);\n    }\n  };\n\n  componentDidMount() {\n    console.log(\"component mounted\");\n    let width = this.getWidth();\n    let height = width / 2.4;\n    let performanceWidth = this.getPerformanceWidth();\n    let performanceHeight = this.getPerformanceHeight();\n    let sliderRight = width - 40;\n    // this.getWholePerformance();\n    let acc = 0;\n    let fpr = 0;\n    let fnr = 0;\n    if (this.props.performanceData != null) {\n      const data = this.props.performanceData;\n      acc = data[50].damaging_accuracy * 100;\n      fpr = 100 * data[50].damaging_fpr;\n      fnr = 100 * data[50].damaging_fnr;\n    }\n\n    this.setState(\n      {\n        width: width,\n        height: height,\n        sliderRange: [10, sliderRight],\n        performanceWidth: performanceWidth,\n        performanceHeight: performanceHeight,\n        damaging: true,\n        defaultPerformance: [acc.toFixed(1), fpr.toFixed(1), fnr.toFixed(1)],\n      },\n      () => {\n        this.getWholePerformance();\n        this.drawChart();\n        this.drawPerformanceChart();\n      }\n    );\n\n    let resizedFn;\n    window.addEventListener(\"resize\", () => {\n      clearTimeout(resizedFn);\n      resizedFn = setTimeout(() => {\n        this.redrawChart();\n      }, 200);\n    });\n  }\n\n  redrawChart() {\n    let width = this.getWidth();\n    let performanceWidth = this.getPerformanceWidth();\n    let performanceHeight = this.getPerformanceHeight();\n    let sliderRight = width - 40;\n    this.setState({\n      width: width,\n      height: width / 2,\n      performanceWidth: performanceWidth,\n      performanceHeight: performanceHeight,\n\n      sliderRange: [10, sliderRight],\n    });\n    d3.select(\".compareChart svg\").remove();\n    this.drawChart = this.drawChart.bind(this);\n    this.drawChart();\n    d3.select(\".comparePerformance svg\").remove();\n    this.drawPerformanceChart = this.drawPerformanceChart.bind(this);\n    this.drawPerformanceChart();\n  }\n\n  getWholePerformance() {\n    if (\n      this.props.performanceData != null &&\n      this.props.groupOneData != null &&\n      this.props.groupTwoData != null\n    ) {\n      const performance = this.getPerformanceForThreshold();\n      const groupOnePerf = performance.groupOne;\n      const groupTwoPerf = performance.groupTwo;\n      const allPerf = getPerformance(performance.all);\n\n      this.state.wholePerformance = allPerf;\n      this.state.groupOnePerformance = groupOnePerf;\n      this.state.groupTwoPerformance = groupTwoPerf;\n\n      this.setState({\n        wholePerformance: allPerf,\n        groupOnePerformance: groupOnePerf,\n        groupTwoPerformance: groupTwoPerf,\n      });\n    }\n  }\n\n  drawPerformanceChart() {\n    const margin = this.getMargin();\n    let width = this.state.performanceWidth - margin.left - margin.right;\n    let height = this.state.performanceHeight - margin.top - margin.bottom;\n    let svg = d3\n      .select(\".comparePerformance\")\n      .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom);\n\n    let blockHeight = height / 3;\n    let vizHeight = blockHeight / 4;\n    // TP, TN, FP, FN\n    if (\n      this.state.groupOnePerformance != null &&\n      this.state.groupTwoPerformance != null\n    ) {\n      let groupOnePerformance = getPerformance(this.state.groupOnePerformance);\n      let groupTwoPerformance = getPerformance(this.state.groupTwoPerformance);\n\n      let wholePerformance = this.state.wholePerformance;\n      const x = d3\n        .scaleLinear()\n        .domain([0, 1])\n        .nice()\n        .range([margin.left, margin.left + width]);\n\n      function drawPerformance(\n        height,\n        defaultPerformance,\n        currentPerformance,\n        color,\n        larger,\n        groupNumber,\n        largerPerformance\n      ) {\n        const markHeight = 5;\n        const markWidth = 6;\n        const actualx = x(currentPerformance);\n\n        svg\n          .append(\"line\")\n          .attr(\"x1\", margin.left)\n          .attr(\"y1\", height)\n          .attr(\"x2\", margin.left + width)\n          .attr(\"y2\", height)\n          .attr(\"stroke-width\", 2)\n          .attr(\"stroke\", \"grey\");\n        svg\n          .append(\"line\")\n          .attr(\"x1\", actualx)\n          .attr(\"y1\", height - markHeight)\n          .attr(\"x2\", actualx)\n          .attr(\"y2\", height + markHeight)\n          .attr(\"stroke-width\", markWidth)\n          .attr(\"stroke\", color);\n\n        svg\n          .append(\"line\")\n          .attr(\"x1\", x(defaultPerformance))\n          .attr(\"y1\", height)\n          .attr(\"x2\", actualx)\n          .attr(\"y2\", height)\n          .attr(\"stroke-width\", 3)\n          .attr(\"stroke\", color);\n\n        let tooltipHalfWidth = 40;\n        let tooltipx = actualx - tooltipHalfWidth;\n\n        if (tooltipx < margin.left) {\n          tooltipx = margin.left;\n        } else if (tooltipx > width + margin.left + margin.right) {\n          tooltipx = width + margin.left + margin.right - tooltipHalfWidth;\n        }\n        let tooltipy = height + 10;\n        if (larger) {\n          if (groupNumber == 1) {\n            tooltipy = height - 35;\n          }\n\n          svg\n            .append(\"rect\")\n            .attr(\"x\", tooltipx)\n            .attr(\"y\", tooltipy)\n            .attr(\"width\", tooltipHalfWidth * 2)\n            .attr(\"height\", 24)\n            .attr(\"rx\", 4)\n            .attr(\"ry\", 4)\n            .attr(\"fill\", color);\n\n          svg\n            .append(\"text\")\n            .attr(\"x\", tooltipx + tooltipHalfWidth)\n            .attr(\"y\", tooltipy + 13)\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"alignment-baseline\", \"middle\")\n            .text(largerPerformance + \" more\")\n            .attr(\"font-family\", \"sans-serif\")\n            .attr(\"fill\", \"white\")\n            .attr(\"font-size\", \"14px\");\n        }\n      }\n\n      [\"Accuracy\", \"FPR\", \"FNR\"].forEach((item, index) => {\n        const groupOneHeight = blockHeight * index + vizHeight * 3;\n        const groupTwoHeight = margin.top + blockHeight * index + vizHeight * 4;\n\n        const groupOneCurrentPerformance = groupOnePerformance[index];\n        const groupTwoCurrentPerformance = groupTwoPerformance[index];\n\n        let min = groupOneCurrentPerformance;\n        let max = groupTwoCurrentPerformance;\n        let larger = 2;\n        if (groupOneCurrentPerformance > groupTwoCurrentPerformance) {\n          min = groupTwoCurrentPerformance;\n          max = groupOneCurrentPerformance;\n          larger = 1;\n        } else if (groupOneCurrentPerformance > groupTwoCurrentPerformance) {\n          larger = 0;\n        }\n\n        let largerPercentage = 0;\n        if (min === 0) {\n          largerPercentage = \"∞\";\n        } else {\n          largerPercentage = Math.round(((max - min) * 100) / max) + \"%\";\n        }\n\n        drawPerformance(\n          groupOneHeight,\n          wholePerformance[index],\n          groupOnePerformance[index],\n          d3.color(this.state.group1Color),\n          larger === 1,\n          1,\n          largerPercentage\n        );\n        drawPerformance(\n          groupTwoHeight,\n          wholePerformance[index],\n          groupTwoPerformance[index],\n          d3.color(this.state.group2Color),\n          larger === 2,\n          2,\n          largerPercentage\n        );\n      });\n    }\n  }\n\n  drawChart() {\n    const margin = { top: 20, right: 40, bottom: 0, left: 0 };\n    let width = this.state.width - margin.left - margin.right;\n    let height = width / 2.5;\n    // append the svg object to the body of the page\n    let svg = d3\n      .select(\".compareChart\")\n      .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height);\n\n    var customCross = {\n      draw: function (context, size) {\n        let s = Math.sqrt(size * 2) / 2;\n        let w = Math.sqrt(size) / 6;\n        context.moveTo(-s, w);\n        context.lineTo(s, w);\n        context.lineTo(s, -w);\n        context.lineTo(-s, -w);\n        context.closePath();\n        context.moveTo(w, s);\n        context.lineTo(w, -s);\n        context.lineTo(-w, -s);\n        context.lineTo(-w, s);\n        context.closePath();\n      },\n    };\n\n    const groupSize = width / 2.4;\n\n    const pack = (data) =>\n      d3\n        .pack()\n        .size([groupSize - 2, groupSize - 2])\n        .padding(3)(\n        d3\n          .hierarchy(data)\n          .sum((d) => d.value)\n          .sort((a, b) => b.value - a.value)\n      );\n\n    const threshold = this.state.threshold * 0.01;\n    const app = this;\n\n    if (\n      this.props.groupOneData != null &&\n      this.props.groupTwoData != null &&\n      this.state.groupOnePerformance != null &&\n      this.state.groupTwoPerformance != null\n    ) {\n      const groupOnePerf = this.state.groupOnePerformance;\n      const groupTwoPerf = this.state.groupTwoPerformance;\n      const groupOneTP = groupOnePerf[0],\n        groupOneTN = groupOnePerf[1],\n        groupOneFP = groupOnePerf[2],\n        groupOneFN = groupOnePerf[3];\n      const groupTwoTP = groupTwoPerf[0],\n        groupTwoTN = groupTwoPerf[1],\n        groupTwoFP = groupTwoPerf[2],\n        groupTwoFN = groupTwoPerf[3];\n\n      const dots = pack(dotData)\n        .children.slice(0, this.props.sliceNumber)\n        .map((d) => ({\n          x: d.x,\n          y: d.y,\n          r: d.r,\n          category: \"cross\",\n        }))\n        .sort(function (a, b) {\n          const centerX = margin.left + height;\n          const centerY = height / 2 + margin.top;\n          const distA = Math.sqrt(\n            Math.pow(a.x - centerX, 2) + Math.pow(a.y - centerY, 2)\n          );\n          const distB = Math.sqrt(\n            Math.pow(b.x - centerX, 2) + Math.pow(b.y - centerY, 2)\n          );\n          return distA - distB;\n        });\n\n      const dotRadius = dots[0].r;\n\n      const sortArr = (x, y) => {\n        const getStatus = (a) => {\n          const score = this.state.damaging\n            ? a.confidence_damage\n            : a.confidence_faith;\n          const label = this.state.damaging ? a.damaging_label : a.faith_label;\n          const pred = score > this.state.threshold;\n\n          if (pred && !label) return 1;\n          if (pred && label) return 2;\n          if (!pred && label) return 3;\n          if (!pred && !label) return 4;\n        };\n\n        return getStatus(x) - getStatus(y);\n      };\n\n      function getSymbolColor(data, color, fp, tp, fn, tn) {\n        let dd = [];\n        const cp = [fp, fp + tp, fp + tp + fn];\n        dots.forEach(function (dot, index) {\n          if (index < cp[0]) {\n            dd.push({\n              //false positive\n              x: dot.x,\n              y: dot.y,\n              category: 0,\n              color: color,\n              rev_id: +data[index].rev_id,\n            });\n          } else if (index >= cp[0] && index < cp[1]) {\n            dd.push({\n              //true positive\n              x: dot.x,\n              y: dot.y,\n              category: 1,\n              color: color,\n              rev_id: +data[index].rev_id,\n            });\n          } else if (index >= cp[1] && index < cp[2]) {\n            dd.push({\n              //false negative\n              x: dot.x,\n              y: dot.y,\n              category: 0,\n              color: d3.color(\"#909090\"),\n              rev_id: +data[index].rev_id,\n            });\n          } else {\n            dd.push({\n              //false positive\n              x: dot.x,\n              y: dot.y,\n              category: 1,\n              color: d3.color(\"#909090\"),\n              rev_id: +data[index].rev_id,\n            });\n          }\n        });\n\n        return dd;\n      }\n\n      this.props.groupOneData.sort(sortArr);\n      let groupOneDots = getSymbolColor(\n        this.props.groupOneData,\n        d3.color(this.state.group1Color),\n        groupOneFP,\n        groupOneTP,\n        groupOneFN,\n        groupOneTN\n      );\n      this.props.groupTwoData.sort(sortArr);\n      let groupTwoDots = getSymbolColor(\n        this.props.groupTwoData,\n        d3.color(this.state.group2Color),\n        groupTwoFP,\n        groupTwoTP,\n        groupTwoFN,\n        groupTwoTN\n      );\n\n      const parentWidth = this.getWidth();\n      const x = (x) => {\n        console.log(x);\n        return x + margin.left + width * 0.05;\n      };\n\n      svg\n        .append(\"g\")\n        .selectAll(\"path\")\n        .data(groupOneDots)\n        .join(\"path\")\n        .attr(\n          \"transform\",\n          (d) =>\n            `translate(${margin.left + width * 0.05 + d.x},${d.y}),rotate(45)`\n        )\n        .attr(\"fill\", (d) => d.color)\n        .attr(\n          \"d\",\n          d3\n            .symbol()\n            .type(function (d) {\n              if (d.category === 0) {\n                return customCross;\n              } else {\n                return d3.symbolCircle;\n              }\n            })\n            .size(dotRadius * dotRadius * 1.5)\n        );\n\n      svg\n        .append(\"g\")\n        .selectAll(\"path\")\n        .data(groupTwoDots)\n        .join(\"path\")\n        .attr(\n          \"transform\",\n          (d) =>\n            `translate(${margin.left + width * 0.55 + d.x},${d.y}),rotate(45)`\n        )\n        .attr(\"fill\", (d) => d.color)\n        .attr(\n          \"d\",\n          d3\n            .symbol()\n            .type(function (d) {\n              if (d.category === 0) {\n                return customCross;\n              } else {\n                return d3.symbolCircle;\n              }\n            })\n            .size(dotRadius * dotRadius * 1.5)\n        );\n    }\n  }\n\n  render() {\n    const message = this.state.damaging ? \"damaging\" : \"good faith\";\n    const opposite = this.state.damaging ? \"good\" : \"bad faith\";\n    return (\n      <React.Fragment>\n        <div\n          ref={this.visualizationRef}\n          style={{\n            width: \"55%\",\n            display: \"inline-block\",\n            verticalAlign: \"top\",\n          }}\n        >\n          <div className=\"upperSettings\">\n            <Grid container spacing={0}>\n              <TypeToggle\n                damaging={this.state.damaging}\n                onChange={this.onTypeChange}\n                gridSize={9}\n                key={this.state.damaging}\n              />\n              <Grid item xs={3} className=\"threshold\">\n                <div className=\"innerBox\">\n                  <Typography variant=\"subtitle2\">\n                    <Box>threshold</Box>\n                  </Typography>\n\n                  <Grid container spacing={2} className=\"options\">\n                    <Grid item xs={12} style={{ paddingTop: 0 }}>\n                      {/* <Typography component=\"div\" variant=\"h6\" className=\"text\">\n                        {this.state.threshold} %\n                      </Typography> */}\n                      <ThresholdInput\n                        value={this.state.threshold}\n                        multiplier={1}\n                        onChange={this.onTextChange}\n                      />\n                    </Grid>\n                  </Grid>\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n\n          <div\n            style={{\n              marginLeft: `${this.state.sliderRange[0]}px`,\n              width: `${\n                this.state.sliderRange[1] - this.state.sliderRange[0]\n              }px`,\n            }}\n          >\n            <Typography variant=\"subtitle2\">Fairness in Groups</Typography>\n            <ThresholdSlider\n              value={this.state.threshold}\n              defaultValue={60}\n              onChangeCommitted={this.onSliderChange}\n            />\n          </div>\n          <div className=\"compareChart\" ref={this.compareChartRef} />\n          <div\n            style={{\n              marginLeft: `${this.state.sliderRange[0]}px`,\n              width: `${\n                this.state.sliderRange[1] - this.state.sliderRange[0]\n              }px`,\n              transform: \"translate(0px,-20px)\",\n            }}\n          >\n            <div\n              style={{\n                width: \"50%\",\n                display: \"inline-block\",\n              }}\n            >\n              <Typography\n                variant=\"h6\"\n                component=\"div\"\n                style={{\n                  textAlign: \"center\",\n                  color: `${this.state.group1Color}`,\n                }}\n              >\n                Newcomer Edits\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                component=\"div\"\n                style={{ textAlign: \"center\" }}\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <Box width=\"80%\">\n                    Model performance on edits made by newcomer editors\n                  </Box>\n                </div>\n              </Typography>\n            </div>\n            <div\n              style={{\n                width: \"50%\",\n                display: \"inline-block\",\n                // transform: 'translate(0,-10px)',\n              }}\n            >\n              <Typography\n                variant=\"h6\"\n                component=\"div\"\n                style={{\n                  textAlign: \"center\",\n                  color: `${this.state.group2Color}`,\n                }}\n              >\n                Experienced Edits\n              </Typography>\n\n              <Typography\n                variant=\"body2\"\n                component=\"div\"\n                style={{ textAlign: \"center\" }}\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <Box width=\"80%\">\n                    Model performance on edits made by experienced editors\n                  </Box>\n                </div>\n              </Typography>\n            </div>\n            <div className=\"legendCard\">\n              <Typography component=\"div\" variant=\"subtitle2\">\n                legend\n              </Typography>\n              <Grid container spacing={0} style={{ marginTop: \"10px\" }}>\n                <Grid item xs={6}>\n                  <div className=\"legendMark\">\n                    <Circle size={12} color=\"#909090\" />{\" \"}\n                    <Typography component=\"span\" variant=\"body2\">\n                      Correctly classified {opposite} edits\n                    </Typography>\n                  </div>\n                </Grid>\n                <Grid item xs={6}>\n                  <div className=\"legendMark\">\n                    <Circle size={12} color={this.state.group1Color} />\n                    <span style={{ width: \"2px\" }} />\n                    <Circle size={12} color={this.state.group2Color} />{\" \"}\n                    <Typography component=\"span\" variant=\"body2\">\n                      Correctly classified {message} edits\n                    </Typography>\n                  </div>\n                </Grid>\n                <Grid item xs={6}>\n                  <div className=\"legendMark\">\n                    <Cross size={12} color=\"#909090\" />{\" \"}\n                    <Typography component=\"span\" variant=\"body2\">\n                      Uncaught {message} edits{\" \"}\n                    </Typography>\n                  </div>\n                </Grid>\n                <Grid item xs={6}>\n                  <div className=\"legendMark\">\n                    <Cross size={12} color={this.state.group1Color} />\n                    <span style={{ width: \"2px\" }} />\n                    <Cross size={12} color={this.state.group2Color} />{\" \"}\n                    <Typography component=\"span\" variant=\"body2\">\n                      Misclassified {opposite} edits{\" \"}\n                    </Typography>\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"sidePanel\" id=\"comparePerformanceSidePanel\">\n          <div\n            className=\"overallPerformance\"\n            ref={this.wholePerformanceRef}\n            style={{ borderBottom: \"1px solid lightgrey\" }}\n          >\n            <Typography component=\"div\" variant=\"subtitle2\">\n              PERFORMANCE\n            </Typography>\n            <Grid\n              container\n              className=\"performanceBlock\"\n              spacing={0}\n              style={{ marginTop: \"5px\", textAlign: \"left\", marginLeft: \"0px\" }}\n            >\n              <Grid item xs={4}>\n                <Typography component=\"div\" className=\"title\">\n                  ACC\n                </Typography>\n                <Typography component=\"div\">\n                  <Box className=\"data\">\n                    {(this.state.wholePerformance[0] * 100).toFixed(1)}%\n                  </Box>\n                </Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"div\" className=\"title\">\n                  FPR\n                </Typography>\n                <Typography component=\"div\">\n                  <Box className=\"data\">\n                    {(this.state.wholePerformance[1] * 100).toFixed(1)}%\n                  </Box>\n                </Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"div\" className=\"title\">\n                  FNR\n                </Typography>\n                <Typography component=\"div\">\n                  <Box className=\"data\">\n                    {(this.state.wholePerformance[2] * 100).toFixed(1)}%\n                  </Box>\n                </Typography>\n              </Grid>\n            </Grid>\n          </div>\n          <div style={{ display: \"flex\" }}>\n            <div\n              style={{\n                width: \"40%\",\n                display: \"inline-block\",\n              }}\n              className=\"groupPerformance\"\n            >\n              {[\"Accuracy\", \"FPR\", \"FNR\"].map((value, index) => {\n                return (\n                  <div\n                    style={{\n                      height: `${this.getMargin().blockHeight}px`,\n                      fontSize: \"12px\",\n                      transform: `translate(0px,7px)`,\n                    }}\n                  >\n                    <div\n                      style={{\n                        height: `${this.getMargin().chartHeight}px`,\n                      }}\n                    />\n                    <div\n                      style={{\n                        height: `${this.getMargin().chartHeight}px`,\n                        display: \"flex\",\n                        flexDirection: \"column-reverse\",\n                      }}\n                    >\n                      <Typography variant=\"body2\" className=\"classTitle\">\n                        {value}\n                      </Typography>\n                    </div>\n\n                    <div\n                      style={{\n                        height: `${this.getMargin().chartHeight}px`,\n                        display: \"flex\",\n                        flexDirection: \"column-reverse\",\n                      }}\n                    >\n                      <div>\n                        <div className=\"title\">newcomer edits</div>\n                        <div\n                          className=\"data\"\n                          style={{ color: this.state.group1Color }}\n                        >\n                          {this.state.groupOnePerformance === null\n                            ? \"...\"\n                            : (\n                                getPerformance(this.state.groupOnePerformance)[\n                                  index\n                                ] * 100\n                              ).toFixed(1) + \"%\"}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div\n                      style={{\n                        height: `${this.getMargin().chartHeight}px`,\n                        display: \"flex\",\n                        flexDirection: \"column-reverse\",\n                      }}\n                    >\n                      <div>\n                        <div className=\"title\">experienced edits</div>\n                        <div\n                          className=\"data\"\n                          style={{ color: this.state.group2Color }}\n                        >\n                          {this.state.groupTwoPerformance === null\n                            ? \"...\"\n                            : (\n                                getPerformance(this.state.groupTwoPerformance)[\n                                  index\n                                ] * 100\n                              ).toFixed(1) + \"%\"}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n            <div style={{ width: \"60%\", display: \"inline-block\" }}>\n              <div\n                className=\"comparePerformance\"\n                ref={this.comparePerformanceRef}\n              />\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GroupCompareVisualizer;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport data_balanced from \"../../data/data_balanced_1.csv\";\nimport GroupCompareVisualizer from \"./compare_visualizer\";\n\nconst groupSliceNumber = 100;\nclass GroupCompareChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anonData: null,\n      loggedData: null,\n      newcomerData: null,\n      experiencedData: null,\n      change: 0,\n    };\n  }\n\n  componentDidMount() {\n    d3.csv(data_balanced, (d) => {\n      return {\n        anonymous: d.anonymous == \"TRUE\" ? true : false,\n        newcomer: d.edit_years <= 8 ? true : false,\n        confidence_faith: +d.confidence_faith,\n        faith_label: d.goodfaith == \"TRUE\" ? true : false,\n        confidence_damage: +d.confidence_damage,\n        damaging_label: d.damaging == \"TRUE\" ? true : false,\n        rev_id: +d.rev_id,\n      };\n    }).then((data) => {\n      const anonData = data\n        .filter((d) => {\n          return d.anonymous;\n        })\n        .slice(0, groupSliceNumber);\n      const loggedData = data\n        .filter((d) => {\n          return !d.anonymous;\n        })\n        .slice(0, groupSliceNumber);\n\n      const newcomerData = data\n        .filter((d) => {\n          return d.newcomer;\n        })\n        .slice(0, groupSliceNumber);\n\n      const experiencedData = data\n        .filter((d) => {\n          return !d.newcomer;\n        })\n        .slice(0, groupSliceNumber);\n      this.setState({\n        anonData: anonData,\n        loggedData: loggedData,\n        newcomerData: newcomerData,\n        experiencedData: experiencedData,\n      });\n\n      console.log(newcomerData);\n      console.log(experiencedData);\n      this.setState({ change: 2 });\n    });\n  }\n\n  //   shouldComponentUpdate (nextProps, nextState) {\n  //     return true;\n  //   }\n\n  render() {\n    console.log(\"hi\");\n    console.log(this.props);\n    return (\n      <div style={{ display: \"flex\" }}>\n        {/* <Test data={this.state.data} key={this.state.change} /> */}\n        <GroupCompareVisualizer\n          groupOneData={this.state.newcomerData}\n          groupTwoData={this.state.experiencedData}\n          key={this.state.change}\n          performanceData={this.props.performanceData}\n          sliceNumber={groupSliceNumber}\n        />\n      </div>\n    );\n  }\n}\n\nexport default GroupCompareChart;\n","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ToggleButtonGroup, ToggleButton } from \"@material-ui/lab\";\nimport {\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport TypeToggle from \"../partials/typeToggle\";\nimport axios from \"axios\";\n\nclass Recommender extends Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n    this.state = {\n      damaging: true,\n      threshold: null,\n      damagingData: null,\n      goodfaithData: null,\n      recommendations: null,\n      range: -1,\n    };\n  }\n\n  onTypeChange = (event, type) => {\n    if (type != null) {\n      this.setState({ damaging: type });\n    }\n  };\n\n  onThresChange = (event, thres) => {\n    if (thres != null) {\n      let diffs = [\n        Math.abs(thres - this.getRec(\"Aggressive\")),\n        Math.abs(thres - this.getRec(\"Balanced\")),\n        Math.abs(thres - this.getRec(\"Cautious\")),\n      ];\n\n      let range = 0;\n      let minDiff = 1;\n      for (var i = 0; i < 3; i++) {\n        if (diffs[i] < minDiff) {\n          minDiff = diffs[i];\n          range = i;\n        }\n      }\n\n      this.setState({ threshold: thres, range: range });\n    }\n  };\n\n  onRangeChange = (event, range) => {\n    const ranges = [\"Aggressive\", \"Balanced\", \"Cautious\"];\n    if (range != null) {\n      this.onThresChange(event, this.getRec(ranges[range]));\n    }\n  };\n\n  onTextChange = (event) => {\n    this.onThresChange(\n      event,\n      event.target.value ? Number(event.target.value) : null\n    );\n  };\n\n  getData = () => {\n    function getObject(array) {\n      var newArray = {};\n      var arrayIdx = 0;\n      var i = 0.01;\n\n      while (i < 1 && arrayIdx < array.length) {\n        if (array[arrayIdx] && i - array[arrayIdx][\"threshold\"] < 0.000001) {\n          var elem = array[arrayIdx];\n          newArray[i.toFixed(2)] = {\n            \"!f1\": elem[\"!f1\"],\n            \"!precision\": elem[\"!precision\"],\n            \"!recall\": elem[\"!recall\"],\n            accuracy: elem[\"accuracy\"],\n            f1: elem[\"f1\"],\n            filter_rate: elem[\"filter_rate\"],\n            fpr: elem[\"fpr\"],\n            match_rate: elem[\"match_rate\"],\n            precision: elem[\"precision\"],\n            recall: elem[\"recall\"],\n          };\n          i = Number.parseFloat(Number.parseFloat(i + 0.01).toFixed(2));\n        }\n        arrayIdx = arrayIdx + 1;\n      }\n      return newArray;\n    }\n\n    axios\n      .get(\n        \"https://ores.wikimedia.org/v3/scores/enwiki/?models=damaging|goodfaith&model_info=statistics.thresholds.true\"\n      )\n      .then((res) => {\n        const damagingArray =\n          res.data.enwiki.models.damaging.statistics.thresholds.true;\n        const goodfaithArray =\n          res.data.enwiki.models.goodfaith.statistics.thresholds.true;\n        console.log(\"got data\");\n        this.setState({\n          damagingData: getObject(damagingArray),\n          goodfaithData: getObject(goodfaithArray),\n        });\n      });\n  };\n\n  getRecommendations() {\n    const models = [\"damaging\", \"goodfaith\"];\n    const ranges = [\n      { type: \"Aggressive\", param: '\"maximum precision @ recall >= 0.9\"' },\n      { type: \"Cautious\", param: '\"maximum recall @ precision >= 0.9\"' },\n    ];\n    var rec = {\n      damaging: { Aggressive: null, Cautious: null, Balanced: null },\n      goodfaith: { Aggressive: null, Cautious: null, Balanced: null },\n    };\n\n    for (const i in models) {\n      for (const j in ranges) {\n        axios\n          .get(\n            \"https://ores.wikimedia.org/v3/scores/enwiki/?models=\" +\n              models[i] +\n              \"&model_info=statistics.thresholds.true.\" +\n              ranges[j].param\n          )\n          .then((res) => {\n            rec[models[i]][ranges[j].type] = Number.parseFloat(\n              res.data.enwiki.models[\n                models[i]\n              ].statistics.thresholds.true[0].threshold.toFixed(2)\n            );\n          });\n      }\n      rec[models[i]][\"Balanced\"] = models[i] == \"damaging\" ? 0.63 : 0.5;\n    }\n    console.log(rec);\n    this.setState({ recommendations: rec });\n    this.state.recommendations = rec;\n    return rec;\n  }\n\n  getProp(prop, escape) {\n    if (\n      this.state.threshold != null &&\n      this.state.threshold > 0 &&\n      this.state.threshold <= 0.98\n    ) {\n      return this.state.damaging\n        ? this.state.damagingData[this.state.threshold.toFixed(2)][prop]\n        : this.state.goodfaithData[this.state.threshold.toFixed(2)][prop];\n    } else return escape;\n  }\n\n  getRec(range) {\n    let rec = this.state.recommendations;\n    if (rec == null)\n      rec = {\n        damaging: { Aggressive: 0.1, Cautious: 0.63, Balanced: 0.94 },\n        goodfaith: { Aggressive: 0.85, Cautious: 0.5, Balanced: 0.05 },\n      };\n    const mod = this.state.damaging ? \"damaging\" : \"goodfaith\";\n    return rec[mod][range];\n  }\n\n  componentDidMount() {\n    this.getData();\n    this.getRecommendations();\n    this.setState({\n      damaging: true,\n      threshold: null,\n      range: -1,\n    });\n  }\n\n  render() {\n    const borderColor = this.state.threshold ? \"#3777a5\" : \"#ddd\";\n    const message = this.state.damaging ? \"damaging\" : \"good faith\";\n    const opposite = this.state.damaging ? \"good\" : \"bad faith\";\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            width: \"100%\",\n            display: \"inline-block\",\n            verticalAlign: \"top\",\n          }}\n        >\n          <div className=\"upperSettings\">\n            <Grid container spacing={0}>\n              <TypeToggle\n                damaging={this.state.damaging}\n                onChange={this.onTypeChange}\n                gridSize={4}\n                key={this.state.damaging}\n              />\n              <Grid\n                item\n                xs={8}\n                style={{\n                  height: \"auto\",\n                  paddingLeft: 10,\n                  paddingBottom: 10,\n                  borderLeft: \"1px solid #d3d3d3\",\n                }}\n              >\n                <Typography component=\"div\" variant=\"subtitle2\">\n                  <Box>INTERACTION FLOW</Box>\n                </Typography>\n                <Grid\n                  container\n                  style={{ justifyContent: \"space-evenly\", height: \"100%\" }}\n                >\n                  {[\n                    \"1. Choose a Goal\",\n                    \"2. Tune Recommendation\",\n                    \"3. Request Performance\",\n                  ].map((text) => (\n                    <Typography\n                      component=\"span\"\n                      variant=\"h6\"\n                      style={{\n                        fontWeight: 400,\n                        paddingTop: 5,\n                        paddingRight: 50,\n                      }}\n                    >\n                      {text}\n                    </Typography>\n                  ))}\n                </Grid>\n              </Grid>\n            </Grid>\n          </div>\n          <div\n            style={{\n              display: \"inline-flex\",\n              width: \"80%\",\n              height: \"77vh\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              margin: \"0% 10%\",\n            }}\n          >\n            <ToggleButtonGroup\n              orientation=\"vertical\"\n              exclusive\n              value={this.state.range}\n              onChange={this.onRangeChange}\n              style={{\n                display: \"flex\",\n                width: 400,\n                flexDirection: \"column\",\n                textAlign: \"center\",\n                alignItems: \"center\",\n                justifyContent: \"space-evenly\",\n                height: \"100%\",\n                margin: 0,\n              }}\n            >\n              {[\n                {\n                  type: \"Aggressive\",\n                  subtitle: \"Tools for human reviewers\",\n                  description:\n                    \"Catch more \" +\n                    message +\n                    \" edits at the cost of some \" +\n                    opposite +\n                    \" edits being falsely predicted.\",\n                },\n                {\n                  type: \"Balanced\",\n                  subtitle: \"Tools for human reviewers\",\n                  description:\n                    \"Similar number of uncaught \" +\n                    message +\n                    \" edits and falsely predicted \" +\n                    opposite +\n                    \" edits.\",\n                },\n                {\n                  type: \"Cautious\",\n                  subtitle: \"Automated bots\",\n                  description:\n                    \"Less falsely predicted \" +\n                    opposite +\n                    \" edits at the cost of more uncaught \" +\n                    message +\n                    \" edits.\",\n                },\n              ].map((obj, index) => (\n                <ToggleButton value={index} className=\"recommendOptions\">\n                  <Grid\n                    container\n                    spacing={0}\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-evenly\",\n                    }}\n                  >\n                    <Grid\n                      item\n                      xs={6}\n                      style={{\n                        marginRight: 15,\n                        display: \"flex\",\n\n                        flexDirection: \"column\",\n                        justifyContent: \"space-between\",\n                      }}\n                    >\n                      <div>\n                        <h4>{obj.type} Model</h4>\n                        <h5>{obj.subtitle}</h5>\n                      </div>\n\n                      <p>{obj.description}</p>\n                    </Grid>\n                    <Grid item xs={5}>\n                      <img\n                        src={\n                          process.env.PUBLIC_URL +\n                          \"/recommender/\" +\n                          obj.type +\n                          \".svg\"\n                        }\n                        height=\"100%\"\n                        width=\"100%\"\n                      />\n                    </Grid>\n                  </Grid>\n                </ToggleButton>\n              ))}\n            </ToggleButtonGroup>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              {[\"Aggressive\", \"Balanced\", \"Cautious\"].map((type, index) => {\n                return (\n                  <div>\n                    <img\n                      src={\n                        process.env.PUBLIC_URL +\n                        \"/recommender/\" +\n                        type +\n                        (this.state.range == index ? \"Active\" : \"Inactive\") +\n                        \".svg\"\n                      }\n                    />\n                  </div>\n                );\n              })}\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                marginLeft: 0,\n              }}\n            >\n              <div className=\"card\" style={{ borderColor: borderColor }}>\n                <Typography\n                  component=\"div\"\n                  variant=\"subtitle2\"\n                  style={{ fontSize: 13, color: \"#000\" }}\n                >\n                  <Box>SUGGESTED THRESHOLD</Box>\n                </Typography>\n                <Input\n                  value={\n                    this.state.threshold\n                      ? this.state.threshold.toFixed(2)\n                      : \"N/A\"\n                  }\n                  onChange={this.onTextChange}\n                  helperText={\"N/A\"}\n                  inputProps={{\n                    step: 0.01,\n                    min: 0.01,\n                    max: 0.98,\n                    type: \"number\",\n                  }}\n                  style={{\n                    fontSize: 50,\n                    alignSelf: \"left\",\n                  }}\n                />\n                <Typography variant=\"body2\">\n                  This threshold will catch around\n                  <strong>\n                    {\" \"}\n                    {this.getProp(\"recall\", \"--\") == \"--\"\n                      ? \"--\"\n                      : (this.getProp(\"recall\", \"--\") * 100).toFixed(0)}\n                    %{\" \"}\n                  </strong>\n                  of the {\" \" + message} edits while having\n                  <strong>\n                    {\" \"}\n                    {this.getProp(\"fpr\", \"--\") == \"--\"\n                      ? \"--\"\n                      : (this.getProp(\"fpr\", \"--\") * 100).toFixed(0)}\n                    %{\" \"}\n                  </strong>\n                  of the {\" \" + opposite} edits misclassified.\n                </Typography>\n                <ExpansionPanel>\n                  <ExpansionPanelSummary>\n                    <Typography variant=\"h5\">\n                      See specific performance\n                    </Typography>\n                  </ExpansionPanelSummary>\n                  <ExpansionPanelDetails>\n                    <div>\n                      {[\n                        \"!f1\",\n                        \"!precision\",\n                        \"!recall\",\n                        \"accuracy\",\n                        \"f1\",\n                        \"filter_rate\",\n                        \"fpr\",\n                      ].map((prop) => (\n                        <Typography variant=\"body2\" style={{ margin: 5 }}>\n                          <strong>{prop}</strong>: {this.getProp(prop, \"N/A\")}\n                        </Typography>\n                      ))}\n                    </div>\n                  </ExpansionPanelDetails>\n                </ExpansionPanel>\n\n                <ExpansionPanel>\n                  <ExpansionPanelSummary>\n                    <Typography variant=\"h5\">\n                      Copy code for this threshold\n                    </Typography>\n                  </ExpansionPanelSummary>\n                  <ExpansionPanelDetails>\n                    <div\n                      style={{\n                        textAlign: \"left\",\n                        wordWrap: \"break-word\",\n                        fontFamily: \"monospace\",\n                      }}\n                    >\n                      <div\n                        style={{\n                          margin: 5,\n                          fontWeight: \"bold\",\n                        }}\n                      >\n                        def compute_metrics(y_true, y_pred_scores,{\" \"}\n                        {this.state.threshold}, model=\"\n                        {this.state.damaging ? \"damaging\" : \"goodfaith\"}\"):\n                      </div>\n                      {[\n                        \"# model = damaging or goodfaith\",\n                        \"# return a dictionary with metrics\",\n                        \"# y_true: a np array of true labels 1/0\",\n                        \"# y_pred_scores: a np array of predictions\",\n                      ].map((text, index) => (\n                        <div style={{ margin: 5 }}>\n                          {\"  \"}\n                          {text}\n                        </div>\n                      ))}\n                    </div>\n                  </ExpansionPanelDetails>\n                </ExpansionPanel>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Recommender;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ToggleButtonGroup, ToggleButton } from \"@material-ui/lab\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Radio from \"@material-ui/core/Radio\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport axios from \"axios\";\nimport ThresholdInput from \"../partials/thresholdInput\";\n\n/* Object Format (for oldData & newData):\n    {\n        damaging: <DAMAGING TRUE>,\n        goodfaith: <GOODFAITH TRUE>,\n        features: <FEATURES OBJECT>\n    } */\nclass FeatureInjector extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      damaging: 0.5,\n      goodfaith: 0.5,\n      curID: null,\n      oldData: null,\n      newData: null,\n      group: 1,\n      adjSeconds: null,\n      anon: null,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      damaging: 0.5,\n      goodfaith: 0.5,\n      curID: null,\n      group: 0,\n      adjSeconds: null,\n    });\n  }\n\n  onDamagingChange = (event) => {\n    if (event.target.value != null) {\n      let val = (event.target.value / 100).toFixed(2);\n      console.log(event.target.value, val);\n      this.setState({ damaging: val });\n    }\n  };\n\n  onGoodfaithChange = (event) => {\n    if (event.target.value != null) {\n      let val = (event.target.value / 100).toFixed(2);\n      console.log(event.target.value, val);\n      this.setState({ goodfaith: val });\n    }\n  };\n\n  onHighlightChange = (event, type) => {\n    if (type != null) {\n      this.setState({ group: type });\n    }\n  };\n\n  onSliderChange = (event, value) => {\n    if (value != null) {\n      this.setState({\n        adjSeconds: value,\n        anon: value == 0,\n      });\n    }\n  };\n\n  renderPieChart(title, damaging, score, prev = null) {\n    const positive =\n      score > (damaging ? this.state.damaging : this.state.goodfaith);\n\n    const prediction = damaging\n      ? positive\n        ? \"Damaging\"\n        : \"Not Damaging\"\n      : positive\n      ? \"Good Faith\"\n      : \"Bad Faith\";\n\n    var pie = d3\n      .pie()\n      .sort(null)\n      .value((d) => d.value);\n\n    var arc = d3.arc().innerRadius(0).outerRadius(40);\n\n    var data = [\n      { name: \"main\", value: score != null ? score : 0 },\n      { name: \"other\", value: 1 - score },\n    ];\n\n    function pieChartColor(name) {\n      return name == \"main\" ? mainColor(\"green\") : \"lightgrey\";\n    }\n\n    function mainColor(theDefault) {\n      return score != null ? (prev != null ? theDefault : \"grey\") : \"lightgrey\";\n    }\n\n    d3.select(\n      \".pieChart.\" + title.replace(/\\s/g, \"\") + damaging + \" svg\"\n    ).remove();\n\n    let chart = d3\n      .select(\".pieChart.\" + title.replace(/\\s/g, \"\") + damaging)\n      .append(\"svg\")\n      .attr(\"viewBox\", [-40, -40, 80, 80])\n      .attr(\"z-level\", 3);\n\n    const arcs = pie(data);\n\n    chart\n      .append(\"g\")\n      .selectAll(\"path\")\n      .data(arcs)\n      .join(\"path\")\n      .attr(\"fill\", (d) => pieChartColor(d.data.name))\n      .attr(\"d\", arc);\n\n    return (\n      <div class=\"pieChartElem\">\n        <Typography variant=\"h6\">{title}</Typography>\n        <div class=\"mainContainer\">\n          <div class={\"pieChart \" + title.replace(/\\s/g, \"\") + damaging} />\n          <div class=\"rightSide\">\n            <div class=\"scoreBox\">\n              <h3 style={{ color: mainColor(\"#444\") }}>\n                {score != null ? score.toFixed(2) : \"N/A\"}\n              </h3>\n              {prev != null && score != null && score != prev ? (\n                <h6 style={{ color: \"blue\" }}>\n                  {score > prev ? \"\\u25b2 \" : \"\\u25bc \"}\n                  {Math.abs(score - prev).toFixed(2)}\n                </h6>\n              ) : null}\n            </div>\n            {score != null ? (\n              <Typography\n                variant=\"body1\"\n                style={{\n                  color: prev != null ? \"black\" : \"grey\",\n                  marginRight: 0,\n                }}\n              >\n                Predicted as{\" \"}\n                <span\n                  style={{\n                    color:\n                      prev != null\n                        ? damaging === positive\n                          ? \"red\"\n                          : \"green\"\n                        : \"grey\",\n                    margin: 0,\n                  }}\n                >\n                  {prediction}\n                </span>\n              </Typography>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const marks = [\n      { value: 0, label: \"Anonymous\" },\n      { value: 1.577e8, label: \"5 years\" },\n      { value: 3.154e8, label: \"10 years\" },\n      { value: 4.73e8, label: \"15 years\" },\n    ];\n\n    return (\n      <Grid container>\n        {/* Disparity Highlighter */}\n        <Grid\n          item\n          md={6}\n          style={{\n            padding: 10,\n            paddingTop: 0,\n            borderRight: \"1px solid lightgrey\",\n            borderBottom: \"none\",\n            paddingBottom: 0,\n          }}\n          className=\"upperSettings\"\n        >\n          <Grid item xs={this.props.gridSize} className=\"modelOptions\">\n            <Typography component=\"div\" variant=\"subtitle2\">\n              <Box>Highlight Edits</Box>\n            </Typography>\n            <ToggleButtonGroup\n              exclusive\n              value={this.state.group}\n              onChange={this.onHighlightChange}\n              className=\"options\"\n              style={{ paddingBottom: 0 }}\n              //   style={{ width: \"90%\", justifyContent: \"space-between\" }}\n            >\n              <Typography\n                component={ToggleButton}\n                value={1}\n                variant=\"h6\"\n                className=\"text\"\n                style={{ fontSize: 20 }}\n              >\n                Newcomer / Experienced\n              </Typography>\n              <Typography\n                value={2}\n                component={ToggleButton}\n                variant=\"h6\"\n                className=\"text\"\n                style={{ fontSize: 20 }}\n              >\n                Anonymous / Logged-In\n              </Typography>\n              <Typography\n                value={0}\n                component={ToggleButton}\n                variant=\"h6\"\n                className=\"text\"\n                style={{ fontSize: 20 }}\n              >\n                None\n              </Typography>\n            </ToggleButtonGroup>\n          </Grid>\n        </Grid>\n        {/* Damaging & Goodfaith Inputs */}\n        <Grid item md={6} style={{ padding: 10, paddingTop: 0 }}>\n          <Typography variant=\"subtitle2\">Threshold Settings</Typography>\n          <Grid container>\n            <Grid\n              item\n              md={6}\n              style={{ display: \"inline-flex\", justifyContent: \"center\" }}\n            >\n              <h3 style={{ margin: 10, marginRight: 30, fontWeight: 500 }}>\n                Damaging:{\" \"}\n              </h3>\n              <ThresholdInput\n                value={this.state.damaging}\n                multiplier={100}\n                onChange={this.onDamagingChange}\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              style={{ display: \"inline-flex\", justifyContent: \"center\" }}\n            >\n              <h3 style={{ margin: 10, marginRight: 30, fontWeight: 500 }}>\n                Goodfaith:{\" \"}\n              </h3>\n              <ThresholdInput\n                value={this.state.goodfaith}\n                multiplier={100}\n                onChange={this.onGoodfaithChange}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        {/* Graph + Slider */}\n        <Grid\n          item\n          md={6}\n          style={{\n            padding: 10,\n            paddingTop: 0,\n            borderTop: \"1px solid lightgrey\",\n            borderRight: \"1px solid lightgrey\",\n          }}\n        >\n          <Typography variant=\"subtitle2\">Edit Data Point</Typography>\n\n          <Slider\n            style={{ margin: \"0 5%\", marginTop: 30, width: \"90%\" }}\n            max={5e8}\n            marks={marks}\n            onChange={this.onSliderChange}\n            value={this.state.adjSeconds}\n          />\n          <div class=\"injectionGraph\" />\n        </Grid>\n        {/* Pie Charts */}\n        <Grid\n          item\n          md={6}\n          style={{\n            padding: 10,\n            paddingTop: 0,\n            borderTop: \"1px solid lightgrey\",\n          }}\n        >\n          <Typography variant=\"subtitle2\">Performance</Typography>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"space-evenly\",\n              margin: \"0 3%\",\n              marginTop: 10,\n            }}\n          >\n            {this.state.curID == null ? (\n              <div className=\"legendCard\" style={{ padding: 5 }}>\n                <h3 style={{ margin: 10, fontWeight: 500 }}>\n                  No data point is currently selected\n                </h3>\n              </div>\n            ) : null}\n\n            <h3\n              style={{\n                color: this.state.curID == null ? \"grey\" : \"black\",\n                marginTop: 60,\n              }}\n            >\n              Damaging Score\n            </h3>\n            <div style={{ display: \"inline-flex\" }}>\n              {this.renderPieChart(\"New Score\", true, 0.67, 0.79)}\n              {this.renderPieChart(\"Original\", true, 0.79)}\n            </div>\n\n            <h3\n              style={{\n                color: this.state.curID == null ? \"grey\" : \"black\",\n                marginTop: 60,\n              }}\n            >\n              Goodfaith Score\n            </h3>\n            <div style={{ display: \"inline-flex\" }}>\n              {this.renderPieChart(\"New Score\", false, null, 0.31)}\n              {this.renderPieChart(\"Original\", false, 0.31)}\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default FeatureInjector;\n","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"../App.scss\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { grey } from \"@material-ui/core/colors\";\nimport { withTheme } from \"@material-ui/core\";\nimport Circle, { Cross } from \"../../src/partials/shape\";\n\nclass About extends Component {\n  getMainContent(obj) {\n    return (\n      <div>\n        <Typography variant=\"subtitle1\" style={{ textAlign: \"left\" }}>\n          {obj.title}\n        </Typography>\n        <div\n          style={{\n            marginTop: \"10px\",\n            marginBottom: 25,\n          }}\n        >\n          <Typography variant=\"body2\" style={{ color: \"grey\" }}>\n            {obj.desc}{\" \"}\n          </Typography>\n        </div>\n      </div>\n    );\n  }\n\n  getPredTableItem(title, desc, icon) {\n    return (\n      <td class=\"predTableElem\">\n        {icon}\n        <div>\n          <div class=\"boldText\">{title}</div>\n          <p style={{ color: \"grey\" }}>{desc}</p>\n        </div>\n      </td>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"aboutPage\">\n        <div className=\"aboutSection\" style={{ width: \"50%\" }}>\n          {this.getMainContent({\n            title: \"About ORES\",\n            desc:\n              \"ORES is a web service that provides machine learning services for Wikimedia projects. The system is designed to help human editors perform critical wiki-work and to increase their productivity by automating tasks like detecting vandalism and removing edits made in bad faith.\",\n          })}\n          <a href=\"https://ores.wikimedia.org/ui/\" target=\"_blank\">\n            Try ORES API\n          </a>\n        </div>\n        <div className=\"container\">\n          <div style={{ width: \"50%\", borderRight: \"1px solid lightgrey\" }}>\n            <div className=\"aboutSection\">\n              {this.getMainContent({\n                title: \"How ORES Works\",\n                desc:\n                  \"ORES scores individual edits taht are made to articles on Wikipedia. On the scale of 0 to 1, ORES scores describe the quality of edits and help humans determine which kinds of edits are damaging to articles and which kinds of edits are made in good faith.\",\n              })}\n              <table className=\"oresTable\" colspan={5}>\n                <tr>\n                  <td className=\"boldText\">Input</td>\n                  <td></td>\n                  <td className=\"boldText\">Model</td>\n                  <td></td>\n                  <td className=\"boldText\">Output</td>\n                </tr>\n                <tr>\n                  <td>\n                    <div className=\"aboutButton\">Edit: #124230</div>\n                  </td>\n                  <td>\n                    <img className=\"arrow\" src=\"about/arrow.png\" />\n                  </td>\n                  <td>\n                    <div className=\"oresText\">ORES</div>\n                  </td>\n                  <td>\n                    <img className=\"arrow\" src=\"about/arrow.png\" />\n                  </td>\n                  <td className=\"DGgrid\">\n                    <div>\n                      <div style={{ color: \"grey\", width: 75 }}>Damaging:</div>\n                      <div class=\"highlight bad\">0.87142</div>\n                    </div>\n                    <div>\n                      <div style={{ color: \"grey\", width: 75 }}>\n                        Goodfaith:{\" \"}\n                      </div>\n                      <div class=\"highlight good\">0.92245</div>\n                    </div>\n                  </td>\n                </tr>\n              </table>\n            </div>\n            <div\n              className=\"aboutSection\"\n              style={{ borderTop: \"1px solid lightgrey\" }}\n            >\n              {this.getMainContent({\n                title: \"How the Threshold Works\",\n                desc:\n                  \"Setting the threshold can change the way the model predicts. With different thresholds, the same score can have different prediction results\",\n              })}\n              <div class=\"thresList\">\n                <div>\n                  <div class=\"boldText\">Damaging Score:</div>\n                  <div class=\"highlight\">0.87142</div>\n                </div>\n              </div>\n              <div class=\"thresList\">\n                <div>\n                  <div>1. Threshold = 0.5</div>\n                  <div class=\"highlight bad\">Damaging</div>\n                </div>\n                <div>\n                  <div>2. Threshold = 0.9</div>\n                  <div class=\"highlight good\">Non-damaging</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div\n            className=\"aboutSection\"\n            style={{ width: \"50%\", paddingLeft: 30 }}\n          >\n            {this.getMainContent({\n              title: \"Types of Predictions\",\n              desc:\n                \"Depending on what ORES predicts and whether the prediction is correct, there are four types of possible results: True Positives, False Positives, True Negatives, and False Negatives.\",\n            })}\n            <table\n              cellSpacing={0}\n              cellPadding={0}\n              style={{ margin: \"auto\", width: \"90%\" }}\n            >\n              <tr style={{ spacing: 0 }}>\n                {this.getPredTableItem(\n                  \"True Positive\",\n                  \"Actual damaging edits predicted as damaging\",\n                  <Circle color=\"#C57619\" size={12} />\n                )}\n                {this.getPredTableItem(\n                  \"False Positive\",\n                  \"Actual good edits predicted as damaging\",\n                  <Cross color=\"#C57619\" size={12} />\n                )}\n              </tr>\n              <tr>\n                {this.getPredTableItem(\n                  \"True Negative\",\n                  \"Actual good edits predicted as non-damaging\",\n                  <Circle color=\"#909090\" size={12} />\n                )}\n                {this.getPredTableItem(\n                  \"False Negative\",\n                  \"Actual damaging edits predicted as non-damaging\",\n                  <Cross color=\"#909090\" size={12} />\n                )}\n              </tr>\n            </table>\n            <table class=\"predLegend\" cellSpacing={0} cellPadding={0}>\n              <tr>\n                <td>\n                  <Circle size={12} color=\"#C57619\" />\n                  <Cross size={12} color=\"#C57619\" />\n                  <div class=\"text\">Damaging Prediction</div>\n                </td>\n                <td>\n                  <Circle size={12} color=\"#C57619\" />\n                  <Circle size={12} color=\"#909090\" />\n                  <div class=\"text\">Correct Prediction</div>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <Circle size={12} color=\"#909090\" />\n                  <Cross size={12} color=\"#909090\" />\n                  <div class=\"text\">Non-Damaging Prediction</div>\n                </td>\n                <td>\n                  <Cross size={12} color=\"#C57619\" />\n                  <Cross size={12} color=\"#909090\" />\n                  <div class=\"text\">Incorrect Prediction</div>\n                </td>\n              </tr>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\nimport Chart from \"./threshold_explorer/threshold_explorer_section\";\nimport GroupCompareChart from \"./group_compare/section\";\nimport Recommender from \"./recommender\";\nimport FeatureInjector from \"./injection\";\nimport Typography from \"@material-ui/core/Typography\";\nimport data_performance from \"../data/performance.csv\";\nimport * as d3 from \"d3\";\nimport styled from \"styled-components\";\nimport { curveNatural } from \"d3\";\nimport { Route, Switch } from \"react-router-dom\";\nimport About from \"./about\";\n\nexport const SectionHeader = styled.div`\n  padding-left: 10px;\n  padding-top: 10px;\n  padding-bottom: 30px;\n  border-bottom: 1px solid lightgrey;\n`;\n\nexport const Section = styled.div`\n  display: block;\n  margin-bottom: 0vh;\n`;\n\nclass MainContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      performance_data: null,\n      change: 0,\n    };\n  }\n\n  componentDidMount() {\n    d3.csv(data_performance, (d) => {\n      return {\n        threshold: +d.threshold,\n        damaging_accuracy: +d.damaging_accuracy,\n        damaging_fpr: +d.damaging_fpr,\n        damaging_fnr: +d.damaging_fnr,\n        faith_accuracy: +d.faith_accuracy,\n        faith_fpr: +d.faith_fpr,\n        faith_fnr: +d.faith_fnr,\n      };\n    }).then((data) => {\n      this.setState({ performance_data: data });\n      this.setState({ change: 1 });\n    });\n  }\n\n  sectionHeader(title, description) {\n    return (\n      <SectionHeader>\n        <Typography variant=\"subtitle1\" style={{ textAlign: \"left\" }}>\n          {title}\n        </Typography>\n        <div\n          style={{\n            width: \"50%\",\n            marginTop: \"10px\",\n          }}\n        >\n          <Typography variant=\"body2\" style={{ color: \"grey\" }}>\n            {description}{\" \"}\n          </Typography>\n        </div>\n      </SectionHeader>\n    );\n  }\n\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/recommender\">\n          <Section>\n            {this.sectionHeader(\n              \"Threshold Recommender\",\n              \"The threshold recommender helps you decide a threshold that aligns with your model preferences.\"\n            )}\n            <Recommender\n              performanceData={this.state.performance_data}\n              key={this.state.change}\n            />\n          </Section>\n        </Route>\n        <Route path=\"/disparity\">\n          <Section>\n            {this.sectionHeader(\n              \"Disparity Visualizer\",\n              \"This visualization provides insights on how the model performs for wiki’s edited by different user groups; this may help you weigh the pros and cons of picking the threshold.\"\n            )}\n            <GroupCompareChart\n              performanceData={this.state.performance_data}\n              key={this.state.change}\n            />\n          </Section>\n        </Route>\n        <Route path=\"/explorer\">\n          <Section>\n            {this.sectionHeader(\n              \"Threshold Explorer\",\n              \"Threshold Explorer helps you visualize model performance under specific thresholds with an example dataset. To start, select a model below, then pick a threshold.\"\n            )}\n            <Chart\n              performanceData={this.state.performance_data}\n              key={this.state.change}\n            />\n          </Section>\n        </Route>\n        <Route path=\"/injection\">\n          {this.sectionHeader(\n            \"Feature Injection\",\n            \"Besides the edit content, ORES also makes predictions based on the experience of the editor. Feature injection allows you to select and edit and see how the prediction changes if it's made by a different editor.\"\n          )}\n          <FeatureInjector />\n        </Route>\n        <Route component={About} />\n      </Switch>\n    );\n  }\n}\n\nexport default MainContent;\n","import React, { Component } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Box from \"@material-ui/core/Box\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.scss\";\n\nclass DrawerList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { selected: -1 };\n    this.clickSection = this.clickSection.bind(this);\n  }\n\n  clickSection(index) {\n    this.setState({ selected: index });\n    console.log(\"ha\");\n    console.log(index);\n  }\n\n  render() {\n    return (\n      <List style={{ marginTop: \"10vh\" }}>\n        {[\n          { text: \"About ORES\", path: \"/about-ores\" },\n          { text: \"Threshold Explorer\", path: \"/explorer/\" },\n          { text: \"Disparity Visualizer\", path: \"/disparity/\" },\n          { text: \"Threshold Recommender\", path: \"/recommender/\" },\n          //   { text: \"Feature Injection\", path: \"/injection\" },\n        ].map((obj, index) => (\n          <Link to={obj.path}>\n            <ListItem\n              className={this.props.klass}\n              button\n              key={obj.text}\n              onClick={() => this.clickSection(index)}\n            >\n              <div style={{ width: \"12.5%\" }} />\n              <div style={{ width: \"87.5%\" }}>\n                <Typography component=\"div\">\n                  <Box\n                    className={\n                      this.state.selected === index\n                        ? \"active-section\"\n                        : \"inactive-section\"\n                    }\n                  >\n                    {obj.text}\n                  </Box>\n                </Typography>\n              </div>\n            </ListItem>\n          </Link>\n        ))}\n      </List>\n    );\n  }\n}\n\nexport default DrawerList;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport * as d3 from \"d3\";\nimport Box from \"@material-ui/core/Box\";\nimport Chart from \"./components/threshold_explorer/threshold_explorer_section\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\nimport { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport styled from \"styled-components\";\nimport MainContent from \"./components/content\";\nimport DrawerList from \"./partials/drawerList\";\n\nimport { HashRouter, BrowserRouter, Link } from \"react-router-dom\";\n\nconst SectionHeader = styled.div`\n  padding-left: 10px;\n  padding-top: 5px;\n  padding-bottom: 30px;\n  border-bottom: 1px solid lightgrey;\n`;\n\n// const PerformanceTitle = styled.h1`\n//   font-size: 1.1em;\n//   text-align: left;\n//   margin-bottom: 0px;\n//   font-weight: 800;\n// `;\n\nconst Section = styled.div`\n  display: block;\n  margin-bottom: 15vh;\n`;\n\nconst drawerWidth = 270;\n\nlet theme = createMuiTheme({\n  typography: {\n    root: {\n      component: \"div\",\n    },\n    fontFamily: \"Noto Sans KR\",\n    subtitle1: {\n      fontFamily: \"Noto Serif\",\n      fontSize: \"24px\",\n    },\n    subtitle2: {\n      fontSize: \"12px\",\n      marginTop: \"10px\",\n      color: \"#B0B0B0\",\n      fontWeight: \"bold\",\n      textTransform: \"uppercase\",\n      textAlign: \"left\",\n    },\n    h6: {\n      fontWeight: \"bold\",\n      fontSize: \"16px\",\n      textAlign: \"left\",\n    },\n    body1: {\n      // textAlign: 'left',\n      fontSize: \"14px\",\n    },\n    body2: {\n      textAlign: \"left\",\n      fontSize: \"14px\",\n    },\n    button: {\n      fontStyle: \"italic\",\n    },\n    h5: {\n      fontSize: \"15px\",\n      color: \"#3777a5\",\n      fontWeight: \"bold\",\n      textTransform: \"none\",\n      textAlign: \"left\",\n    },\n  },\n});\n\ntheme = responsiveFontSizes(theme);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    // fontFamily: 'Noto Sans, sans-serif',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    textAlign: \"center\",\n    position: \"relative\",\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    paddingTop: \"35px\",\n    paddingBottom: \"35px\",\n  },\n  paper: {\n    textAlign: \"left\",\n    padding: \"20px 20px\",\n  },\n  list: {\n    fontSize: \"16px\",\n    textDecoration: \"none\",\n  },\n  // necessary for content to be below app bar\n  toolbar: {\n    padding: theme.spacing(2),\n  },\n  content: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: \"1.5vh\",\n    height: \"100vh\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL + \"/\"}>\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n          <body>\n            <div className={classes.root}>\n              <Drawer\n                className={classes.drawer}\n                variant=\"permanent\"\n                classes={{ paper: classes.drawerPaper }}\n                anchor=\"left\"\n              >\n                <Link to=\"/\">\n                  <Paper className={classes.paper} elevation=\"0\">\n                    <div style={{ textAlign: \"center\" }}>\n                      <Typography variant=\"subtitle1\">WIKIPEDIA</Typography>\n                      <Typography style={{ textAlign: \"center\" }}>\n                        ORES Explorer\n                      </Typography>\n                    </div>\n                  </Paper>\n                </Link>\n                <DrawerList klass={classes.list} />\n                <List\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"120px\",\n                    width: \"100%\",\n                  }}\n                >\n                  {[\n                    // { text: \"About ORES Explorer\", path: \"/about-us\" },\n                    // { text: \"External Resources\", path: \"/external\" },\n                  ].map((obj, index) => (\n                    <Link to={obj.path}>\n                      <ListItem className={classes.list} button key={obj.text}>\n                        <div style={{ width: \"12.5%\" }} />\n                        <div style={{ width: \"87.5%\" }}>\n                          <Typography component=\"div\">\n                            <Box color=\"#989898\">{obj.text}</Box>\n                          </Typography>\n                        </div>\n                      </ListItem>\n                    </Link>\n                  ))}\n                </List>\n              </Drawer>\n              <main className={classes.content}>\n                <MainContent />\n              </main>\n            </div>\n          </body>\n        </div>\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render (\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById ('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister ();\n","module.exports = __webpack_public_path__ + \"static/media/performance.760a321c.csv\";"],"sourceRoot":""}