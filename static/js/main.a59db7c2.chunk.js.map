{"version":3,"sources":["logo.svg","partials/slider.jsx","components/threshold_explorer/threshold_performance.jsx","components/threshold_explorer/threshold_explorer.jsx","components/threshold_explorer/threshold_explorer_section.js","components/group_compare/compare_performance.jsx","components/group_compare/compare_visualizer.jsx","components/group_compare/section.jsx","components/content.jsx","App.js","serviceWorker.js","index.js","data/performance.csv","data/data_not-balanced.csv","data/data_group.csv"],"names":["module","exports","ThresholdeSlider","props","getText","value","state","bind","Fragment","style","transform","width","display","textAlign","Typography","fontWeight","this","color","OrangeSlider","valueLabelDisplay","valueLabelFormat","aria-label","defaultValue","onChangeCommitted","BlackSlider","Component","makeStyles","theme","root","spacing","margin","height","withStyles","paddingTop","paddingBottom","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","opacity","Slider","fontSize","ThresholdPerformance","chartPerformanceRef","React","createRef","getBoxHeight","getWidthHeightRatio","getMargin","getWidth","drawChart","redrawChart","threshold","current","parentElement","offsetWidth","top","right","bottom","inBetween","resizedFn","setState","window","addEventListener","clearTimeout","setTimeout","d3","remove","performance_data","dataCollection","map","d","Math","round","damaging_accuracy","damaging_fpr","damaging_fnr","eachHeight","svg","append","attr","getPerformanceColor","type","perform","getStrokeColor","preValue","currentValue","forEach","data","index","currentThreshold","x","domain","nice","range","y","getY","xAxis","g","call","tickSize","getXAxis","line","defined","isNaN","area","x1","x2","number","y0","y1","datum","filter","getAreaColor","text","ticks","verticalAlign","className","ref","padding","flexDirection","justifyContent","marginBottom","variant","ThresholdExplorer","onSliderChange","event","chartRef","widthHeightRatio","graph1Scale","dotWidth","sliderRange","sliderRight","diameter","dd","circles","xvalue","parseFloat","confidence_damage","toFixed","ceil","correct","damaging_label","damaging_predict","sort","a","b","ca","prev","cnt","abs","category","dodge","shape","s","size","selectAll","join","Box","key","Chart","change","data_balanced","confidence_faith","faith_label","goodfaith","damaging","then","slice","nextProps","nextState","performanceData","getColor","accuracy","getPerformance","TP","TN","FP","FN","GroupCompareVisualizer","getWholePerformance","drawPerformanceChart","visualizationRef","compareChartRef","comparePerformanceRef","wholePerformanceRef","getPerformanceWidth","getPerformanceForThreshold","performanceWidth","group1Color","group2Color","wholePerformance","defaultPerformance","anonPerformance","loggedPerformance","performanceHeight","offsetHeight","anonData","loggedData","anonFP","length","anonTP","anonFN","anonTN","logFP","logTP","logFN","anon","logged","Logged","getPerformanceHeight","acc","fpr","fnr","performance","anonPerf","loggedPerf","blockHeight","vizHeight","drawPerformance","currentPerformance","perf","item","loggedHeight","customCross","draw","context","sqrt","w","moveTo","lineTo","closePath","groupSize","getSymbolColor","fp","tp","fn","tn","cp","dots","dot","push","dotData","sum","children","sliceNumber","r","centerX","centerY","pow","dotRadius","anonDots","logDots","component","borderBottom","Grid","container","xs","GroupCompareChart","anonymous","console","log","SectionHeader","styled","div","Section","MainContent","data_performance","faith_accuracy","faith_fpr","faith_fnr","createMuiTheme","typography","fontFamily","subtitle1","subtitle2","textTransform","h6","body1","body2","button","fontStyle","useStyles","appBar","drawer","flexShrink","drawerPaper","paper","list","toolbar","content","flexGrow","palette","background","default","App","classes","ThemeProvider","Drawer","anchor","Paper","elevation","List","ListItem","ListItemText","primary","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a59db7c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles, makeStyles} from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nclass ThresholdeSlider extends Component {\n  constructor (props) {\n    super (props);\n    this.getText = this.getText.bind (this);\n  }\n\n  getText = value => {\n    return `${value}%`;\n  };\n\n  state = {};\n  render () {\n    // const classes = useStyles ();\n\n    return (\n      <React.Fragment>\n        <div style={{transform: 'translate(0,20px)'}}>\n          <div\n            style={{width: '50%', display: 'inline-block', textAlign: 'left'}}\n          >\n            <Typography style={{fontWeight: 'bold'}}>\n              {[<span>&#9664;</span>, ' Identify More']}\n            </Typography>\n          </div>\n          <div\n            style={{width: '50%', display: 'inline-block', textAlign: 'right'}}\n          >\n            <Typography style={{fontWeight: 'bold'}}>\n              {['Identify Less ', <span>&#9654;</span>]}\n            </Typography>\n          </div>\n        </div>\n        <div>\n          {this.props.color === 'orange'\n            ? <OrangeSlider\n                valueLabelDisplay=\"auto\"\n                valueLabelFormat={this.getText}\n                aria-label=\"pretto slider\"\n                defaultValue={this.props.defaultValue}\n                onChangeCommitted={this.props.onChangeCommitted}\n              />\n            : <BlackSlider\n                valueLabelDisplay=\"auto\"\n                valueLabelFormat={this.getText}\n                aria-label=\"pretto slider\"\n                defaultValue={this.props.defaultValue}\n                onChangeCommitted={this.props.onChangeCommitted}\n              />}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ThresholdeSlider;\n\nconst useStyles = makeStyles (theme => ({\n  root: {\n    width: 300 + theme.spacing (3) * 2,\n  },\n  margin: {\n    height: theme.spacing (3),\n  },\n}));\n\nconst OrangeSlider = withStyles ({\n  root: {\n    color: '#C57619',\n    height: 10,\n    paddingTop: '50px',\n    paddingBottom: '0px',\n  },\n  thumb: {\n    height: 18,\n    width: 18,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -9,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50%+12px)',\n  },\n  track: {\n    height: 4,\n    borderRadius: 4,\n    color: '#909090',\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4,\n    color: '#C57619',\n    opacity: '100%',\n  },\n}) (Slider);\n\nconst BlackSlider = withStyles ({\n  root: {\n    color: '#000000',\n    height: 10,\n    paddingTop: '50px',\n    paddingBottom: '0px',\n  },\n  thumb: {\n    height: 18,\n    width: 18,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -9,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50%+12px)',\n    fontSize: '12px',\n  },\n  track: {\n    height: 4,\n    borderRadius: 4,\n    color: '#909090',\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4,\n    color: '#000000',\n    opacity: '100%',\n  },\n}) (Slider);\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport styled from 'styled-components';\n\nclass ThresholdPerformance extends Component {\n  constructor (props) {\n    super (props);\n    this.chartPerformanceRef = React.createRef ();\n    this.getBoxHeight = this.getBoxHeight.bind (this);\n    this.getWidthHeightRatio = this.getWidthHeightRatio.bind (this);\n    this.getMargin = this.getMargin.bind (this);\n    this.getWidth = this.getWidth.bind (this);\n    this.drawChart = this.drawChart.bind (this);\n    this.redrawChart = this.redrawChart.bind (this);\n    this.state = {\n      threshold: 80,\n      width: 1000,\n      height: 1000,\n    };\n  }\n\n  getWidthHeightRatio () {\n    return 2;\n  }\n\n  getWidth () {\n    if (this.chartPerformanceRef.current == null) {\n      return this.state.width;\n    } else {\n      return this.chartPerformanceRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  getMargin () {\n    return {\n      top: 30,\n      right: 5,\n      bottom: 20,\n      left: 30,\n      inBetween: this.state.width * 0.2,\n    };\n  }\n  componentDidMount () {\n    let width = this.getWidth ();\n    let height = width * this.getWidthHeightRatio ();\n\n    this.setState (\n      {\n        width: width,\n        height: height,\n      },\n      () => {\n        this.drawChart ();\n      }\n    );\n\n    let resizedFn;\n    window.addEventListener ('resize', () => {\n      clearTimeout (resizedFn);\n      resizedFn = setTimeout (() => {\n        this.redrawChart ();\n      }, 200);\n    });\n  }\n\n  redrawChart () {\n    let width = this.getWidth ();\n    this.setState ({width: width, height: width * this.getWidthHeightRatio ()});\n    d3.select ('.performanceChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n  }\n\n  drawChart () {\n    if (this.props.performance_data != null) {\n      const dataAccuracy = this.props.performance_data.map (d => ({\n        threshold: d.threshold,\n        value: Math.round (d.damaging_accuracy * 100),\n      }));\n\n      const dataFPR = this.props.performance_data.map (d => ({\n        threshold: d.threshold,\n        value: Math.round (d.damaging_fpr * 100),\n      }));\n\n      const dataFNR = this.props.performance_data.map (d => ({\n        threshold: d.threshold,\n        value: Math.round (d.damaging_fnr * 100),\n      }));\n\n      const dataCollection = [dataAccuracy, dataFPR, dataFNR];\n\n      const margin = this.getMargin ();\n      let width = this.state.width - margin.left - margin.right;\n      let height = this.state.height - margin.top - margin.bottom;\n      let eachHeight = (height - margin.inBetween * 2) / 3;\n\n      const betweenThreshold = (x1, x2, number) => {\n        return (number >= x1 && number <= x2) || (number <= x1 && number >= x2);\n      };\n\n      //   const xAxis = g =>\n      //     g\n      //       .attr ('transform', `translate(0,${height / 2})`)\n      //       .call (d3.axisBottom (x).ticks (width / 80).tickSizeOuter (0));\n\n      const getXAxis = (x, type) => {\n        switch (type) {\n          case 0:\n            return function (g) {\n              g\n                .attr ('transform', `translate(0,${eachHeight + margin.top})`)\n                .attr ('class', 'axisGreyY')\n                .call (d3.axisBottom (x).tickSize (0));\n            };\n            break;\n          case 1:\n            return function (g) {\n              g\n                .attr (\n                  'transform',\n                  `translate(0,${eachHeight * 2 + margin.inBetween + margin.top})`\n                )\n                .attr ('class', 'axisGreyY')\n                .call (d3.axisBottom (x).tickSize (0));\n            };\n            break;\n          default:\n            return function (g) {\n              g\n                .attr ('transform', `translate(0,${height + margin.top})`)\n                .attr ('class', 'axisGreyY')\n                .call (d3.axisBottom (x).tickSize (0));\n            };\n        }\n      };\n\n      //   const y = d3\n      //     .scaleLinear ()\n      //     .domain ([0, d3.max (data, d => d.value)])\n      //     .nice ()\n      //     .range ([height / 2, margin.top]);\n\n      const getY = type => {\n        switch (type) {\n          case 0:\n            return d3\n              .scaleLinear ()\n              .domain ([0, d3.max (dataCollection[0], d => d.value)])\n              .nice ()\n              .range ([eachHeight + margin.top, margin.top]);\n            break;\n          case 1:\n            return d3\n              .scaleLinear ()\n              .domain ([0, d3.max (dataCollection[1], d => d.value)])\n              .nice ()\n              .range ([\n                eachHeight * 2 + margin.inBetween + margin.top,\n                eachHeight + margin.inBetween + margin.top,\n              ]);\n            break;\n          default:\n            return d3\n              .scaleLinear ()\n              .domain ([0, d3.max (dataCollection[2], d => d.value)])\n              .nice ()\n              .range ([\n                height + margin.top,\n                eachHeight * 2 + margin.inBetween * 2 + margin.top,\n              ]);\n        }\n      };\n\n      let svg = d3\n        .select ('.performanceChart')\n        .append ('svg')\n        .attr ('width', width + margin.left + margin.right)\n        .attr ('height', height + margin.top + margin.bottom);\n\n      const getPerformanceColor = (type, perform) => {\n        if (type == 'stroke') {\n          //color for stroke\n          if (perform == 1) {\n            return d3.color ('#159256');\n          } else if (perform == 0) {\n            return d3.color ('#878787');\n          } else {\n            return d3.color ('#921515');\n          }\n        } else {\n          //color for area\n          if (perform == 1) {\n            return d3.color ('#F0F7F4');\n          } else if (perform == 0) {\n            return d3.color ('#E8E8E8');\n          } else {\n            return d3.color ('#F7F0F0');\n          }\n        }\n      };\n\n      const getAreaColor = (type, preValue, currentValue) => {\n        if (type == 0) {\n          //accuracy -> the higher the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor ('area', 1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor ('area', -1);\n          } else {\n            return getPerformanceColor ('area', 0);\n          }\n        } else {\n          //FPR, FNR -> the lower the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor ('area', -1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor ('area', 1);\n          } else {\n            return getPerformanceColor ('area', 0);\n          }\n        }\n      };\n\n      const getStrokeColor = (type, preValue, currentValue) => {\n        if (type == 0) {\n          //accuracy -> the higher the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor ('stroke', 1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor ('stroke', -1);\n          } else {\n            return getPerformanceColor ('stroke', 0);\n          }\n        } else {\n          //FPR, FNR -> the lower the better\n          if (preValue < currentValue) {\n            //green\n            return getPerformanceColor ('stroke', -1);\n          } else if (preValue > currentValue) {\n            //red\n            return getPerformanceColor ('stroke', 1);\n          } else {\n            return getPerformanceColor ('stroke', 0);\n          }\n        }\n      };\n\n      dataCollection.forEach ((data, index) => {\n        const defaultValue = data[50].value;\n        const currentValue = data[this.props.threshold].value;\n        const currentThreshold = this.props.threshold;\n        const x = d3\n          .scaleLinear ()\n          .domain ([0, d3.max (data, d => d.threshold)])\n          .nice ()\n          .range ([margin.left, width - margin.right]);\n\n        const y = getY (index);\n        const xAxis = getXAxis (x, index);\n\n        const yAxis = g =>\n          g\n            .attr ('transform', `translate(${margin.left},0)`)\n            .attr ('class', 'axisGrey')\n            .call (d3.axisLeft (y).ticks (2));\n\n        const line = d3\n          .line ()\n          .defined (d => !isNaN (d.value))\n          .x (d => x (d.threshold))\n          .y (d => y (d.value));\n\n        const area = d3\n          .area ()\n          .defined (d =>\n            betweenThreshold (0.5, currentThreshold * 0.01, d.threshold)\n          )\n          .x (d => x (d.threshold))\n          .y0 (y (0))\n          .y1 (d => y (d.value));\n\n        svg\n          .append ('path')\n          .datum (data.filter (area.defined ()))\n          .attr ('fill', getAreaColor (index, defaultValue, currentValue))\n          .attr ('d', area);\n\n        svg\n          .append ('path')\n          .datum (data)\n          .attr ('fill', 'none')\n          .attr ('stroke', 'grey')\n          .attr ('stroke-width', 1.5)\n          .attr ('stroke-linejoin', 'round')\n          .attr ('stroke-linecap', 'round')\n          .attr ('d', line);\n\n        svg\n          .append ('line')\n          .attr ('x1', x (currentThreshold * 0.01))\n          .attr ('y1', y (currentValue))\n          .attr ('x2', x (currentThreshold * 0.01))\n          .attr (\n            'y2',\n            margin.top + index * margin.inBetween + (index + 1) * eachHeight\n          )\n          .attr ('stroke-width', 2)\n          .attr ('stroke', getStrokeColor (index, defaultValue, currentValue))\n          .style ('stroke-dasharray', '5,5');\n\n        svg\n          .append ('text')\n          .attr ('x', x (currentThreshold * 0.01))\n          .attr ('y', y (currentValue + 8))\n          .attr ('text-anchor', 'middle')\n          .text (`${currentValue}%`)\n          .attr ('font-family', 'sans-serif')\n          .attr ('font-size', '16px')\n          .attr ('fill', getStrokeColor (index, defaultValue, currentValue));\n\n        svg.append ('g').call (xAxis);\n\n        svg.append ('g').call (yAxis);\n      });\n    }\n  }\n\n  getBoxHeight () {\n    const margin = this.getMargin ();\n    return (\n      (this.state.height - margin.top - margin.bottom - margin.inBetween * 2) /\n      3\n    );\n  }\n\n  render () {\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            width: '50%',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        >\n          <div\n            style={{marginTop: '20px'}}\n            className=\"performanceChart\"\n            ref={this.chartPerformanceRef}\n          />\n        </div>\n        <div\n          style={{\n            width: '40%',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        >\n          <div\n            style={{\n              height: `${this.getBoxHeight ()}px`,\n              padding: '0% 5%',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              marginTop: `${this.getMargin ().top + 20}px`,\n              marginBottom: `${this.getMargin ().inBetween}px`,\n            }}\n          >\n            <div>\n              <Typography variant=\"h6\" textAlign=\"center\">\n                Accuracy{' '}\n              </Typography>\n              <Typography variant=\"body2\">\n                Correctly predicted edits out of all edits{' '}\n              </Typography>\n            </div>\n\n          </div>\n\n          <div\n            style={{\n              height: `${this.getBoxHeight ()}px`,\n              padding: '0% 5%',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              marginBottom: `${this.getMargin ().inBetween}px`,\n            }}\n          >\n            <div>\n              <Typography variant=\"h6\" textAlign=\"center\">\n                False Positive Rate\n              </Typography>\n              <Typography variant=\"body2\">\n                Percentage of good edits that are falsely identified as damaing\n                {' '}\n              </Typography>\n            </div>\n          </div>\n\n          <div\n            style={{\n              height: `${this.getBoxHeight ()}px`,\n              padding: '0% 5%',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n            }}\n          >\n            <div>\n              <Typography variant=\"h6\" textAlign=\"center\">\n                False Negative Rate\n              </Typography>\n              <Typography variant=\"body2\">\n                Percentage of damaing edits that won’t be identified {' '}\n              </Typography>\n            </div>\n\n          </div>\n\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ThresholdPerformance;\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport ThresholdSlider from '../../partials/slider';\nimport ThresholdPerformance from './threshold_performance';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nclass ThresholdExplorer extends Component {\n  constructor (props) {\n    super (props);\n    this.chartRef = React.createRef ();\n    this.getWidth = this.getWidth.bind (this);\n    this.drawChart = this.drawChart.bind (this);\n    this.redrawChart = this.redrawChart.bind (this);\n    this.state = {\n      threshold: 60,\n      width: 1000,\n      height: 1000,\n      widthHeightRatio: 0.8,\n      graph1Scale: 1,\n      dotWidth: 0,\n      sliderRange: [20, 1000],\n    };\n  }\n\n  getWidth () {\n    if (this.chartRef.current == null) {\n      return this.state.width;\n    } else {\n      return this.chartRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  onSliderChange = (event, threshold) => {\n    this.setState ({\n      threshold: threshold,\n    });\n    d3.select ('.rowChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n  };\n\n  componentDidMount () {\n    let width = this.getWidth ();\n    let height = width * 0.8;\n    let sliderRight = width - 30;\n\n    this.setState (\n      {\n        width: width,\n        height: height,\n        sliderRange: [10, sliderRight],\n      },\n      () => {\n        this.drawChart ();\n      }\n    );\n\n    let resizedFn;\n    window.addEventListener ('resize', () => {\n      clearTimeout (resizedFn);\n      resizedFn = setTimeout (() => {\n        this.redrawChart ();\n      }, 200);\n    });\n  }\n\n  redrawChart () {\n    let width = this.getWidth ();\n    let sliderRight = width - 30;\n    this.setState ({\n      width: width,\n      height: width * 0.8,\n      sliderRange: [10, sliderRight],\n    });\n    d3.select ('.rowChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n  }\n\n  drawChart () {\n    const margin = {top: 0, right: 30, bottom: 30, left: 10};\n    let width = this.state.width - margin.left - margin.right;\n    let height = this.state.height - margin.top - margin.bottom;\n    // append the svg object to the body of the page\n    let svg = d3\n      .select ('.rowChart')\n      .append ('svg')\n      .attr ('width', width + margin.left + margin.right)\n      .attr ('height', height + margin.top + margin.bottom);\n\n    const threshold = this.state.threshold / 100;\n    const graph1Scale = 1;\n\n    const diameter = width * graph1Scale / 50;\n    const dotWidth = diameter * 0.5;\n    if (this.props.data != null) {\n      const dd = dodge (threshold, this.props.data, diameter);\n\n      const xAxis = g =>\n        g\n          .attr ('transform', `translate(0,${margin.top})`)\n          .call (d3.axisTop (x).ticks (0));\n\n      const x = d3\n        .scaleLinear ()\n        .domain ([0, 1])\n        .nice ()\n        .range ([margin.left, width + margin.left]);\n\n      const shape = d3.scaleOrdinal (\n        dd.map (d => d.category),\n        d3.symbols.map (s =>\n          d3.symbol ().size (diameter * diameter * 0.4).type (s) ()\n        )\n      );\n\n      function dodge (threshold, data, diameter) {\n        const circles = data\n          .map (d => ({\n            xvalue: parseFloat (d.confidence_damage).toFixed (2),\n            x: 0.02 *\n              Math.ceil (parseFloat (d.confidence_damage).toFixed (2) * 50),\n\n            correct: parseFloat (d.confidence_damage).toFixed (2) >=\n              threshold ==\n              d.damaging_label,\n            damaging_predict: parseFloat (d.confidence_damage).toFixed (2) >=\n              threshold,\n            damaging_label: d.damaging_label,\n          }))\n          .sort (function (a, b) {\n            if (a.x == b.x) {\n              let ca = a.correct ? 1 : 0;\n              let cb = b.correct ? 1 : 0;\n              return cb - ca;\n            } else {\n              return b.x - a.x;\n            }\n          });\n        const epsilon = 1e-4;\n\n        let prev = 100;\n        let cnt = 1;\n\n        for (const b of circles) {\n          //determine the position of the dot\n          if (Math.abs (prev - b.x) < epsilon) {\n            // belongs to the same col\n            cnt += 1;\n            b.y = diameter * cnt;\n          } else {\n            prev = b.x;\n            cnt = 1;\n            b.y = diameter;\n          }\n\n          if (b.correct) {\n            b.category = 'circle';\n          } else {\n            b.category = 'cross';\n          }\n\n          if (b.damaging_predict) {\n            b.color = d3.color ('#C57619');\n          } else {\n            b.color = d3.color ('#909090');\n          }\n        }\n\n        return circles;\n      }\n\n      // svg.append ('g').call (xAxis);\n\n      svg\n        .append ('line')\n        .attr ('x1', width + margin.left - dotWidth * 100 * (1 - threshold))\n        .attr ('y1', margin.top)\n        .attr ('x2', width + margin.left - dotWidth * 100 * (1 - threshold))\n        .attr ('y2', height - 30)\n        .attr ('stroke-width', 2)\n        .attr ('stroke', 'black')\n        .style ('stroke-dasharray', '5,5');\n\n      svg\n        .append ('text')\n        .attr ('x', width + margin.left - dotWidth * 100 * (1 - threshold))\n        .attr ('y', height - 15)\n        .attr ('text-anchor', 'middle')\n        .text (threshold)\n        .attr ('font-family', 'sans-serif')\n        .attr ('font-size', '15px');\n\n      svg\n        .append ('g')\n        .selectAll ('path')\n        .data (dd)\n        .join ('path')\n        .attr (\n          'transform',\n          d => `translate(${x (d.x)},${d.y + margin.top}), rotate(45)`\n        )\n        .attr ('fill', function (d) {\n          return d.color;\n        })\n        .attr ('d', d => shape (d.category));\n    }\n  }\n\n  // shouldComponentUpdate (nextProps, nextState) {\n  //   return (\n  //     this.props.performance_data !== nextProps.performance_data ||\n  //     this.state != nextState\n  //   );\n  // }\n\n  render () {\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            width: '52%',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        >\n          <div className=\"upperSettings\">\n            <Typography variant=\"subtitle2\">\n              <Box>MODEL OPTIONS</Box>\n            </Typography>\n          </div>\n          <div\n            style={{\n              marginLeft: `${this.state.sliderRange[0]}px`,\n              width: `${this.state.sliderRange[1] - this.state.sliderRange[0]}px`,\n            }}\n          >\n            <Typography variant=\"subtitle2\">VISUALIZATION</Typography>\n            <ThresholdSlider\n              defaultValue={60}\n              onChangeCommitted={this.onSliderChange}\n              color={'orange'}\n            />\n\n          </div>\n          <div className=\"rowChart\" ref={this.chartRef} />\n        </div>\n\n        <div className=\"sidePanel\">\n          <Typography variant=\"subtitle2\">PERFORMANCE</Typography>\n          <ThresholdPerformance\n            performance_data={this.props.performance_data}\n            threshold={this.state.threshold}\n            key={this.state.threshold}\n          />\n        </div>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ThresholdExplorer;\n","import React, {Component} from 'react';\nimport ThresholdExplorer from './threshold_explorer';\nimport * as d3 from 'd3';\nimport data_balanced from '../../data/data_not-balanced.csv';\nimport data_performance from '../../data/performance.csv';\n\nclass Chart extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      data: null,\n      change: 0,\n    };\n  }\n\n  componentDidMount () {\n    d3\n      .csv (data_balanced, d => {\n        return {\n          confidence_faith: d.confidence_faith,\n          faith_label: d.goodfaith == 'True' ? true : false,\n          confidence_damage: +d.confidence_damage,\n          damaging_label: d.damaging == 'True' ? true : false,\n        };\n      })\n      .then (data => {\n        this.setState ({data: data.slice (0, 2000)});\n        this.setState ({change: 2});\n      });\n  }\n\n  shouldComponentUpdate (nextProps, nextState) {\n    return true;\n  }\n\n  render () {\n    return (\n      <div style={{display: 'flex'}}>\n        {/* <Test data={this.state.data} key={this.state.change} /> */}\n        <ThresholdExplorer\n          data={this.state.data}\n          performance_data={this.props.performanceData}\n          key={this.state.change}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport styled from 'styled-components';\n\nclass ComparePerformance extends Component {\n  constructor (props) {\n    super (props);\n  }\n  state = {};\n  render () {\n    return <div>haha</div>;\n  }\n}\n\nexport default ComparePerformance;\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport dotData from '../../data/new.json';\nimport ThresholdSlider from '../../partials/slider';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport ComparePerformance from './compare_performance';\nimport Grid from '@material-ui/core/Grid';\n\nconst getColor = (accuracy, defaultValue, currentValue) => {\n  let perform = 1;\n  if (accuracy) {\n    if (defaultValue > currentValue) {\n      perform = -1;\n    } else if (defaultValue == currentValue) {\n      perform = 0;\n    } else {\n      perform = 1;\n    }\n  } else {\n    if (defaultValue > currentValue) {\n      perform = 1;\n    } else if (defaultValue == currentValue) {\n      perform = 0;\n    } else {\n      perform = -1;\n    }\n  }\n  //color for stroke\n  if (perform == 1) {\n    return d3.color ('#159256');\n  } else if (perform == 0) {\n    return d3.color ('#878787');\n  } else {\n    return d3.color ('#921515');\n  }\n};\n\nconst getPerformance = data => {\n  const TP = data[0], TN = data[1], FP = data[2], FN = data[3];\n  //accuracy:\n  const acc = (TP + TN) / (TP + TN + FP + FN);\n  const fpr = FP / (FP + TN);\n  const fnr = FN / (FN + TP);\n  return [acc, fpr, fnr];\n};\n\nclass GroupCompareVisualizer extends Component {\n  constructor (props) {\n    super (props);\n    this.visualizationRef = React.createRef ();\n    this.compareChartRef = React.createRef ();\n    this.comparePerformanceRef = React.createRef ();\n    this.wholePerformanceRef = React.createRef ();\n    this.getWidth = this.getWidth.bind (this);\n    this.drawChart = this.drawChart.bind (this);\n    this.redrawChart = this.redrawChart.bind (this);\n    this.getWholePerformance = this.getWholePerformance.bind (this);\n    this.getPerformanceWidth = this.getPerformanceWidth.bind (this);\n    this.getPerformanceForThreshold = this.getPerformanceForThreshold.bind (\n      this\n    );\n    this.state = {\n      threshold: 60,\n      width: 1000,\n      height: 1000,\n      performanceWidth: 1000,\n      group1Color: '#C57619',\n      group2Color: '#3777A5',\n      sliderRange: [20, 1000],\n      wholePerformance: [0, 0, 0],\n      defaultPerformance: [0, 0, 0],\n      anonPerformance: null,\n      loggedPerformance: null,\n    };\n  }\n\n  getWidth () {\n    if (this.compareChartRef.current === null) {\n      return this.state.width;\n    } else {\n      return this.compareChartRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  getPerformanceWidth () {\n    if (this.comparePerformanceRef.current === null) {\n      return this.state.performanceWidth;\n    } else {\n      return this.comparePerformanceRef.current.parentElement.offsetWidth;\n    }\n  }\n\n  getPerformanceHeight () {\n    if (\n      this.wholePerformanceRef.current == null ||\n      this.compareChartRef.current === null\n    ) {\n      return this.state.performanceHeight;\n    } else {\n      return (\n        (this.compareChartRef.current.parentElement.offsetWidth - 60) * 0.5 +\n        200 -\n        this.wholePerformanceRef.current.offsetHeight\n      );\n    }\n  }\n\n  getPerformanceForThreshold () {\n    const threshold = this.state.threshold * 0.01;\n    if (this.props.anonData != null && this.props.loggedData != null) {\n      const anonFP = this.props.anonData.filter (function (d) {\n        return d.confidence_damage >= threshold && !d.damaging_label;\n      }).length;\n\n      const anonTP = this.props.anonData.filter (function (d) {\n        return d.confidence_damage >= threshold && d.damaging_label;\n      }).length;\n\n      const anonFN = this.props.anonData.filter (function (d) {\n        return d.confidence_damage < threshold && d.damaging_label;\n      }).length;\n\n      const anonTN = this.props.anonData.filter (function (d) {\n        return d.confidence_damage < threshold && !d.damaging_label;\n      }).length;\n\n      const logFP = this.props.loggedData.filter (function (d) {\n        return d.confidence_damage >= threshold && !d.damaging_label;\n      }).length;\n\n      const logTP = this.props.loggedData.filter (function (d) {\n        return d.confidence_damage >= threshold && d.damaging_label;\n      }).length;\n\n      const logFN = this.props.loggedData.filter (function (d) {\n        return d.confidence_damage < threshold && d.damaging_label;\n      }).length;\n\n      const logTN = this.props.loggedData.filter (function (d) {\n        return d.confidence_damage < threshold && !d.damaging_label;\n      }).length;\n      return {\n        anon: [anonTP, anonTN, anonFP, anonFN],\n        logged: [logTP, logTN, logFP, logFN],\n      };\n    } else {\n      return {\n        anon: this.state.anonPerformance,\n        Logged: this.state.loggedPerformance,\n      };\n    }\n  }\n\n  onSliderChange = (event, threshold) => {\n    this.setState ({\n      threshold: threshold,\n    });\n\n    this.getWholePerformance ();\n\n    d3.select ('.compareChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n    d3.select ('.comparePerformance svg').remove ();\n    this.drawPerformanceChart = this.drawPerformanceChart.bind (this);\n    this.drawPerformanceChart ();\n  };\n\n  componentDidMount () {\n    let width = this.getWidth ();\n    let height = (width - 60) * 0.5;\n    let performanceWidth = this.getPerformanceWidth ();\n    let performanceHeight = this.getPerformanceHeight ();\n    let sliderRight = width - 40;\n    this.getWholePerformance ();\n    let acc = 0;\n    let fpr = 0;\n    let fnr = 0;\n    if (this.props.performanceData != null) {\n      const data = this.props.performanceData;\n      acc = data[50].damaging_accuracy * 100;\n      fpr = 100 * data[50].damaging_fpr;\n      fnr = 100 * data[50].damaging_fnr;\n    }\n\n    this.setState (\n      {\n        width: width,\n        height: height,\n        sliderRange: [10, sliderRight],\n        performanceWidth: performanceWidth,\n        performanceHeight: performanceHeight,\n        defaultPerformance: [acc.toFixed (1), fpr.toFixed (1), fnr.toFixed (1)],\n      },\n      () => {\n        this.drawChart ();\n        this.drawPerformanceChart ();\n      }\n    );\n\n    let resizedFn;\n    window.addEventListener ('resize', () => {\n      clearTimeout (resizedFn);\n      resizedFn = setTimeout (() => {\n        this.redrawChart ();\n      }, 200);\n    });\n  }\n\n  redrawChart () {\n    let width = this.getWidth ();\n    let performanceWidth = this.getPerformanceWidth ();\n    let performanceHeight = this.getPerformanceHeight ();\n    let sliderRight = width - 40;\n    this.setState ({\n      width: width,\n      height: (width - 60) * 0.5,\n      performanceWidth: performanceWidth,\n      performanceHeight: performanceHeight,\n\n      sliderRange: [10, sliderRight],\n    });\n    d3.select ('.compareChart svg').remove ();\n    this.drawChart = this.drawChart.bind (this);\n    this.drawChart ();\n    d3.select ('.comparePerformance svg').remove ();\n    this.drawPerformanceChart = this.drawPerformanceChart.bind (this);\n    this.drawPerformanceChart ();\n  }\n\n  getWholePerformance () {\n    if (\n      this.props.performanceData != null &&\n      this.props.anonData != null &&\n      this.props.loggedData != null\n    ) {\n      const data = this.props.performanceData;\n      const acc = data[this.state.threshold].damaging_accuracy * 100;\n      const fpr = 100 * data[this.state.threshold].damaging_fpr;\n      const fnr = 100 * data[this.state.threshold].damaging_fnr;\n      const performance = this.getPerformanceForThreshold ();\n      const anonPerf = performance.anon;\n      const loggedPerf = performance.logged;\n\n      this.setState ({\n        wholePerformance: [acc.toFixed (1), fpr.toFixed (1), fnr.toFixed (1)],\n        anonPerformance: anonPerf,\n        loggedPerformance: loggedPerf,\n      });\n    }\n  }\n  drawPerformanceChart () {\n    const margin = {top: 0, right: 20, bottom: 20, left: 0};\n    let width = this.state.performanceWidth - margin.left - margin.right;\n    let height = this.state.performanceHeight - margin.top - margin.bottom;\n    let svg = d3\n      .select ('.comparePerformance')\n      .append ('svg')\n      .attr ('width', width + margin.left + margin.right)\n      .attr ('height', height + margin.top + margin.bottom);\n\n    let blockHeight = height / 3;\n    let vizHeight = blockHeight / 3;\n    // TP, TN, FP, FN\n    if (\n      this.state.anonPerformance != null &&\n      this.state.loggedPerformance != null\n    ) {\n      let anonPerformance = getPerformance (this.state.anonPerformance);\n      let loggedPerformance = getPerformance (this.state.loggedPerformance);\n      let wholePerformance = this.state.wholePerformance.map (function (perf) {\n        return perf / 100;\n      });\n      const x = d3\n        .scaleLinear ()\n        .domain ([0, 1])\n        .nice ()\n        .range ([margin.left + width / 4, margin.left + width]);\n\n      function drawPerformance (\n        height,\n        defaultPerformance,\n        currentPerformance,\n        color\n      ) {\n        const markHeight = 5;\n        const markWidth = 6;\n        svg\n          .append ('line')\n          .attr ('x1', margin.left + width / 4)\n          .attr ('y1', height)\n          .attr ('x2', margin.left + width)\n          .attr ('y2', height)\n          .attr ('stroke-width', 2)\n          .attr ('stroke', 'grey');\n        svg\n          .append ('line')\n          .attr ('x1', x (currentPerformance))\n          .attr ('y1', height - markHeight)\n          .attr ('x2', x (currentPerformance))\n          .attr ('y2', height + markHeight)\n          .attr ('stroke-width', markWidth)\n          .attr ('stroke', color);\n\n        svg\n          .append ('line')\n          .attr ('x1', x (defaultPerformance))\n          .attr ('y1', height)\n          .attr ('x2', x (currentPerformance))\n          .attr ('y2', height)\n          .attr ('stroke-width', 2)\n          .attr ('stroke', color);\n      }\n\n      ['Accuracy', 'FPR', 'FNR'].forEach ((item, index) => {\n        const anonHeight = blockHeight * index + vizHeight * 2;\n        const loggedHeight = margin.top + blockHeight * index + vizHeight * 3;\n\n        const markHeight = 5;\n        const markWidth = 6;\n\n        drawPerformance (\n          anonHeight,\n          wholePerformance[index],\n          anonPerformance[index],\n          d3.color (this.state.group1Color)\n        );\n        drawPerformance (\n          loggedHeight,\n          wholePerformance[index],\n          loggedPerformance[index],\n          d3.color (this.state.group2Color)\n        );\n        // svg\n        //   .append ('line')\n        //   .attr ('x1', margin.left + width / 4)\n        //   .attr ('y1', anonHeight)\n        //   .attr ('x2', margin.left + width)\n        //   .attr ('y2', anonHeight)\n        //   .attr ('stroke-width', 2)\n        //   .attr ('stroke', 'black');\n        // svg\n        //   .append ('line')\n        //   .attr ('x1', x (anonPerformance[index]))\n        //   .attr ('y1', anonHeight - markHeight)\n        //   .attr ('x2', x (anonPerformance[index]))\n        //   .attr ('y2', anonHeight + markHeight)\n        //   .attr ('stroke-width', markWidth)\n        //   .attr ('stroke', 'red');\n\n        // svg\n        //   .append ('line')\n        //   .attr ('x1', margin.left + width / 4)\n        //   .attr ('y1', loggedHeight)\n        //   .attr ('x2', margin.left + width)\n        //   .attr ('y2', loggedHeight)\n        //   .attr ('stroke-width', 2)\n        //   .attr ('stroke', 'black');\n\n        // svg\n        //   .append ('line')\n        //   .attr ('x1', x (loggedPerformance[index]))\n        //   .attr ('y1', loggedHeight - markHeight)\n        //   .attr ('x2', x (loggedPerformance[index]))\n        //   .attr ('y2', loggedHeight + markHeight)\n        //   .attr ('stroke-width', markWidth)\n        //   .attr ('stroke', 'red');\n      });\n    }\n  }\n\n  drawChart () {\n    const margin = {top: 0, right: 40, bottom: 0, left: 0};\n    let width = this.state.width - margin.left - margin.right;\n    let height = width / 2;\n    // append the svg object to the body of the page\n    let svg = d3\n      .select ('.compareChart')\n      .append ('svg')\n      .attr ('width', width + margin.left + margin.right)\n      .attr ('height', height);\n\n    var customCross = {\n      draw: function (context, size) {\n        let s = Math.sqrt (size * 2) / 2;\n        let w = Math.sqrt (size) / 6;\n        context.moveTo (-s, w);\n        context.lineTo (s, w);\n        context.lineTo (s, -w);\n        context.lineTo (-s, -w);\n        context.closePath ();\n        context.moveTo (w, s);\n        context.lineTo (w, -s);\n        context.lineTo (-w, -s);\n        context.lineTo (-w, s);\n        context.closePath ();\n      },\n    };\n\n    const groupSize = width / 2;\n\n    const pack = data =>\n      d3.pack ().size ([groupSize - 2, groupSize - 2]).padding (3) (\n        d3\n          .hierarchy (data)\n          .sum (d => d.value)\n          .sort ((a, b) => b.value - a.value)\n      );\n\n    const threshold = this.state.threshold * 0.01;\n\n    const app = this;\n\n    if (\n      this.props.anonData != null &&\n      this.props.loggedData != null &&\n      this.state.anonPerformance != null &&\n      this.state.loggedPerformance != null\n    ) {\n      const anonPerf = this.state.anonPerformance;\n      const loggedPerf = this.state.loggedPerformance;\n      const anonTP = anonPerf[0],\n        anonTN = anonPerf[1],\n        anonFP = anonPerf[2],\n        anonFN = anonPerf[3];\n      const logTP = loggedPerf[0],\n        logTN = loggedPerf[1],\n        logFP = loggedPerf[2],\n        logFN = loggedPerf[3];\n\n      const dots = pack (dotData).children\n        .slice (0, this.props.sliceNumber)\n        .map (d => ({\n          x: d.x,\n          y: d.y,\n          r: d.r,\n          category: 'cross',\n        }))\n        .sort (function (a, b) {\n          const centerX = margin.left + height;\n          const centerY = height / 2 + margin.top;\n          const distA = Math.sqrt (\n            Math.pow (a.x - centerX, 2) + Math.pow (a.y - centerY, 2)\n          );\n          const distB = Math.sqrt (\n            Math.pow (b.x - centerX, 2) + Math.pow (b.y - centerY, 2)\n          );\n          return distA - distB;\n        });\n\n      const dotRadius = dots[0].r;\n\n      function getSymbolColor (color, fp, tp, fn, tn) {\n        let dd = [];\n        const cp = [fp, fp + tp, fp + tp + fn];\n        dots.forEach (function (dot, index) {\n          if (index < cp[0]) {\n            dd.push ({\n              //false positive\n              x: dot.x,\n              y: dot.y,\n              category: 0,\n              color: color,\n            });\n          } else if (index >= cp[0] && index < cp[1]) {\n            dd.push ({\n              //true positive\n              x: dot.x,\n              y: dot.y,\n              category: 1,\n              color: color,\n            });\n          } else if (index >= cp[1] && index < cp[2]) {\n            dd.push ({\n              //false negative\n              x: dot.x,\n              y: dot.y,\n              category: 0,\n              color: d3.color ('#909090'),\n            });\n          } else {\n            dd.push ({\n              //false positive\n              x: dot.x,\n              y: dot.y,\n              category: 1,\n              color: d3.color ('#909090'),\n            });\n          }\n        });\n\n        return dd;\n      }\n      let anonDots = getSymbolColor (\n        d3.color (this.state.group1Color),\n        anonFP,\n        anonTP,\n        anonFN,\n        anonTN\n      );\n      let logDots = getSymbolColor (\n        d3.color (this.state.group2Color),\n        logFP,\n        logTP,\n        logFN,\n        logTN\n      );\n\n      svg\n        .append ('g')\n        .selectAll ('path')\n        .data (anonDots)\n        .join ('path')\n        .attr (\n          'transform',\n          d => `translate(${margin.left + d.x},${d.y}),rotate(45)`\n        )\n        .attr ('fill', d => d.color)\n        .attr (\n          'd',\n          d3\n            .symbol ()\n            .type (function (d) {\n              if (d.category == 0) {\n                return customCross;\n              } else {\n                return d3.symbolCircle;\n              }\n            })\n            .size (dotRadius * dotRadius * 1.5)\n        );\n\n      svg\n        .append ('g')\n        .selectAll ('path')\n        .data (logDots)\n        .join ('path')\n        .attr (\n          'transform',\n          d => `translate(${margin.left + width / 2 + d.x},${d.y}),rotate(45)`\n        )\n        .attr ('fill', d => d.color)\n        .attr (\n          'd',\n          d3\n            .symbol ()\n            .type (function (d) {\n              if (d.category == 0) {\n                return customCross;\n              } else {\n                return d3.symbolCircle;\n              }\n            })\n            .size (dotRadius * dotRadius * 1.5)\n        );\n    }\n  }\n\n  render () {\n    return (\n      <React.Fragment>\n        <div\n          ref={this.visualizationRef}\n          style={{\n            width: '52%',\n            display: 'inline-block',\n            verticalAlign: 'top',\n          }}\n        >\n          <div className=\"upperSettings\">\n            <Typography variant=\"subtitle2\">\n              <Box>\n                MODEL OPTIONS\n              </Box>\n\n            </Typography>\n          </div>\n          <div\n            style={{\n              marginLeft: `${this.state.sliderRange[0]}px`,\n              width: `${this.state.sliderRange[1] - this.state.sliderRange[0]}px`,\n            }}\n          >\n            <ThresholdSlider\n              defaultValue={60}\n              onChangeCommitted={this.onSliderChange}\n            />\n\n          </div>\n          <div className=\"compareChart\" ref={this.compareChartRef} />\n          <div\n            style={{\n              marginLeft: `${this.state.sliderRange[0]}px`,\n              width: `${this.state.sliderRange[1] - this.state.sliderRange[0]}px`,\n              transform: 'translate(0px,-20px)',\n            }}\n            ref={this.visualizationRef}\n          >\n            <div\n              style={{\n                width: '50%',\n                display: 'inline-block',\n                // transform: 'translate(0,0px)',\n              }}\n            >\n              <Typography\n                variant=\"h6\"\n                component=\"div\"\n                style={{\n                  textAlign: 'center',\n                  color: `${this.state.group1Color}`,\n                }}\n              >\n                Anonymous Edits\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                component=\"div\"\n                style={{textAlign: 'center'}}\n              >\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <Box width=\"80%\">\n                    Model performance on edits made by anonymous IP users\n                  </Box>\n                </div>\n              </Typography>\n\n            </div>\n            <div\n              style={{\n                width: '50%',\n                display: 'inline-block',\n                // transform: 'translate(0,-10px)',\n              }}\n            >\n              <Typography\n                variant=\"h6\"\n                component=\"div\"\n                style={{\n                  textAlign: 'center',\n                  color: `${this.state.group2Color}`,\n                }}\n              >\n                Logged-in Edits\n              </Typography>\n\n              <Typography\n                variant=\"body2\"\n                component=\"div\"\n                style={{textAlign: 'center'}}\n              >\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <Box width=\"80%\">\n                    Model performance on edits made by logged-in editors\n                  </Box>\n                </div>\n              </Typography>\n\n            </div>\n          </div>\n        </div>\n\n        <div className=\"sidePanel\">\n          <div\n            ref={this.wholePerformanceRef}\n            style={{paddingBottom: '30px', borderBottom: '1px solid lightgrey'}}\n          >\n            <Typography component=\"div\" variant=\"subtitle2\">\n              PERFORMANCE\n            </Typography>\n            <Grid\n              container\n              spacing={3}\n              style={{marginTop: '5px', textAlign: 'left', marginLeft: '10px'}}\n            >\n              <Grid item xs={4}>\n                <Typography\n                  component=\"div\"\n                  style={{\n                    fontWeight: 'bold',\n                  }}\n                >\n                  Accuracy\n                </Typography>\n                <Typography\n                  component=\"div\"\n                  className=\"compareWholePerformanceData\"\n                  style={{\n                    color: `${getColor (true, this.state.defaultPerformance[0], this.state.wholePerformance[0])}`,\n                  }}\n                >\n                  <Box className=\"compareWholePerformanceData\">\n                    {this.state.wholePerformance[0]}%\n                  </Box>\n\n                </Typography>\n\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"div\" style={{fontWeight: 'bold'}}>\n                  FPR\n                </Typography>\n                <Typography\n                  component=\"div\"\n                  style={{\n                    color: `${getColor (true, this.state.defaultPerformance[1], this.state.wholePerformance[1])}`,\n                  }}\n                >\n                  <Box className=\"compareWholePerformanceData\">\n                    {this.state.wholePerformance[1]}%\n                  </Box>\n\n                </Typography>\n\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"div\" style={{fontWeight: 'bold'}}>\n                  FNR\n                </Typography>\n                <Typography\n                  component=\"div\"\n                  style={{\n                    color: `${getColor (true, this.state.defaultPerformance[2], this.state.wholePerformance[2])}`,\n                  }}\n                >\n                  <Box className=\"compareWholePerformanceData\">\n                    {this.state.wholePerformance[2]}%\n                  </Box>\n                </Typography>\n              </Grid>\n            </Grid>\n          </div>\n          <div>\n            <div style={{width: '20%', display: 'inline-block'}}>\n              <div style={{height: `${this.state.performanceHeight / 3}px`}}>\n                Accuracy\n              </div>\n              <div style={{height: `${this.state.performanceHeight / 3}px`}}>\n                FPR\n              </div>\n              <div style={{height: `${this.state.performanceHeight / 3}px`}}>\n                FNR\n              </div>\n            </div>\n            <div style={{width: '80%', display: 'inline-block'}}>\n              <div\n                className=\"comparePerformance\"\n                ref={this.comparePerformanceRef}\n              />\n            </div>\n          </div>\n\n        </div>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GroupCompareVisualizer;\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport data_balanced from '../../data/data_group.csv';\nimport GroupCompareVisualizer from './compare_visualizer';\n\nconst groupSliceNumber = 100;\nclass GroupCompareChart extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      anonData: null,\n      loggedData: null,\n      change: 0,\n    };\n  }\n\n  componentDidMount () {\n    d3\n      .csv (data_balanced, d => {\n        return {\n          anonymous: d.anonymous == 'True' ? true : false,\n          confidence_faith: +d.confidence_faith,\n          faith_label: d.goodfaith == 'True' ? true : false,\n          confidence_damage: +d.confidence_damage,\n          damaging_label: d.damaging == 'True' ? true : false,\n        };\n      })\n      .then (data => {\n        const anonData = data\n          .filter (d => {\n            return d.anonymous;\n          })\n          .slice (0, groupSliceNumber);\n        const loggedData = data\n          .filter (d => {\n            return !d.anonymous;\n          })\n          .slice (0, groupSliceNumber);\n        this.setState ({anonData: anonData, loggedData: loggedData});\n        this.setState ({change: 2});\n      });\n  }\n\n  //   shouldComponentUpdate (nextProps, nextState) {\n  //     return true;\n  //   }\n\n  render () {\n    console.log ('hi');\n    console.log (this.props);\n    return (\n      <div style={{display: 'flex'}}>\n        {/* <Test data={this.state.data} key={this.state.change} /> */}\n        <GroupCompareVisualizer\n          anonData={this.state.anonData}\n          loggedData={this.state.loggedData}\n          key={this.state.change}\n          performanceData={this.props.performanceData}\n          sliceNumber={groupSliceNumber}\n        />\n      </div>\n    );\n  }\n}\n\nexport default GroupCompareChart;\n","import React, {Component} from 'react';\nimport Chart from './threshold_explorer/threshold_explorer_section';\nimport GroupCompareChart from './group_compare/section';\nimport Typography from '@material-ui/core/Typography';\nimport data_performance from '../data/performance.csv';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\nimport {curveNatural} from 'd3';\n\nconst SectionHeader = styled.div`\n  padding-left: 10px;\n  padding-top: 5px;\n  padding-bottom: 30px;\n  border-bottom: 1px solid lightgrey;\n`;\n\nconst Section = styled.div`\n  display: block;\n  margin-bottom: 15vh;\n`;\n\nclass MainContent extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      performance_data: null,\n      change: 0,\n    };\n  }\n\n  componentDidMount () {\n    d3\n      .csv (data_performance, d => {\n        return {\n          threshold: +d.threshold,\n          damaging_accuracy: +d.damaging_accuracy,\n          damaging_fpr: +d.damaging_fpr,\n          damaging_fnr: +d.damaging_fnr,\n          faith_accuracy: +d.faith_accuracy,\n          faith_fpr: +d.faith_fpr,\n          faith_fnr: +d.faith_fnr,\n        };\n      })\n      .then (data => {\n        this.setState ({performance_data: data});\n        this.setState ({change: 1});\n      });\n  }\n\n  state = {};\n  render () {\n    return (\n      <React.Fragment>\n        {' '} <Section>\n\n          <SectionHeader>\n            <Typography variant=\"subtitle1\" style={{textAlign: 'left'}}>\n              Threshold Explorer\n            </Typography>\n            <div\n              style={{\n                width: '50%',\n                marginTop: '10px',\n              }}\n            >\n              <Typography variant=\"body2\" style={{color: 'grey'}}>\n                Threshold Explorer helps you visualize model performance under specific thresholds with an example dataset. To start, select a model below, then pick a threshold.\n                {' '}\n              </Typography>\n            </div>\n\n          </SectionHeader>\n\n          <Chart\n            performanceData={this.state.performance_data}\n            key={this.state.change}\n          />\n        </Section>\n        <Section>\n          <SectionHeader>\n            <Typography variant=\"subtitle1\" style={{textAlign: 'left'}}>\n              Disparity\n            </Typography>\n            <div\n              style={{\n                width: '50%',\n                marginTop: '10px',\n              }}\n            >\n              <Typography variant=\"body2\" style={{color: 'grey'}}>\n                Threshold Explorer helps you visualize model performance under specific thresholds with an example dataset. To start, select a model below, then pick a threshold.\n                {' '}\n              </Typography>\n            </div>\n          </SectionHeader>\n          <GroupCompareChart\n            performanceData={this.state.performance_data}\n            key={this.state.change}\n          />\n        </Section>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MainContent;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport * as d3 from 'd3';\nimport Box from '@material-ui/core/Box';\nimport Chart from './components/threshold_explorer/threshold_explorer_section';\nimport Paper from '@material-ui/core/Paper';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {createMuiTheme} from '@material-ui/core/styles';\nimport {ThemeProvider} from '@material-ui/styles';\nimport styled from 'styled-components';\nimport GroupCompareChart from './components/group_compare/section';\nimport MainContent from './components/content';\n\nconst SectionHeader = styled.div`\n  padding-left: 10px;\n  padding-top: 5px;\n  padding-bottom: 30px;\n  border-bottom: 1px solid lightgrey;\n`;\n\n// const PerformanceTitle = styled.h1`\n//   font-size: 1.1em;\n//   text-align: left;\n//   margin-bottom: 0px;\n//   font-weight: 800;\n// `;\n\nconst Section = styled.div`\n  display: block;\n  margin-bottom: 15vh;\n`;\n\nconst drawerWidth = 240;\n\nconst theme = createMuiTheme ({\n  typography: {\n    root: {\n      component: 'div',\n    },\n    fontFamily: 'Noto Sans',\n    subtitle1: {\n      fontFamily: 'Noto Serif',\n      fontSize: '24px',\n    },\n    subtitle2: {\n      fontSize: '12px',\n      marginTop: '10px',\n      color: '#B0B0B0',\n      fontWeight: 'bold',\n      textTransform: 'capitalize',\n      textAlign: 'left',\n    },\n    h6: {\n      fontWeight: 'bold',\n      fontSize: '16px',\n      textAlign: 'left',\n    },\n    body1: {\n      // textAlign: 'left',\n      fontSize: '14px',\n    },\n    body2: {\n      textAlign: 'left',\n      fontSize: '14px',\n    },\n    button: {\n      fontStyle: 'italic',\n    },\n  },\n});\n\nconst useStyles = makeStyles (theme => ({\n  root: {\n    display: 'flex',\n    // fontFamily: 'Noto Sans, sans-serif',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    textAlign: 'center',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    color: 'red',\n  },\n  paper: {\n    textAlign: 'left',\n    padding: '20px 20px',\n  },\n  list: {\n    fontSize: '19px',\n    color: 'black',\n    textAlign: 'center',\n  },\n  // necessary for content to be below app bar\n  toolbar: {\n    padding: theme.spacing (2),\n  },\n  content: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing (2),\n  },\n}));\n\nfunction App () {\n  const classes = useStyles ();\n  return (\n    <ThemeProvider theme={theme}>\n\n      <div className=\"App\">\n        <body>\n          <div className={classes.root}>\n\n            <Drawer\n              className={classes.drawer}\n              variant=\"permanent\"\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              anchor=\"left\"\n            >\n              <Paper className={classes.paper} elevation=\"0\">\n                <div style={{textAlign: 'center'}}>\n                  <Typography variant=\"subtitle1\">\n                    WIKIPEDIA\n                  </Typography>\n                  <Typography style={{textAlign: 'center'}}>\n                    ORES Explorer\n                  </Typography>\n                </div>\n\n              </Paper>\n              <List style={{marginTop: '100px'}}>\n                {[\n                  'About ORES',\n                  'Threshold Explorer',\n                  'Threshold Calculator',\n                  'Group Comparison',\n                ].map ((text, index) => (\n                  <ListItem className={classes.list} button key={text}>\n                    {/* <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <InboxIcon />}\n                </ListItemIcon> */}\n                    <ListItemText primary={text} />\n                  </ListItem>\n                ))}\n              </List>\n\n            </Drawer>\n            <main className={classes.content}>\n              <MainContent />\n\n            </main>\n          </div>\n        </body>\n\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render (\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById ('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister ();\n","module.exports = __webpack_public_path__ + \"static/media/performance.760a321c.csv\";","module.exports = __webpack_public_path__ + \"static/media/data_not-balanced.2c5d8911.csv\";","module.exports = __webpack_public_path__ + \"static/media/data_group.2c5d8911.csv\";"],"sourceRoot":""}